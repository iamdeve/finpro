[{"/home/yamin/Downloads/work/finpro/src/reportWebVitals.js":"1","/home/yamin/Downloads/work/finpro/src/components/MenuBar.js":"2","/home/yamin/Downloads/work/finpro/src/views/Reports/Reports.js":"3","/home/yamin/Downloads/work/finpro/src/views/RandD/RandD.js":"4","/home/yamin/Downloads/work/finpro/src/RoundedBars.js":"5","/home/yamin/Downloads/work/finpro/src/views/Marketing/Marketing.js":"6","/home/yamin/Downloads/work/finpro/src/views/Sales/Sales.js":"7","/home/yamin/Downloads/work/finpro/src/views/GandA/GandA.js":"8","/home/yamin/Downloads/work/finpro/src/App.js":"9","/home/yamin/Downloads/work/finpro/src/views/Auth/SignUp/SignUp.js":"10","/home/yamin/Downloads/work/finpro/src/context/context.js":"11","/home/yamin/Downloads/work/finpro/src/views/Revenue/Revenue.js":"12","/home/yamin/Downloads/work/finpro/src/views/Auth/Login/Login.js":"13","/home/yamin/Downloads/work/finpro/src/routes.js":"14","/home/yamin/Downloads/work/finpro/src/views/Checkout/Checkout.js":"15","/home/yamin/Downloads/work/finpro/src/context/axios.js":"16","/home/yamin/Downloads/work/finpro/src/index.js":"17","/home/yamin/Downloads/work/finpro/src/views/Settings/Settings.js":"18","/home/yamin/Downloads/work/finpro/src/views/Pricing/Pricing.js":"19","/home/yamin/Downloads/work/finpro/src/views/Billing/Billing.js":"20","/home/yamin/Downloads/work/finpro/src/service.js":"21","/home/yamin/Downloads/work/finpro/src/context/types.js":"22","/home/yamin/Downloads/work/finpro/src/context/fetch-service.js":"23","/home/yamin/Downloads/work/finpro/src/context/revenue-service.js":"24","/home/yamin/Downloads/work/finpro/src/views/Revenue/RevenueInputs.js":"25","/home/yamin/Downloads/work/finpro/src/views/Revenue/ExpenseInputs.js":"26","/home/yamin/Downloads/work/finpro/src/views/Revenue/StartingCapitalInput.js":"27","/home/yamin/Downloads/work/finpro/src/views/Sales/ExpenseInputs.js":"28","/home/yamin/Downloads/work/finpro/src/views/Sales/SalesInputs.js":"29","/home/yamin/Downloads/work/finpro/src/context/input-service.js":"30","/home/yamin/Downloads/work/finpro/src/views/Sales/ContractorExpense.js":"31","/home/yamin/Downloads/work/finpro/src/views/Marketing/ExpenseInputs.js":"32","/home/yamin/Downloads/work/finpro/src/views/Marketing/MarketingInputs.js":"33","/home/yamin/Downloads/work/finpro/src/views/Marketing/ContractorExpense.js":"34","/home/yamin/Downloads/work/finpro/src/views/RandD/ExpenseInputs.js":"35","/home/yamin/Downloads/work/finpro/src/views/RandD/RandDInputs.js":"36","/home/yamin/Downloads/work/finpro/src/views/RandD/ContractorExpense.js":"37","/home/yamin/Downloads/work/finpro/src/views/GandA/ExpenseInputs.js":"38","/home/yamin/Downloads/work/finpro/src/views/GandA/GandAInputs.js":"39","/home/yamin/Downloads/work/finpro/src/views/GandA/ContractorExpense.js":"40"},{"size":362,"mtime":1608795239976,"results":"41","hashOfConfig":"42"},{"size":4895,"mtime":1608993376387,"results":"43","hashOfConfig":"42"},{"size":142,"mtime":1608915773548,"results":"44","hashOfConfig":"42"},{"size":6304,"mtime":1609090620632,"results":"45","hashOfConfig":"42"},{"size":3670,"mtime":1608967516338,"results":"46","hashOfConfig":"42"},{"size":6368,"mtime":1609088943750,"results":"47","hashOfConfig":"42"},{"size":6304,"mtime":1609084866535,"results":"48","hashOfConfig":"42"},{"size":6304,"mtime":1609091062990,"results":"49","hashOfConfig":"42"},{"size":604,"mtime":1609077940563,"results":"50","hashOfConfig":"42"},{"size":4519,"mtime":1608989211172,"results":"51","hashOfConfig":"42"},{"size":5567,"mtime":1609078969321,"results":"52","hashOfConfig":"42"},{"size":6632,"mtime":1609080834454,"results":"53","hashOfConfig":"42"},{"size":4745,"mtime":1608997088034,"results":"54","hashOfConfig":"42"},{"size":1794,"mtime":1608990562862,"results":"55","hashOfConfig":"42"},{"size":2187,"mtime":1608795239980,"results":"56","hashOfConfig":"42"},{"size":401,"mtime":1608986503523,"results":"57","hashOfConfig":"42"},{"size":579,"mtime":1608915773544,"results":"58","hashOfConfig":"42"},{"size":7174,"mtime":1609055705651,"results":"59","hashOfConfig":"42"},{"size":1441,"mtime":1608915773548,"results":"60","hashOfConfig":"42"},{"size":5404,"mtime":1608915773544,"results":"61","hashOfConfig":"42"},{"size":601,"mtime":1609055701568,"results":"62","hashOfConfig":"42"},{"size":344,"mtime":1609078930106,"results":"63","hashOfConfig":"42"},{"size":859,"mtime":1609081910509,"results":"64","hashOfConfig":"42"},{"size":2380,"mtime":1609070862316,"results":"65","hashOfConfig":"42"},{"size":8240,"mtime":1609081177574,"results":"66","hashOfConfig":"42"},{"size":9739,"mtime":1609084270292,"results":"67","hashOfConfig":"42"},{"size":6647,"mtime":1609072118046,"results":"68","hashOfConfig":"42"},{"size":13337,"mtime":1609087553207,"results":"69","hashOfConfig":"42"},{"size":8506,"mtime":1609088465788,"results":"70","hashOfConfig":"42"},{"size":1586,"mtime":1609082042807,"results":"71","hashOfConfig":"42"},{"size":6841,"mtime":1609088317712,"results":"72","hashOfConfig":"42"},{"size":16407,"mtime":1609089886771,"results":"73","hashOfConfig":"42"},{"size":8670,"mtime":1609089167054,"results":"74","hashOfConfig":"42"},{"size":6857,"mtime":1609088887087,"results":"75","hashOfConfig":"42"},{"size":13337,"mtime":1609090708779,"results":"76","hashOfConfig":"42"},{"size":8515,"mtime":1609090862063,"results":"77","hashOfConfig":"42"},{"size":6841,"mtime":1609090741211,"results":"78","hashOfConfig":"42"},{"size":16391,"mtime":1609091291133,"results":"79","hashOfConfig":"42"},{"size":8486,"mtime":1609091417209,"results":"80","hashOfConfig":"42"},{"size":6841,"mtime":1609091318581,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1c1kmpq",{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"89"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/yamin/Downloads/work/finpro/src/reportWebVitals.js",[],"/home/yamin/Downloads/work/finpro/src/components/MenuBar.js",[],["174","175"],"/home/yamin/Downloads/work/finpro/src/views/Reports/Reports.js",[],["176","177"],"/home/yamin/Downloads/work/finpro/src/views/RandD/RandD.js",[],"/home/yamin/Downloads/work/finpro/src/RoundedBars.js",["178","179"],"//Custom rewrite for radius border on bar draw\n//Code from https://github.com/jedtrow/Chart.js-Rounded-Bar-Charts with a few adjustments\n\nimport { Chart as ChartJS } from 'react-chartjs-2';\n\nChartJS.elements.Rectangle.prototype.draw = function () {\n\n\tconst ctx = this._chart.ctx;\n\tconst vm = this._view;\n\tlet left, right, top, bottom, signX, signY, borderSkipped, radius;\n\tlet borderWidth = vm.borderWidth;\n\t// Set Radius Here\n\t// If radius is large enough to cause drawing errors a max radius is imposed\n\tlet cornerRadius = 20;\n\n\tif (!vm.horizontal) {\n\t\t// bar\n\t\tleft = vm.x - vm.width / 2;\n\t\tright = vm.x + vm.width / 2;\n\t\ttop = vm.y;\n\t\tbottom = vm.base;\n\t\tsignX = 1;\n\t\tsignY = bottom > top ? 1 : -1;\n\t\tborderSkipped = vm.borderSkipped || 'bottom';\n\t} else {\n\t\t// horizontal bar\n\t\tleft = vm.base;\n\t\tright = vm.x;\n\t\ttop = vm.y - vm.height / 2;\n\t\tbottom = vm.y + vm.height / 2;\n\t\tsignX = right > left ? 1 : -1;\n\t\tsignY = 1;\n\t\tborderSkipped = vm.borderSkipped || 'left';\n\t}\n\n\t// Canvas doesn't allow us to stroke inside the width so we can\n\t// adjust the sizes to fit if we're setting a stroke on the line\n\tif (borderWidth) {\n\t\t// borderWidth shold be less than bar width and bar height.\n\t\tlet barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n\t\tborderWidth = borderWidth > barSize ? barSize : borderWidth;\n\t\tlet halfStroke = borderWidth / 2;\n\t\t// Adjust borderWidth when bar top position is near vm.base(zero).\n\t\tlet borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\n\t\tlet borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\n\t\tlet borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\n\t\tlet borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\n\t\t// not become a vertical line?\n\t\tif (borderLeft !== borderRight) {\n\t\t\ttop = borderTop;\n\t\t\tbottom = borderBottom;\n\t\t}\n\t\t// not become a horizontal line?\n\t\tif (borderTop !== borderBottom) {\n\t\t\tleft = borderLeft;\n\t\t\tright = borderRight;\n\t\t}\n\t}\n\n\tctx.beginPath();\n\tctx.fillStyle = vm.backgroundColor;\n\tctx.strokeStyle = vm.borderColor;\n\tctx.lineWidth = borderWidth;\n\n\t// Corner points, from bottom-left to bottom-right clockwise\n\t// | 1 2 |\n\t// | 0 3 |\n\tvar corners = [\n\t\t[left, bottom],\n\t\t[left, top],\n\t\t[right, top],\n\t\t[right, bottom],\n\t];\n\n\t// Find first (starting) corner with fallback to 'bottom'\n\tvar borders = ['bottom', 'left', 'top', 'right'];\n\tvar startCorner = borders.indexOf(borderSkipped, 0);\n\tif (startCorner === -1) {\n\t\tstartCorner = 0;\n\t}\n\n\tfunction cornerAt(index) {\n\t\treturn corners[(startCorner + index) % 4];\n\t}\n\n\t// Draw rectangle from 'startCorner'\n\tlet corner = cornerAt(0);\n\tctx.moveTo(corner[0], corner[1]);\n\n\tfor (var i = 1; i < 4; i++) {\n\t\tcorner = cornerAt(i);\n\t\tlet nextCornerId = i + 1;\n\t\tif (nextCornerId === 4) {\n\t\t\tnextCornerId = 0;\n\t\t}\n\n\t\tlet nextCorner = cornerAt(nextCornerId);\n\n\t\tlet width = corners[2][0] - corners[1][0];\n\t\tlet height = corners[0][1] - corners[1][1];\n\t\tlet x = corners[1][0];\n\t\tlet y = corners[1][1];\n\n\t\tlet radius = cornerRadius;\n\n\t\t// Fix radius being too large\n\t\tif (radius > height / 2) {\n\t\t\tradius = height / 2;\n\t\t}\n\t\tif (radius > width / 2) {\n\t\t\tradius = width / 2;\n\t\t}\n\n\t\tctx.moveTo(x + radius, y);\n\t\tctx.lineTo(x + width - radius, y);\n\t\tctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\t\tctx.lineTo(x + width, y + height - radius);\n\t\tctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\t\tctx.lineTo(x + radius, y + height);\n\t\tctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\t\tctx.lineTo(x, y + radius);\n\t\tctx.quadraticCurveTo(x, y, x + radius, y);\n\t}\n\n\tctx.fill();\n\tif (borderWidth) {\n\t\tctx.stroke();\n\t}\n};\n","/home/yamin/Downloads/work/finpro/src/views/Marketing/Marketing.js",[],"/home/yamin/Downloads/work/finpro/src/views/Sales/Sales.js",[],"/home/yamin/Downloads/work/finpro/src/views/GandA/GandA.js",[],"/home/yamin/Downloads/work/finpro/src/App.js",[],"/home/yamin/Downloads/work/finpro/src/views/Auth/SignUp/SignUp.js",["180"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport axios from '../../../context/axios';\nimport { Link } from 'react-router-dom';\nimport LOGO from '../../../assets/logo.png';\nimport BGImgs from '../../../assets/sign-in-cover.jpg';\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tdisplay: 'flex',\n\t\tjustifyContent: 'center',\n\t},\n}));\n\nfunction SignUp() {\n\tconst classes = useStyles();\n\n\tconst [alertClass, setAlertClass] = React.useState('');\n\tconst [msg, setMsg] = React.useState('');\n\tconst [err, setErr] = React.useState(''); \n\tconst [loader, setLoader] = React.useState(false);\n\n\tconst [passwordType, setPasswordType] = React.useState('password');\n\tconst [signupForm, setSignupForm] = React.useState({\n\t\temail: '',\n\t\tcpassword: '',\n\t});\n\n\tconst handleSignUp = (e) => {\n\t\tconst { name, value } = e.target;\n\t\tsetSignupForm((prevState) => {\n\t\t\t// console.log(prevState);\n\t\t\treturn {\n\t\t\t\t...prevState,\n\t\t\t\t[name]: value,\n\t\t\t};\n\t\t});\n\t};\n\n\tconst handleSubmit = async (e) => {\n\t\tsetLoader(true);\n\t\te.preventDefault();\n\t\ttry {\n\t\t\tlet signup = await axios.post('/auth/signup', signupForm);\n\t\t\tif (signup.status === 200 || signup.status === 201) {\n\t\t\t\tsetErr('');\n\t\t\t\tsetAlertClass('show');\n\t\t\t\tsetSignupForm({\n\t\t\t\t\temail: '',\n\t\t\t\t\tpassword: '',\n\t\t\t\t});\n\t\t\t\tsetMsg('Successfully Registered');\n\t\t\t\tsetLoader(false);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tsetAlertClass('show');\n\t\t\tsetMsg('');\n\t\t\tif (e.response && e.response.data) {\n\t\t\t\tif (e.response.data.error) {\n\t\t\t\t\tsetErr(e.response.data.error.message);\n\t\t\t\t} else {\n\t\t\t\t\tsetErr(e.response.data.message);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsetErr(e.message);\n\t\t\t}\n\t\t\tsetLoader(false);\n\t\t}\n\t};\n\tconst handleCloseAlert = () => {\n\t\tsetAlertClass('hide');\n\t\tsetErr('');\n\t\tsetMsg('');\n\t};\n\n\tconst handlePwdType = () => {\n\t\tif (passwordType === 'password') {\n\t\t\tsetPasswordType('text');\n\t\t} else {\n\t\t\tsetPasswordType('password');\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className='container-fluid'>\n\t\t\t<div className='row align-items-center justify-content-center'>\n\t\t\t\t<div className='col-12 col-md-5 col-lg-6 col-xl-4 px-lg-6 my-5'>\n\t\t\t\t\t<div className='Logo text-center'>\n\t\t\t\t\t\t<Link to='/'>\n\t\t\t\t\t\t\t<img src={LOGO} alt='logo' />\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</div>\n\t\t\t\t\t<h2 className='display-4 text-center mb-3'>Create a new Account</h2>\n\t\t\t\t\t{msg && (\n\t\t\t\t\t\t<div className={`alert alert-success alert-dismissible fade ${alertClass}`} role='alert'>\n\t\t\t\t\t\t\t<strong>{msg}</strong>\n\t\t\t\t\t\t\t<button onClick={handleCloseAlert} type='button' className='close' data-dismiss='alert' aria-label='Close'>\n\t\t\t\t\t\t\t\t<span aria-hidden='true'>×</span>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t\t{err && (\n\t\t\t\t\t\t<div className={`alert alert-danger alert-dismissible fade ${alertClass}`} role='alert'>\n\t\t\t\t\t\t\t<strong>{err}</strong>\n\t\t\t\t\t\t\t<button onClick={handleCloseAlert} type='button' className='close' data-dismiss='alert' aria-label='Close'>\n\t\t\t\t\t\t\t\t<span aria-hidden='true'>×</span>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\n\t\t\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t\t\t<div className='form-group'>\n\t\t\t\t\t\t\t<label className='form-label'>Email Address</label>\n\n\t\t\t\t\t\t\t<input type='email' name='email' value={signupForm.email} onChange={handleSignUp} className='form-control' required placeholder='name@address.com' />\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className='form-group'>\n\t\t\t\t\t\t\t<label className='form-label'>Password</label>\n\n\t\t\t\t\t\t\t<div className='input-group input-group-merge'>\n\t\t\t\t\t\t\t\t<input className='form-control' name='password' value={signupForm.password} onChange={handleSignUp} required type={passwordType} placeholder='Enter your password' />\n\n\t\t\t\t\t\t\t\t<span onClick={handlePwdType} className='input-group-text'>\n\t\t\t\t\t\t\t\t\t<i style={{ cursor: 'pointer' }} className='fe fe-eye'></i>\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<button disabled={loader} className='btn btn-lg btn-block btn-custom mb-3'>\n\t\t\t\t\t\t\t{loader && (\n\t\t\t\t\t\t\t\t<div className='spinner-border spinner-border-sm' role='status'>\n\t\t\t\t\t\t\t\t\t<span className='sr-only'>Loading...</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{!loader && 'Sign up for 30-days free trial'}\n\t\t\t\t\t\t</button>\n\n\t\t\t\t\t\t<div className='text-center'>\n\t\t\t\t\t\t\t<small className='text-muted text-center'>\n\t\t\t\t\t\t\t\tAlready have an account? <Link to='/login'>Log in</Link>.\n\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\n\t\t\t\t<div className='col-12 col-md-7 col-lg-6 col-xl-8 d-none d-lg-block'>\n\t\t\t\t\t<div className='bg-cover vh-100 mt-n1 mr-n3' style={{ backgroundImage: `url(${BGImgs})` }}></div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default SignUp;\n","/home/yamin/Downloads/work/finpro/src/context/context.js",[],"/home/yamin/Downloads/work/finpro/src/views/Revenue/Revenue.js",[],"/home/yamin/Downloads/work/finpro/src/views/Auth/Login/Login.js",["181","182"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport axios from '../../../context/axios';\nimport { useHistory, Link } from 'react-router-dom';\nimport { AuthContext } from '../../../context/context';\nimport { getUser } from '../../../context/fetch-service';\nimport LOGO from '../../../assets/logo.png';\nimport BGImgs from '../../../assets/sign-in-cover.jpg';\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tdisplay: 'flex',\n\t\tjustifyContent: 'center',\n\t},\n}));\n\nfunction Login() {\n\tconst classes = useStyles();\n\tconst history = useHistory();\n\tconst { state, dispatch } = React.useContext(AuthContext);\n\tconst [passwordType, setPasswordType] = React.useState('password');\n\tconst [alertClass, setAlertClass] = React.useState('');\n\tconst [err, setErr] = React.useState('');\n\tconst [loader, setLoader] = React.useState(false);\n\tconst [loginForm, setLoginForm] = React.useState({\n\t\temail: '',\n\t\tpassword: '',\n\t});\n\n\tconst handleLogin = (e) => {\n\t\tconst { name, value } = e.target;\n\t\tsetLoginForm((prevState) => {\n\t\t\t// console.log(prevState);\n\t\t\treturn {\n\t\t\t\t...prevState,\n\t\t\t\t[name]: value,\n\t\t\t};\n\t\t});\n\t};\n\n\tconst handleSubmit = async (e) => {\n\t\tsetLoader(true);\n\t\te.preventDefault();\n\t\ttry {\n\t\t\tlet login = await axios.post('/auth/login', loginForm);\n\t\t\tif (login.status === 200 || login.status === 201) {\n\t\t\t\tlet user = await getUser(login.data.token);\n\t\t\t\tif (user) {\n\t\t\t\t\tsetErr('');\n\t\t\t\t\tsetAlertClass('show');\n\t\t\t\t\tsetLoginForm({\n\t\t\t\t\t\temail: '',\n\t\t\t\t\t\tpassword: '',\n\t\t\t\t\t});\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: 'LOGIN',\n\t\t\t\t\t\tpayload: { token: login.data.token, user: user },\n\t\t\t\t\t});\n\t\t\t\t\tsetLoader(false);\n\t\t\t\t\thistory.push('/');\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tsetAlertClass('show');\n\t\t\tif (e.response && e.response.data) {\n\t\t\t\tif (e.response.data.error) {\n\t\t\t\t\tsetErr(e.response.data.error.message);\n\t\t\t\t} else {\n\t\t\t\t\tif (e.response.data.message) {\n\t\t\t\t\t\tsetErr(e.response.data.message.message);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsetErr(e.message);\n\t\t\t}\n\t\t\tsetLoader(false);\n\t\t}\n\t};\n\tconst handleCloseAlert = () => {\n\t\tsetAlertClass('hide');\n\t\tsetErr('');\n\t};\n\n\tconst handlePwdType = () => {\n\t\tif (passwordType === 'password') {\n\t\t\tsetPasswordType('text');\n\t\t} else {\n\t\t\tsetPasswordType('password');\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className='container-fluid'>\n\t\t\t<div className='row align-items-center justify-content-center'>\n\t\t\t\t<div className='col-12 col-md-5 col-lg-6 col-xl-4 px-lg-6 my-5'>\n\t\t\t\t\t<div className='Logo text-center'>\n\t\t\t\t\t\t<Link to='/'>\n\t\t\t\t\t\t\t<img src={LOGO} alt='logo' />\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</div>\n\t\t\t\t\t<h2 className='display-4 text-center mb-3'>Sign in</h2>\n\t\t\t\t\t{err && (\n\t\t\t\t\t\t<div className={`alert alert-danger alert-dismissible fade ${alertClass}`} role='alert'>\n\t\t\t\t\t\t\t<strong>{err}</strong>\n\t\t\t\t\t\t\t<button onClick={handleCloseAlert} type='button' className='close' data-dismiss='alert' aria-label='Close'>\n\t\t\t\t\t\t\t\t<span aria-hidden='true'>×</span>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t\t\t<div className='form-group'>\n\t\t\t\t\t\t\t<label className='form-label'>Email Address</label>\n\n\t\t\t\t\t\t\t<input type='email' name='email' value={loginForm.email} onChange={handleLogin} className='form-control' required placeholder='name@address.com' />\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className='form-group'>\n\t\t\t\t\t\t\t<div className='row'>\n\t\t\t\t\t\t\t\t<div className='col'>\n\t\t\t\t\t\t\t\t\t<label className='form-label'>Password</label>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='col-auto'>\n\t\t\t\t\t\t\t\t\t<Link to='forgot-password' className='form-text small text-muted'>\n\t\t\t\t\t\t\t\t\t\tForgot password?\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div className='input-group input-group-merge'>\n\t\t\t\t\t\t\t\t<input className='form-control' type={passwordType} name='password' value={loginForm.password} onChange={handleLogin} required placeholder='Enter your password' />\n\n\t\t\t\t\t\t\t\t<span onClick={handlePwdType} className='input-group-text'>\n\t\t\t\t\t\t\t\t\t<i style={{ cursor: 'pointer' }} className='fe fe-eye'></i>\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<button disabled={loader} className='btn btn-lg btn-block btn-custom mb-3'>\n\t\t\t\t\t\t\t{loader && (\n\t\t\t\t\t\t\t\t<div className='spinner-border spinner-border-sm' role='status'>\n\t\t\t\t\t\t\t\t\t<span className='sr-only'>Loading...</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{!loader && 'Sign in'}\n\t\t\t\t\t\t</button>\n\n\t\t\t\t\t\t<p className='text-center'>\n\t\t\t\t\t\t\t<small className='text-muted text-center'>\n\t\t\t\t\t\t\t\tDon't have an account yet? <Link to='/signup'>Sign up</Link>.\n\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t\t<div className='col-12 col-md-7 col-lg-6 col-xl-8 d-none d-lg-block'>\n\t\t\t\t\t<div className='bg-cover vh-100 mt-n1 mr-n3' style={{ backgroundImage: `url(${BGImgs})` }}></div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Login;\n",["183","184"],"/home/yamin/Downloads/work/finpro/src/routes.js",[],"/home/yamin/Downloads/work/finpro/src/views/Checkout/Checkout.js",[],"/home/yamin/Downloads/work/finpro/src/context/axios.js",[],["185","186"],"/home/yamin/Downloads/work/finpro/src/index.js",[],"/home/yamin/Downloads/work/finpro/src/views/Settings/Settings.js",[],"/home/yamin/Downloads/work/finpro/src/views/Pricing/Pricing.js",[],"/home/yamin/Downloads/work/finpro/src/views/Billing/Billing.js",[],"/home/yamin/Downloads/work/finpro/src/service.js",[],"/home/yamin/Downloads/work/finpro/src/context/types.js",[],"/home/yamin/Downloads/work/finpro/src/context/fetch-service.js",[],"/home/yamin/Downloads/work/finpro/src/context/revenue-service.js",[],"/home/yamin/Downloads/work/finpro/src/views/Revenue/RevenueInputs.js",["187"],"/home/yamin/Downloads/work/finpro/src/views/Revenue/ExpenseInputs.js",["188"],"/home/yamin/Downloads/work/finpro/src/views/Revenue/StartingCapitalInput.js",["189"],"import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { addStartingCapital, deleteStartignCapital, updateStartingCapital } from '../../context/revenue-service';\nimport { AuthContext } from '../../context/context';\nimport { getRevenue } from '../../context/fetch-service';\n\nfunction StartingCapitalInput({ revenueId, startingCapital, setMsg, setErr, setAlertClass }) {\n\tconst { state, dispatch } = React.useContext(AuthContext);\n\tconst [open, setOpen] = React.useState(false);\n\tconst [loader, setLoader] = React.useState(false);\n\tconst [edit, setEdit] = React.useState(false);\n\n\tconst handleClickOpen = () => {\n\t\tsetOpen(true);\n\t};\n\n\tconst handleClose = () => {\n\t\tsetOpen(false);\n\t};\n\n\tconst [startingCapitalForm, setStartingCapitalForm] = React.useState({\n\t\tsource: '',\n\t\tamount: '',\n\t});\n\n\tconst handleRevenueChange = (e) => {\n\t\tconst { name, value } = e.target;\n\t\tsetStartingCapitalForm((prevState) => {\n\t\t\treturn {\n\t\t\t\t...prevState,\n\t\t\t\t[name]: value,\n\t\t\t};\n\t\t});\n\t};\n\n\tconst handleSubmit = async (e) => {\n\t\tsetLoader(true);\n\t\te.preventDefault();\n\t\ttry {\n\t\t\tif (edit) {\n\t\t\t\tlet update = await updateStartingCapital({ revenueId: revenueId, startingCapitalId: startingCapitalForm.startingCapitalId, data: startingCapitalForm });\n\t\t\t\tif (update.status === 200 || update.status === 201) {\n\t\t\t\t\tlet revenues = await getRevenue();\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: 'SET_REVENUE',\n\t\t\t\t\t\tpayload: revenues,\n\t\t\t\t\t});\n\n\t\t\t\t\tsetAlertClass('show');\n\t\t\t\t\tsetMsg(update.data.message);\n\t\t\t\t\tsetErr('');\n\t\t\t\t\tsetEdit(false);\n\t\t\t\t\tsetLoader(false);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlet add = await addStartingCapital({ ...startingCapitalForm, revenueId });\n\t\t\t\tif (add.status === 200 || add.status === 201) {\n\t\t\t\t\tlet revenues = await getRevenue();\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: 'SET_REVENUE',\n\t\t\t\t\t\tpayload: revenues,\n\t\t\t\t\t});\n\n\t\t\t\t\tsetAlertClass('show');\n\t\t\t\t\tsetMsg(add.data.message);\n\t\t\t\t\tsetErr('');\n\t\t\t\t\tsetLoader(false);\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tsetAlertClass('show');\n\t\t\tsetMsg('');\n\t\t\tconsole.log(e);\n\t\t\tif (err.response && err.response.data) {\n\t\t\t\tif (err.response.data.error) {\n\t\t\t\t\tsetErr(err.response.data.error.message);\n\t\t\t\t} else if (err.response.data.errors) {\n\t\t\t\t\tlet errors = err.response.data.errors.map((err) => <li>{err.msg}</li>);\n\t\t\t\t\tsetErr(errors);\n\t\t\t\t} else {\n\t\t\t\t\tsetErr(err.response.data.message);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsetErr(err.message);\n\t\t\t}\n\t\t\tsetLoader(false);\n\t\t}\n\t\tsetStartingCapitalForm({\n\t\t\tsource: '',\n\t\t\tamount: '',\n\t\t});\n\t\tsetOpen(false);\n\t};\n\n\tconst handleDeletePlan = async (startingCapitalId) => {\n\t\ttry {\n\t\t\tlet deletePlanRes = await deleteStartignCapital({ revenueId, startingCapitalId });\n\n\t\t\tif (deletePlanRes.status === 200) {\n\t\t\t\tlet revenues = await getRevenue();\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: 'SET_REVENUE',\n\t\t\t\t\tpayload: revenues,\n\t\t\t\t});\n\n\t\t\t\tsetAlertClass('show');\n\t\t\t\tsetMsg(deletePlanRes.data.message);\n\t\t\t\tsetErr('');\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tsetAlertClass('show');\n\t\t\tsetMsg('');\n\t\t\tif (e.response && e.response.data) {\n\t\t\t\tif (e.response.data.error) {\n\t\t\t\t\tsetErr(e.response.data.error.message);\n\t\t\t\t} else if (e.response.data.errors) {\n\t\t\t\t\tconsole.log(e.response.data.errors);\n\t\t\t\t\tlet errors = e.response.data.errors.map((err) => <li>{err.msg}</li>);\n\t\t\t\t\tsetErr(errors);\n\t\t\t\t} else {\n\t\t\t\t\tsetErr(e.response.data.message);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsetErr(e.message);\n\t\t\t}\n\t\t}\n\t\tsetOpen(false);\n\t};\n\n\tconst handleEditPlan = (startingCapitalId, rev) => {\n\t\tsetEdit(true);\n\t\tsetOpen(true);\n\t\tsetStartingCapitalForm({\n\t\t\tsource: rev.source,\n\t\t\tamount: rev.amount,\n\t\t\tstartingCapitalId,\n\t\t});\n\t};\n\n\treturn (\n\t\t<div className='card'>\n\t\t\t<div>\n\t\t\t\t<div className='table-responsive'>\n\t\t\t\t\t<table className='table table-sm table-hover table-nowrap mb-0'>\n\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th scope='col'>Source</th>\n\t\t\t\t\t\t\t\t<th scope='col'>Amount</th>\n\t\t\t\t\t\t\t\t<th scope='col'>\n\t\t\t\t\t\t\t\t\t<i title='Add Plan' onClick={handleClickOpen} style={{ fontSize: '22px', cursor: 'pointer' }} className='fe fe-plus add-icon'></i>\n\t\t\t\t\t\t\t\t\t<Dialog open={open} onClose={handleClose} aria-labelledby='alert-dialog-title' aria-describedby='alert-dialog-description'>\n\t\t\t\t\t\t\t\t\t\t<DialogTitle id='alert-dialog-title'>{edit ? 'Edit Starting Capital' : 'Add Starting Capital'}</DialogTitle>\n\n\t\t\t\t\t\t\t\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t\t\t\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='row g-3'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='col-12 col-md-12 mb-3'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label htmlFor='source' className='form-label'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tSource\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type='text' name='source' value={startingCapitalForm.source} onChange={handleRevenueChange} className='form-control' id='source' placeholder='Source' required />\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='row g-3'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='col-12 col-md-12 mb-3'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label htmlFor='amount' className='form-label'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAmount\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type='text' name='amount' value={startingCapitalForm.amount} onChange={handleRevenueChange} className='form-control' id='amount' placeholder='Amount' required />\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</DialogContent>\n\t\t\t\t\t\t\t\t\t\t\t<DialogActions>\n\t\t\t\t\t\t\t\t\t\t\t\t<button className='btn btn-danger' onClick={handleClose}>\n\t\t\t\t\t\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t\t<button disabled={loader} type='submit' className='btn btn-primary' autoFocus>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{loader && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='spinner-border spinner-border-sm' role='status'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='sr-only'>Loading...</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t{!loader && (edit ? 'Update Starting Capital' : 'Add Starting Capital')}\n\t\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t</DialogActions>\n\t\t\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t\t\t</Dialog>\n\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t{startingCapital &&\n\t\t\t\t\t\t\t\tstartingCapital.map((rev, id) => (\n\t\t\t\t\t\t\t\t\t<tr key={id}>\n\t\t\t\t\t\t\t\t\t\t<td>{rev.source}</td>\n\t\t\t\t\t\t\t\t\t\t<td>{rev.amount}</td>\n\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t<i title='Edit Plan' style={{ cursor: 'pointer' }} className='fe fe-edit edit-icon' onClick={() => handleEditPlan(rev._id, rev)}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t<i title='Delete Plan' style={{ cursor: 'pointer' }} onClick={() => handleDeletePlan(rev._id)} className='fe fe-trash-2 delete-icon'></i>\n\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</table>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default StartingCapitalInput;\n","/home/yamin/Downloads/work/finpro/src/views/Sales/ExpenseInputs.js",["190"],"import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport { AuthContext } from '../../context/context';\nimport { getInputs } from '../../context/fetch-service';\nimport { addInputExpense, deleteInputExpense, updateInputExpense } from '../../context/input-service';\n\nfunction ExpenseInputs({ salesId, expenseInputs, setMsg, setErr, setAlertClass }) {\n\tconst { state, dispatch } = React.useContext(AuthContext);\n\n\tconst [open, setOpen] = React.useState(false);\n\tconst [dialogSetting, setDialogSetting] = React.useState({\n\t\ttitle: '',\n\t\tbuttonTitle: '',\n\t\theading: '',\n\t\ttype: '',\n\t});\n\tconst [loader, setLoader] = React.useState(false);\n\tconst [edit, setEdit] = React.useState(false);\n\n\tconst handleClickOpen = () => {\n\t\tsetOpen(true);\n\t};\n\n\tconst handleClose = () => {\n\t\tsetOpen(false);\n\t};\n\n\tconst [expenseForm, setExpenseForm] = React.useState({\n\t\tvalue: '',\n\t\tcost: '',\n\t\tperEmployee: '',\n\t\tdate: '',\n\t});\n\n\tconst handleInputChange = (e) => {\n\t\tconst { name, value } = e.target;\n\t\tsetExpenseForm((prevState) => {\n\t\t\treturn {\n\t\t\t\t...prevState,\n\t\t\t\t[name]: value,\n\t\t\t};\n\t\t});\n\t};\n\n\tconst handleSubmit = async (e, heading) => {\n\t\te.preventDefault();\n\n\t\tsetLoader(true);\n\t\ttry {\n\t\t\tif (edit) {\n\t\t\t\tlet update = await updateInputExpense({ inputMainId: salesId, inputId: expenseForm.inputId, data: expenseForm });\n\t\t\t\tif (update.status === 200 || update.status === 201) {\n\t\t\t\t\tlet inputs = await getInputs();\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: 'SET_INPUTS',\n\t\t\t\t\t\tpayload: inputs,\n\t\t\t\t\t});\n\n\t\t\t\t\tsetAlertClass('show');\n\t\t\t\t\tsetMsg(update.data.message);\n\t\t\t\t\tsetErr('');\n\t\t\t\t\tsetEdit(false);\n\t\t\t\t\tsetLoader(false);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlet add = await addInputExpense({ ...expenseForm, inputMainId: salesId, heading });\n\t\t\t\tif (add.status === 200 || add.status === 201) {\n\t\t\t\t\tlet inputs = await getInputs();\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: 'SET_INPUTS',\n\t\t\t\t\t\tpayload: inputs,\n\t\t\t\t\t});\n\n\t\t\t\t\tsetAlertClass('show');\n\t\t\t\t\tsetMsg(add.data.message);\n\t\t\t\t\tsetErr('');\n\t\t\t\t\tsetLoader(false);\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tsetAlertClass('show');\n\t\t\tsetMsg('');\n\t\t\tconsole.log(e);\n\t\t\tif (err.response && err.response.data) {\n\t\t\t\tif (err.response.data.error) {\n\t\t\t\t\tsetErr(err.response.data.error.message);\n\t\t\t\t} else if (err.response.data.errors) {\n\t\t\t\t\tlet errors = err.response.data.errors.map((err) => <li>{err.msg}</li>);\n\t\t\t\t\tsetErr(errors);\n\t\t\t\t} else {\n\t\t\t\t\tsetErr(err.response.data.message);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsetErr(err.message);\n\t\t\t}\n\t\t\tsetLoader(false);\n\t\t}\n\t\tsetExpenseForm({\n\t\t\tvalue: '',\n\t\t\tcost: '',\n\t\t\tperEmployee: '',\n\t\t\tdate: '',\n\t\t});\n\t\tsetOpen(false);\n\t};\n\n\tconst handleDeletePlan = async (inputId) => {\n\t\ttry {\n\t\t\tlet deletePlanRes = await deleteInputExpense({ inputMainId: salesId, inputId });\n\n\t\t\tif (deletePlanRes.status === 200) {\n\t\t\t\tlet inputs = await getInputs();\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: 'SET_INPUTS',\n\t\t\t\t\tpayload: inputs,\n\t\t\t\t});\n\n\t\t\t\tsetAlertClass('show');\n\t\t\t\tsetMsg(deletePlanRes.data.message);\n\t\t\t\tsetErr('');\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tsetAlertClass('show');\n\t\t\tsetMsg('');\n\t\t\tif (e.response && e.response.data) {\n\t\t\t\tif (e.response.data.error) {\n\t\t\t\t\tsetErr(e.response.data.error.message);\n\t\t\t\t} else if (e.response.data.errors) {\n\t\t\t\t\tconsole.log(e.response.data.errors);\n\t\t\t\t\tlet errors = e.response.data.errors.map((err) => <li>{err.msg}</li>);\n\t\t\t\t\tsetErr(errors);\n\t\t\t\t} else {\n\t\t\t\t\tsetErr(e.response.data.message);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsetErr(e.message);\n\t\t\t}\n\t\t}\n\t\tsetOpen(false);\n\t};\n\n\tconst handleEditPlan = (expInp) => {\n\t\tsetEdit(true);\n\t\tsetOpen(true);\n\t\tsetExpenseForm({\n\t\t\tvalue: expInp.value,\n\t\t\tcost: expInp.cost,\n\t\t\tperEmployee: expInp.perEmployee,\n\t\t\tdate: expInp.date,\n\t\t\tinputId: expInp._id,\n\t\t});\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<Dialog open={open} onClose={handleClose} aria-labelledby='alert-dialog-title' aria-describedby='alert-dialog-description'>\n\t\t\t\t<DialogTitle id='alert-dialog-title'>{edit ? 'Edit Expense' : 'Add Expense'}</DialogTitle>\n\t\t\t\t<form onSubmit={(e) => handleSubmit(e, dialogSetting.heading)}>\n\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t<div className='row g-3'>\n\t\t\t\t\t\t\t<div className='col-12 col-md-12 mb-3'>\n\t\t\t\t\t\t\t\t<label htmlFor='value' className='form-label'>\n\t\t\t\t\t\t\t\t\t{dialogSetting.title}\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<input type='text' name='value' value={expenseForm.value} onChange={handleInputChange} className='form-control' id='value' placeholder='Credit Card Processing Fees' required />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='row g-3'>\n\t\t\t\t\t\t\t<div className='col-12 col-md-12 mb-3'>\n\t\t\t\t\t\t\t\t<label htmlFor='cost' className='form-label'>\n\t\t\t\t\t\t\t\t\tCost\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<input type='text' name='cost' value={expenseForm.cost} onChange={handleInputChange} className='form-control' id='cost' placeholder='Cost' required />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='row g-3'>\n\t\t\t\t\t\t\t{dialogSetting.type === 'date' ? (\n\t\t\t\t\t\t\t\t<div className='col-12 col-md-12 mb-3'>\n\t\t\t\t\t\t\t\t\t<label htmlFor='date' className='form-label'>\n\t\t\t\t\t\t\t\t\t\tDate\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t<input type='date' name='date' value={expenseForm.date} onChange={handleInputChange} className='form-control' id='date' placeholder='Date' />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<div className='col-12 col-md-12 mb-3'>\n\t\t\t\t\t\t\t\t\t<label htmlFor='perEmployee' className='form-label'>\n\t\t\t\t\t\t\t\t\t\t{dialogSetting.employee}\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t<input type='text' name='perEmployee' value={expenseForm.perEmployee} onChange={handleInputChange} className='form-control' id='perEmployee' placeholder={dialogSetting.employee} />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</DialogContent>\n\t\t\t\t\t<DialogActions>\n\t\t\t\t\t\t<button className='btn btn-danger' onClick={handleClose}>\n\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button disabled={loader} type='submit' className='btn btn-primary' autoFocus>\n\t\t\t\t\t\t\t{loader && (\n\t\t\t\t\t\t\t\t<div className='spinner-border spinner-border-sm' role='status'>\n\t\t\t\t\t\t\t\t\t<span className='sr-only'>Loading...</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{!loader && (edit ? 'Update Expense' : 'Add Expense')}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</DialogActions>\n\t\t\t\t</form>\n\t\t\t</Dialog>\n\t\t\t<div className='card'>\n\t\t\t\t<div>\n\t\t\t\t\t<div className='table-responsive'>\n\t\t\t\t\t\t<table className='table table-sm table-hover table-nowrap mb-0'>\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Equipment & Telecom</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Cost</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Per new Employee</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>\n\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\ttitle='Add Major Expense'\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ fontSize: '22px' }}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Equipment & Telecom',\n\t\t\t\t\t\t\t\t\t\t\t\t\temployee: 'Per New Employee',\n\t\t\t\t\t\t\t\t\t\t\t\t\tbuttonTitle: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'equipmentAndTelecom',\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\thandleClickOpen();\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-plus add-icon'></i>\n\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t{expenseInputs &&\n\t\t\t\t\t\t\t\t\texpenseInputs\n\t\t\t\t\t\t\t\t\t\t.filter((exp) => exp.heading === 'equipmentAndTelecom')\n\t\t\t\t\t\t\t\t\t\t.map((expInp, id) => (\n\t\t\t\t\t\t\t\t\t\t\t<tr key={id}>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.value}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.cost}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.perEmployee}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-edit edit-icon'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Equipment & Telecom',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\temployee: 'Per New Employee',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbuttonTitle: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'equipmentAndTelecom',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleEditPlan(expInp);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className='fe fe-trash-2 delete-icon' onClick={() => handleDeletePlan(expInp._id)}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div className='card'>\n\t\t\t\t<div>\n\t\t\t\t\t<div className='table-responsive'>\n\t\t\t\t\t\t<table className='table table-sm table-hover table-nowrap mb-0'>\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Dues & Subscriptions</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Cost</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>\n\t\t\t\t\t\t\t\t\t\tPer new Employee <br /> (per month)\n\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>\n\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\ttitle='Add Major Expense'\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ fontSize: '22px' }}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Dues & Subscription',\n\t\t\t\t\t\t\t\t\t\t\t\t\temployee: 'Per New Employee',\n\t\t\t\t\t\t\t\t\t\t\t\t\tbuttonTitle: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'duesAnsSubscriptions',\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\thandleClickOpen();\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-plus add-icon'></i>\n\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t{expenseInputs &&\n\t\t\t\t\t\t\t\t\texpenseInputs\n\t\t\t\t\t\t\t\t\t\t.filter((exp) => exp.heading === 'duesAnsSubscriptions')\n\t\t\t\t\t\t\t\t\t\t.map((expInp, id) => (\n\t\t\t\t\t\t\t\t\t\t\t<tr key={id}>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.value}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.cost}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.perEmployee}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-edit edit-icon'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Dues & Subscriptions',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\temployee: 'Per New Employee',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbuttonTitle: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'duesAnsSubscriptions',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleEditPlan(expInp);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className='fe fe-trash-2 delete-icon' onClick={() => handleDeletePlan(expInp._id)}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div className='card'>\n\t\t\t\t<div>\n\t\t\t\t\t<div className='table-responsive'>\n\t\t\t\t\t\t<table className='table table-sm table-hover table-nowrap mb-0'>\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Travel & Entertainment</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Cost</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Per Employee (per month)</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>\n\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\ttitle='Add Major Expense'\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ fontSize: '22px' }}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Travel & Entertainment',\n\t\t\t\t\t\t\t\t\t\t\t\t\temployee: 'Per New Employee',\n\t\t\t\t\t\t\t\t\t\t\t\t\tbuttonTitle: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'travelAndEntertainment',\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\thandleClickOpen();\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-plus add-icon'></i>\n\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t{expenseInputs &&\n\t\t\t\t\t\t\t\t\texpenseInputs\n\t\t\t\t\t\t\t\t\t\t.filter((exp) => exp.heading === 'travelAndEntertainment')\n\t\t\t\t\t\t\t\t\t\t.map((expInp, id) => (\n\t\t\t\t\t\t\t\t\t\t\t<tr key={id}>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.value}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.cost}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.perEmployee}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-edit edit-icon'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Travel & Entertainments',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\temployee: 'Per New Employee',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbuttonTitle: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'travelAndEntertainment',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleEditPlan(expInp);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className='fe fe-trash-2 delete-icon' onClick={() => handleDeletePlan(expInp._id)}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div className='card'>\n\t\t\t\t<div>\n\t\t\t\t\t<div className='table-responsive'>\n\t\t\t\t\t\t<table className='table table-sm table-hover table-nowrap mb-0'>\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Others</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Cost</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Date</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>\n\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\ttitle='Add Major Expense'\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ fontSize: '22px' }}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Others',\n\t\t\t\t\t\t\t\t\t\t\t\t\temployee: 'Cost',\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: 'date',\n\t\t\t\t\t\t\t\t\t\t\t\t\tbuttonTitle: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'others',\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\thandleClickOpen();\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-plus add-icon'></i>\n\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t{expenseInputs &&\n\t\t\t\t\t\t\t\t\texpenseInputs\n\t\t\t\t\t\t\t\t\t\t.filter((exp) => exp.heading === 'others')\n\t\t\t\t\t\t\t\t\t\t.map((expInp, id) => (\n\t\t\t\t\t\t\t\t\t\t\t<tr key={id}>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.value}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.cost}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.date}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-edit edit-icon'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Others',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\temployee: 'Cost',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: 'date',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbuttonTitle: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'others',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleEditPlan(expInp);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className='fe fe-trash-2 delete-icon' onClick={() => handleDeletePlan(expInp._id)}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default ExpenseInputs;\n","/home/yamin/Downloads/work/finpro/src/views/Sales/SalesInputs.js",["191"],"/home/yamin/Downloads/work/finpro/src/context/input-service.js",[],"/home/yamin/Downloads/work/finpro/src/views/Sales/ContractorExpense.js",["192"],"/home/yamin/Downloads/work/finpro/src/views/Marketing/ExpenseInputs.js",["193"],"import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport { AuthContext } from '../../context/context';\nimport { getInputs } from '../../context/fetch-service';\nimport { addInputExpense, deleteInputExpense, updateInputExpense } from '../../context/input-service';\n\nfunction ExpenseInputs({ marketingId, expenseInputs, setMsg, setErr, setAlertClass }) {\n\tconst { state, dispatch } = React.useContext(AuthContext);\n\n\tconst [open, setOpen] = React.useState(false);\n\tconst [dialogSetting, setDialogSetting] = React.useState({\n\t\ttitle: '',\n\t\tbuttonTitle: '',\n\t\theading: '',\n\t\ttype: '',\n\t});\n\tconst [loader, setLoader] = React.useState(false);\n\tconst [edit, setEdit] = React.useState(false);\n\n\tconst handleClickOpen = () => {\n\t\tsetOpen(true);\n\t};\n\n\tconst handleClose = () => {\n\t\tsetOpen(false);\n\t};\n\n\tconst [expenseForm, setExpenseForm] = React.useState({\n\t\tvalue: '',\n\t\tcost: '',\n\t\tperEmployee: '',\n\t\tdate: '',\n\t});\n\n\tconst handleInputChange = (e) => {\n\t\tconst { name, value } = e.target;\n\t\tsetExpenseForm((prevState) => {\n\t\t\treturn {\n\t\t\t\t...prevState,\n\t\t\t\t[name]: value,\n\t\t\t};\n\t\t});\n\t};\n\n\tconst handleSubmit = async (e, heading) => {\n\t\te.preventDefault();\n\n\t\tsetLoader(true);\n\t\ttry {\n\t\t\tif (edit) {\n\t\t\t\tlet update = await updateInputExpense({ inputMainId: marketingId, inputId: expenseForm.inputId, data: expenseForm });\n\t\t\t\tif (update.status === 200 || update.status === 201) {\n\t\t\t\t\tlet inputs = await getInputs();\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: 'SET_INPUTS',\n\t\t\t\t\t\tpayload: inputs,\n\t\t\t\t\t});\n\n\t\t\t\t\tsetAlertClass('show');\n\t\t\t\t\tsetMsg(update.data.message);\n\t\t\t\t\tsetErr('');\n\t\t\t\t\tsetEdit(false);\n\t\t\t\t\tsetLoader(false);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlet add = await addInputExpense({ ...expenseForm, inputMainId: marketingId, heading });\n\t\t\t\tif (add.status === 200 || add.status === 201) {\n\t\t\t\t\tlet inputs = await getInputs();\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: 'SET_INPUTS',\n\t\t\t\t\t\tpayload: inputs,\n\t\t\t\t\t});\n\n\t\t\t\t\tsetAlertClass('show');\n\t\t\t\t\tsetMsg(add.data.message);\n\t\t\t\t\tsetErr('');\n\t\t\t\t\tsetLoader(false);\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tsetAlertClass('show');\n\t\t\tsetMsg('');\n\t\t\tconsole.log(e);\n\t\t\tif (err.response && err.response.data) {\n\t\t\t\tif (err.response.data.error) {\n\t\t\t\t\tsetErr(err.response.data.error.message);\n\t\t\t\t} else if (err.response.data.errors) {\n\t\t\t\t\tlet errors = err.response.data.errors.map((err) => <li>{err.msg}</li>);\n\t\t\t\t\tsetErr(errors);\n\t\t\t\t} else {\n\t\t\t\t\tsetErr(err.response.data.message);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsetErr(err.message);\n\t\t\t}\n\t\t\tsetLoader(false);\n\t\t}\n\t\tsetExpenseForm({\n\t\t\tvalue: '',\n\t\t\tcost: '',\n\t\t\tperEmployee: '',\n\t\t\tdate: '',\n\t\t});\n\t\tsetOpen(false);\n\t};\n\n\tconst handleDeletePlan = async (inputId) => {\n\t\ttry {\n\t\t\tlet deletePlanRes = await deleteInputExpense({ inputMainId: marketingId, inputId });\n\n\t\t\tif (deletePlanRes.status === 200) {\n\t\t\t\tlet inputs = await getInputs();\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: 'SET_INPUTS',\n\t\t\t\t\tpayload: inputs,\n\t\t\t\t});\n\n\t\t\t\tsetAlertClass('show');\n\t\t\t\tsetMsg(deletePlanRes.data.message);\n\t\t\t\tsetErr('');\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tsetAlertClass('show');\n\t\t\tsetMsg('');\n\t\t\tif (e.response && e.response.data) {\n\t\t\t\tif (e.response.data.error) {\n\t\t\t\t\tsetErr(e.response.data.error.message);\n\t\t\t\t} else if (e.response.data.errors) {\n\t\t\t\t\tconsole.log(e.response.data.errors);\n\t\t\t\t\tlet errors = e.response.data.errors.map((err) => <li>{err.msg}</li>);\n\t\t\t\t\tsetErr(errors);\n\t\t\t\t} else {\n\t\t\t\t\tsetErr(e.response.data.message);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsetErr(e.message);\n\t\t\t}\n\t\t}\n\t\tsetOpen(false);\n\t};\n\n\tconst handleEditPlan = (expInp) => {\n\t\tsetEdit(true);\n\t\tsetOpen(true);\n\t\tsetExpenseForm({\n\t\t\tvalue: expInp.value,\n\t\t\tcost: expInp.cost,\n\t\t\tperEmployee: expInp.perEmployee,\n\t\t\tdate: expInp.date,\n\t\t\tinputId: expInp._id,\n\t\t});\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<Dialog open={open} onClose={handleClose} aria-labelledby='alert-dialog-title' aria-describedby='alert-dialog-description'>\n\t\t\t\t<DialogTitle id='alert-dialog-title'>{edit ? 'Edit Expense' : 'Add Expense'}</DialogTitle>\n\t\t\t\t<form onSubmit={(e) => handleSubmit(e, dialogSetting.heading)}>\n\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t<div className='row g-3'>\n\t\t\t\t\t\t\t<div className='col-12 col-md-12 mb-3'>\n\t\t\t\t\t\t\t\t<label htmlFor='value' className='form-label'>\n\t\t\t\t\t\t\t\t\t{dialogSetting.title}\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<input type='text' name='value' value={expenseForm.value} onChange={handleInputChange} className='form-control' id='value' placeholder='Credit Card Processing Fees' required />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='row g-3'>\n\t\t\t\t\t\t\t<div className='col-12 col-md-12 mb-3'>\n\t\t\t\t\t\t\t\t<label htmlFor='cost' className='form-label'>\n\t\t\t\t\t\t\t\t\tCost\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<input type='text' name='cost' value={expenseForm.cost} onChange={handleInputChange} className='form-control' id='cost' placeholder='Cost' required />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='row g-3'>\n\t\t\t\t\t\t\t{dialogSetting.type === 'date' ? (\n\t\t\t\t\t\t\t\t<div className='col-12 col-md-12 mb-3'>\n\t\t\t\t\t\t\t\t\t<label htmlFor='date' className='form-label'>\n\t\t\t\t\t\t\t\t\t\tDate\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t<input type='date' name='date' value={expenseForm.date} onChange={handleInputChange} className='form-control' id='date' placeholder='Date' />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\tdialogSetting.employee && (\n\t\t\t\t\t\t\t\t\t<div className='col-12 col-md-12 mb-3'>\n\t\t\t\t\t\t\t\t\t\t<label htmlFor='perEmployee' className='form-label'>\n\t\t\t\t\t\t\t\t\t\t\t{dialogSetting.employee}\n\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t<input type='text' name='perEmployee' value={expenseForm.perEmployee} onChange={handleInputChange} className='form-control' id='perEmployee' placeholder={dialogSetting.employee} />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</DialogContent>\n\t\t\t\t\t<DialogActions>\n\t\t\t\t\t\t<button className='btn btn-danger' onClick={handleClose}>\n\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button disabled={loader} type='submit' className='btn btn-primary' autoFocus>\n\t\t\t\t\t\t\t{loader && (\n\t\t\t\t\t\t\t\t<div className='spinner-border spinner-border-sm' role='status'>\n\t\t\t\t\t\t\t\t\t<span className='sr-only'>Loading...</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{!loader && (edit ? 'Update Expense' : 'Add Expense')}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</DialogActions>\n\t\t\t\t</form>\n\t\t\t</Dialog>\n\n\t\t\t<div className='card'>\n\t\t\t\t<div>\n\t\t\t\t\t<div className='table-responsive'>\n\t\t\t\t\t\t<table className='table table-sm table-hover table-nowrap mb-0'>\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Tradeshows</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Cost (per quarter)</th>\n\n\t\t\t\t\t\t\t\t\t<th scope='col'>\n\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\ttitle='Add Major Expense'\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ fontSize: '22px' }}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Tradeshows',\n\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'tradeShows',\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\thandleClickOpen();\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-plus add-icon'></i>\n\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t{expenseInputs &&\n\t\t\t\t\t\t\t\t\texpenseInputs\n\t\t\t\t\t\t\t\t\t\t.filter((exp) => exp.heading === 'tradeShows')\n\t\t\t\t\t\t\t\t\t\t.map((expInp, id) => (\n\t\t\t\t\t\t\t\t\t\t\t<tr key={id}>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.value}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.cost}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-edit edit-icon'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Tradeshows',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'tradeShows',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleEditPlan(expInp);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className='fe fe-trash-2 delete-icon' onClick={() => handleDeletePlan(expInp._id)}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div className='card'>\n\t\t\t\t<div>\n\t\t\t\t\t<div className='table-responsive'>\n\t\t\t\t\t\t<table className='table table-sm table-hover table-nowrap mb-0'>\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Online Marketing</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Cost (per month)</th>\n\n\t\t\t\t\t\t\t\t\t<th scope='col'>\n\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\ttitle='Add Major Expense'\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ fontSize: '22px' }}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Online Marketing',\n\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'onlineMarketing',\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\thandleClickOpen();\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-plus add-icon'></i>\n\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t{expenseInputs &&\n\t\t\t\t\t\t\t\t\texpenseInputs\n\t\t\t\t\t\t\t\t\t\t.filter((exp) => exp.heading === 'onlineMarketing')\n\t\t\t\t\t\t\t\t\t\t.map((expInp, id) => (\n\t\t\t\t\t\t\t\t\t\t\t<tr key={id}>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.value}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.cost}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-edit edit-icon'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Online Marketing',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'onlineMarketing',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleEditPlan(expInp);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className='fe fe-trash-2 delete-icon' onClick={() => handleDeletePlan(expInp._id)}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div className='card'>\n\t\t\t\t<div>\n\t\t\t\t\t<div className='table-responsive'>\n\t\t\t\t\t\t<table className='table table-sm table-hover table-nowrap mb-0'>\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Equipment & Telecom</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Cost</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Per new Employee</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>\n\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\ttitle='Add Major Expense'\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ fontSize: '22px' }}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Equipment & Telecom',\n\t\t\t\t\t\t\t\t\t\t\t\t\temployee: 'Per New Employee',\n\t\t\t\t\t\t\t\t\t\t\t\t\tbuttonTitle: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'equipmentAndTelecom',\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\thandleClickOpen();\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-plus add-icon'></i>\n\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t{expenseInputs &&\n\t\t\t\t\t\t\t\t\texpenseInputs\n\t\t\t\t\t\t\t\t\t\t.filter((exp) => exp.heading === 'equipmentAndTelecom')\n\t\t\t\t\t\t\t\t\t\t.map((expInp, id) => (\n\t\t\t\t\t\t\t\t\t\t\t<tr key={id}>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.value}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.cost}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.perEmployee}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-edit edit-icon'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Equipment & Telecom',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\temployee: 'Per New Employee',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbuttonTitle: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'equipmentAndTelecom',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleEditPlan(expInp);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className='fe fe-trash-2 delete-icon' onClick={() => handleDeletePlan(expInp._id)}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div className='card'>\n\t\t\t\t<div>\n\t\t\t\t\t<div className='table-responsive'>\n\t\t\t\t\t\t<table className='table table-sm table-hover table-nowrap mb-0'>\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Dues & Subscriptions</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Cost</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>\n\t\t\t\t\t\t\t\t\t\tPer new Employee <br /> (per month)\n\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>\n\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\ttitle='Add Major Expense'\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ fontSize: '22px' }}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Dues & Subscription',\n\t\t\t\t\t\t\t\t\t\t\t\t\temployee: 'Per New Employee',\n\t\t\t\t\t\t\t\t\t\t\t\t\tbuttonTitle: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'duesAnsSubscriptions',\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\thandleClickOpen();\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-plus add-icon'></i>\n\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t{expenseInputs &&\n\t\t\t\t\t\t\t\t\texpenseInputs\n\t\t\t\t\t\t\t\t\t\t.filter((exp) => exp.heading === 'duesAnsSubscriptions')\n\t\t\t\t\t\t\t\t\t\t.map((expInp, id) => (\n\t\t\t\t\t\t\t\t\t\t\t<tr key={id}>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.value}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.cost}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.perEmployee}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-edit edit-icon'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Dues & Subscriptions',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\temployee: 'Per New Employee',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbuttonTitle: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'duesAnsSubscriptions',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleEditPlan(expInp);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className='fe fe-trash-2 delete-icon' onClick={() => handleDeletePlan(expInp._id)}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div className='card'>\n\t\t\t\t<div>\n\t\t\t\t\t<div className='table-responsive'>\n\t\t\t\t\t\t<table className='table table-sm table-hover table-nowrap mb-0'>\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Travel & Entertainment</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Cost</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Per Employee (per month)</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>\n\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\ttitle='Add Major Expense'\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ fontSize: '22px' }}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Travel & Entertainment',\n\t\t\t\t\t\t\t\t\t\t\t\t\temployee: 'Per New Employee',\n\t\t\t\t\t\t\t\t\t\t\t\t\tbuttonTitle: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'travelAndEntertainment',\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\thandleClickOpen();\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-plus add-icon'></i>\n\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t{expenseInputs &&\n\t\t\t\t\t\t\t\t\texpenseInputs\n\t\t\t\t\t\t\t\t\t\t.filter((exp) => exp.heading === 'travelAndEntertainment')\n\t\t\t\t\t\t\t\t\t\t.map((expInp, id) => (\n\t\t\t\t\t\t\t\t\t\t\t<tr key={id}>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.value}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.cost}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.perEmployee}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-edit edit-icon'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Travel & Entertainments',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\temployee: 'Per New Employee',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbuttonTitle: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'travelAndEntertainment',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleEditPlan(expInp);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className='fe fe-trash-2 delete-icon' onClick={() => handleDeletePlan(expInp._id)}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div className='card'>\n\t\t\t\t<div>\n\t\t\t\t\t<div className='table-responsive'>\n\t\t\t\t\t\t<table className='table table-sm table-hover table-nowrap mb-0'>\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Others</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Cost</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Date</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>\n\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\ttitle='Add Major Expense'\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ fontSize: '22px' }}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Others',\n\t\t\t\t\t\t\t\t\t\t\t\t\temployee: 'Cost',\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: 'date',\n\t\t\t\t\t\t\t\t\t\t\t\t\tbuttonTitle: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'others',\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\thandleClickOpen();\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-plus add-icon'></i>\n\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t{expenseInputs &&\n\t\t\t\t\t\t\t\t\texpenseInputs\n\t\t\t\t\t\t\t\t\t\t.filter((exp) => exp.heading === 'others')\n\t\t\t\t\t\t\t\t\t\t.map((expInp, id) => (\n\t\t\t\t\t\t\t\t\t\t\t<tr key={id}>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.value}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.cost}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.date}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-edit edit-icon'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Others',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\temployee: 'Cost',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: 'date',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbuttonTitle: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'others',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleEditPlan(expInp);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className='fe fe-trash-2 delete-icon' onClick={() => handleDeletePlan(expInp._id)}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default ExpenseInputs;\n","/home/yamin/Downloads/work/finpro/src/views/Marketing/MarketingInputs.js",["194"],"/home/yamin/Downloads/work/finpro/src/views/Marketing/ContractorExpense.js",["195"],"/home/yamin/Downloads/work/finpro/src/views/RandD/ExpenseInputs.js",["196"],"/home/yamin/Downloads/work/finpro/src/views/RandD/RandDInputs.js",["197"],"import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { addInputs, deleteInputs, updateInputs } from '../../context/input-service';\nimport { AuthContext } from '../../context/context';\nimport { getInputs } from '../../context/fetch-service';\nimport moment from 'moment';\n\nimport ContractExpense from './ContractorExpense';\n\nfunction RandDInputs({ randd, setMsg, setErr, setAlertClass }) {\n\tconst { state, dispatch } = React.useContext(AuthContext);\n\n\tconst [open, setOpen] = React.useState(false);\n\tconst [loader, setLoader] = React.useState(false);\n\tconst [edit, setEdit] = React.useState(false);\n\n\tconst handleClickOpen = () => {\n\t\tsetOpen(true);\n\t};\n\n\tconst handleClose = () => {\n\t\tsetOpen(false);\n\t};\n\n\tconst [randdInputsForm, setRanddInputForm] = React.useState({\n\t\thire: '',\n\t\tstartDate: '',\n\t\tsalary: '',\n\t\ttaxes: '',\n\t\tcommissions: '',\n\t\ttitle: 'randd',\n\t});\n\n\tconst handleRanddInputs = (e) => {\n\t\tconst { name, value } = e.target;\n\t\tsetRanddInputForm((prevState) => {\n\t\t\treturn {\n\t\t\t\t...prevState,\n\t\t\t\t[name]: value,\n\t\t\t};\n\t\t});\n\t};\n\n\tconst handleSubmit = async (e) => {\n\t\tsetLoader(true);\n\t\te.preventDefault();\n\t\ttry {\n\t\t\tif (edit) {\n\t\t\t\tlet update = await updateInputs({ inputMainId: randd._id, inputId: randdInputsForm.inputId, data: randdInputsForm });\n\t\t\t\tif (update.status === 200 || update.status === 201) {\n\t\t\t\t\tlet inputs = await getInputs();\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: 'SET_INPUTS',\n\t\t\t\t\t\tpayload: inputs,\n\t\t\t\t\t});\n\n\t\t\t\t\tsetAlertClass('show');\n\t\t\t\t\tsetMsg(update.data.message);\n\t\t\t\t\tsetErr('');\n\t\t\t\t\tsetEdit(false);\n\t\t\t\t\tsetLoader(false);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlet add = await addInputs(randdInputsForm);\n\t\t\t\tif (add.status === 200 || add.status === 201) {\n\t\t\t\t\tlet inputs = await getInputs();\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: 'SET_INPUTS',\n\t\t\t\t\t\tpayload: inputs,\n\t\t\t\t\t});\n\n\t\t\t\t\tsetAlertClass('show');\n\t\t\t\t\tsetMsg(add.data.message);\n\t\t\t\t\tsetErr('');\n\t\t\t\t\tsetLoader(false);\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tsetAlertClass('show');\n\t\t\tsetMsg('');\n\t\t\tconsole.log(e);\n\t\t\tif (err.response && err.response.data) {\n\t\t\t\tif (err.response.data.error) {\n\t\t\t\t\tsetErr(err.response.data.error.message);\n\t\t\t\t} else if (err.response.data.errors) {\n\t\t\t\t\tlet errors = err.response.data.errors.map((err) => <li>{err.msg}</li>);\n\t\t\t\t\tsetErr(errors);\n\t\t\t\t} else {\n\t\t\t\t\tsetErr(err.response.data.message);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsetErr(err.message);\n\t\t\t}\n\t\t\tsetLoader(false);\n\t\t}\n\t\tsetRanddInputForm({\n\t\t\thire: '',\n\t\t\tstartDate: '',\n\t\t\tsalary: '',\n\t\t\ttaxes: '',\n\t\t\tcommissions: '',\n\t\t\ttitle: 'randd',\n\t\t});\n\t\tsetOpen(false);\n\t};\n\n\tconst handleDeleteInput = async (data) => {\n\t\ttry {\n\t\t\tlet deletePlanRes = await deleteInputs(data);\n\n\t\t\tif (deletePlanRes.status === 200) {\n\t\t\t\tlet inputs = await getInputs();\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: 'SET_INPUTS',\n\t\t\t\t\tpayload: inputs,\n\t\t\t\t});\n\n\t\t\t\tsetAlertClass('show');\n\t\t\t\tsetMsg(deletePlanRes.data.message);\n\t\t\t\tsetErr('');\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tsetAlertClass('show');\n\t\t\tsetMsg('');\n\t\t\tif (e.response && e.response.data) {\n\t\t\t\tif (e.response.data.error) {\n\t\t\t\t\tsetErr(e.response.data.error.message);\n\t\t\t\t} else if (e.response.data.errors) {\n\t\t\t\t\tconsole.log(e.response.data.errors);\n\t\t\t\t\tlet errors = e.response.data.errors.map((err) => <li>{err.msg}</li>);\n\t\t\t\t\tsetErr(errors);\n\t\t\t\t} else {\n\t\t\t\t\tsetErr(e.response.data.message);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsetErr(e.message);\n\t\t\t}\n\t\t}\n\t\tsetOpen(false);\n\t};\n\n\tconst handleEditInput = (input) => {\n\t\tsetEdit(true);\n\t\tsetOpen(true);\n\t\tsetRanddInputForm({\n\t\t\thire: input.hire,\n\t\t\tstartDate: moment(input.date).format('YYYY-MM-DD'),\n\t\t\tsalary: input.salary,\n\t\t\ttaxes: input.taxes,\n\t\t\tcommissions: input.commissions,\n\t\t\ttitle: 'randd',\n\t\t\tinputId: input._id,\n\t\t});\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<div className='card'>\n\t\t\t\t<div>\n\t\t\t\t\t<div className='table-responsive'>\n\t\t\t\t\t\t<table className='table table-sm table-hover table-nowrap mb-0'>\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Hire</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Start Date</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Salary</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Taxes</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Commissions</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>\n\t\t\t\t\t\t\t\t\t\t<i title='Add R & D Inputs' onClick={handleClickOpen} style={{ fontSize: '22px', cursor: 'pointer' }} className='fe fe-plus add-icon'></i>\n\t\t\t\t\t\t\t\t\t\t<Dialog open={open} onClose={handleClose} aria-labelledby='alert-dialog-title' aria-describedby='alert-dialog-description'>\n\t\t\t\t\t\t\t\t\t\t\t<DialogTitle id='alert-dialog-title'>{edit ? 'Edit R & D' : 'Add R & D'}</DialogTitle>\n\n\t\t\t\t\t\t\t\t\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t\t\t\t\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='row g-3'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='col-12 col-md-6 mb-3'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label htmlFor='hire' className='form-label'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tHire\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type='text' name='hire' value={randdInputsForm.hire} onChange={handleRanddInputs} className='form-control' id='hire' placeholder='Hire' required />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='col-6 col-md-6 mb-3'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label htmlFor='startDate' className='form-label'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tStart Date\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type='date' name='startDate' value={randdInputsForm.startDate} onChange={handleRanddInputs} className='form-control' id='date' placeholder='Start Date' required />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='row g-3'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='col-12 col-md-12 mb-3'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label htmlFor='salary' className='form-label'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tSalary\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type='text' name='salary' value={randdInputsForm.salary} onChange={handleRanddInputs} className='form-control' id='salary' placeholder='Salary' required />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='row g-3'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='col-12 col-md-12 mb-3'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label htmlFor='taxes' className='form-label'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tTaxes\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type='text' name='taxes' value={randdInputsForm.taxes} onChange={handleRanddInputs} className='form-control' id='taxes' placeholder='Taxes' required />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='col-12 col-md-12 mb-3'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label htmlFor='commissions' className='form-label'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCommissions\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type='text' name='commissions' value={randdInputsForm.commissions} onChange={handleRanddInputs} className='form-control' id='commissions' placeholder='Commissions' required />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</DialogContent>\n\t\t\t\t\t\t\t\t\t\t\t\t<DialogActions>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<button className='btn btn-danger' onClick={handleClose}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<button disabled={loader} type='submit' className='btn btn-primary' autoFocus>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{loader && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='spinner-border spinner-border-sm' role='status'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='sr-only'>Loading...</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{!loader && (edit ? 'Update R & D' : 'Add R & D')}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t\t</DialogActions>\n\t\t\t\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t\t\t\t</Dialog>\n\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t{randd &&\n\t\t\t\t\t\t\t\t\trandd.inputs &&\n\t\t\t\t\t\t\t\t\trandd.inputs.length > 0 &&\n\t\t\t\t\t\t\t\t\trandd.inputs.map((input, id) => (\n\t\t\t\t\t\t\t\t\t\t<tr key={id}>\n\t\t\t\t\t\t\t\t\t\t\t<td>{input.hire}</td>\n\t\t\t\t\t\t\t\t\t\t\t<td>{input.startDate}</td>\n\t\t\t\t\t\t\t\t\t\t\t<td>{input.salary}</td>\n\t\t\t\t\t\t\t\t\t\t\t<td>{input.taxes}</td>\n\t\t\t\t\t\t\t\t\t\t\t<td>{input.commissions}</td>\n\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<i title='Edit Plan' style={{ cursor: 'pointer' }} className='fe fe-edit edit-icon' onClick={() => handleEditInput(input)}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<i title='Delete Plan' style={{ cursor: 'pointer' }} onClick={() => handleDeleteInput({ inputMainId: randd._id, inputId: input._id })} className='fe fe-trash-2 delete-icon'></i>\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div className='row'>\n\t\t\t\t<div className='col-6 col-xl-6'>{randd && randd._id && <ContractExpense randdId={randd._id} expenseInputs={randd.majorExpenseInput} setMsg={setMsg} setErr={setErr} setAlertClass={setAlertClass} />}</div>\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\nexport default RandDInputs;\n","/home/yamin/Downloads/work/finpro/src/views/RandD/ContractorExpense.js",["198"],"/home/yamin/Downloads/work/finpro/src/views/GandA/ExpenseInputs.js",["199"],"import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport { AuthContext } from '../../context/context';\nimport { getInputs } from '../../context/fetch-service';\nimport { addInputExpense, deleteInputExpense, updateInputExpense } from '../../context/input-service';\n\nfunction ExpenseInputs({ gandaId, expenseInputs, setMsg, setErr, setAlertClass }) {\n\tconst { state, dispatch } = React.useContext(AuthContext);\n\n\tconst [open, setOpen] = React.useState(false);\n\tconst [dialogSetting, setDialogSetting] = React.useState({\n\t\ttitle: '',\n\t\tbuttonTitle: '',\n\t\theading: '',\n\t\ttype: '',\n\t});\n\tconst [loader, setLoader] = React.useState(false);\n\tconst [edit, setEdit] = React.useState(false);\n\n\tconst handleClickOpen = () => {\n\t\tsetOpen(true);\n\t};\n\n\tconst handleClose = () => {\n\t\tsetOpen(false);\n\t};\n\n\tconst [expenseForm, setExpenseForm] = React.useState({\n\t\tvalue: '',\n\t\tcost: '',\n\t\tperEmployee: '',\n\t\tdate: '',\n\t});\n\n\tconst handleInputChange = (e) => {\n\t\tconst { name, value } = e.target;\n\t\tsetExpenseForm((prevState) => {\n\t\t\treturn {\n\t\t\t\t...prevState,\n\t\t\t\t[name]: value,\n\t\t\t};\n\t\t});\n\t};\n\n\tconst handleSubmit = async (e, heading) => {\n\t\te.preventDefault();\n\n\t\tsetLoader(true);\n\t\ttry {\n\t\t\tif (edit) {\n\t\t\t\tlet update = await updateInputExpense({ inputMainId: gandaId, inputId: expenseForm.inputId, data: expenseForm });\n\t\t\t\tif (update.status === 200 || update.status === 201) {\n\t\t\t\t\tlet inputs = await getInputs();\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: 'SET_INPUTS',\n\t\t\t\t\t\tpayload: inputs,\n\t\t\t\t\t});\n\n\t\t\t\t\tsetAlertClass('show');\n\t\t\t\t\tsetMsg(update.data.message);\n\t\t\t\t\tsetErr('');\n\t\t\t\t\tsetEdit(false);\n\t\t\t\t\tsetLoader(false);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlet add = await addInputExpense({ ...expenseForm, inputMainId: gandaId, heading });\n\t\t\t\tif (add.status === 200 || add.status === 201) {\n\t\t\t\t\tlet inputs = await getInputs();\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: 'SET_INPUTS',\n\t\t\t\t\t\tpayload: inputs,\n\t\t\t\t\t});\n\n\t\t\t\t\tsetAlertClass('show');\n\t\t\t\t\tsetMsg(add.data.message);\n\t\t\t\t\tsetErr('');\n\t\t\t\t\tsetLoader(false);\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tsetAlertClass('show');\n\t\t\tsetMsg('');\n\t\t\tconsole.log(e);\n\t\t\tif (err.response && err.response.data) {\n\t\t\t\tif (err.response.data.error) {\n\t\t\t\t\tsetErr(err.response.data.error.message);\n\t\t\t\t} else if (err.response.data.errors) {\n\t\t\t\t\tlet errors = err.response.data.errors.map((err) => <li>{err.msg}</li>);\n\t\t\t\t\tsetErr(errors);\n\t\t\t\t} else {\n\t\t\t\t\tsetErr(err.response.data.message);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsetErr(err.message);\n\t\t\t}\n\t\t\tsetLoader(false);\n\t\t}\n\t\tsetExpenseForm({\n\t\t\tvalue: '',\n\t\t\tcost: '',\n\t\t\tperEmployee: '',\n\t\t\tdate: '',\n\t\t});\n\t\tsetOpen(false);\n\t};\n\n\tconst handleDeletePlan = async (inputId) => {\n\t\ttry {\n\t\t\tlet deletePlanRes = await deleteInputExpense({ inputMainId: gandaId, inputId });\n\n\t\t\tif (deletePlanRes.status === 200) {\n\t\t\t\tlet inputs = await getInputs();\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: 'SET_INPUTS',\n\t\t\t\t\tpayload: inputs,\n\t\t\t\t});\n\n\t\t\t\tsetAlertClass('show');\n\t\t\t\tsetMsg(deletePlanRes.data.message);\n\t\t\t\tsetErr('');\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tsetAlertClass('show');\n\t\t\tsetMsg('');\n\t\t\tif (e.response && e.response.data) {\n\t\t\t\tif (e.response.data.error) {\n\t\t\t\t\tsetErr(e.response.data.error.message);\n\t\t\t\t} else if (e.response.data.errors) {\n\t\t\t\t\tconsole.log(e.response.data.errors);\n\t\t\t\t\tlet errors = e.response.data.errors.map((err) => <li>{err.msg}</li>);\n\t\t\t\t\tsetErr(errors);\n\t\t\t\t} else {\n\t\t\t\t\tsetErr(e.response.data.message);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsetErr(e.message);\n\t\t\t}\n\t\t}\n\t\tsetOpen(false);\n\t};\n\n\tconst handleEditPlan = (expInp) => {\n\t\tsetEdit(true);\n\t\tsetOpen(true);\n\t\tsetExpenseForm({\n\t\t\tvalue: expInp.value,\n\t\t\tcost: expInp.cost,\n\t\t\tperEmployee: expInp.perEmployee,\n\t\t\tdate: expInp.date,\n\t\t\tinputId: expInp._id,\n\t\t});\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<Dialog open={open} onClose={handleClose} aria-labelledby='alert-dialog-title' aria-describedby='alert-dialog-description'>\n\t\t\t\t<DialogTitle id='alert-dialog-title'>{edit ? 'Edit Expense' : 'Add Expense'}</DialogTitle>\n\t\t\t\t<form onSubmit={(e) => handleSubmit(e, dialogSetting.heading)}>\n\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t<div className='row g-3'>\n\t\t\t\t\t\t\t<div className='col-12 col-md-12 mb-3'>\n\t\t\t\t\t\t\t\t<label htmlFor='value' className='form-label'>\n\t\t\t\t\t\t\t\t\t{dialogSetting.title}\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<input type='text' name='value' value={expenseForm.value} onChange={handleInputChange} className='form-control' id='value' placeholder='Credit Card Processing Fees' required />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='row g-3'>\n\t\t\t\t\t\t\t<div className='col-12 col-md-12 mb-3'>\n\t\t\t\t\t\t\t\t<label htmlFor='cost' className='form-label'>\n\t\t\t\t\t\t\t\t\tCost\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<input type='text' name='cost' value={expenseForm.cost} onChange={handleInputChange} className='form-control' id='cost' placeholder='Cost' required />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='row g-3'>\n\t\t\t\t\t\t\t{dialogSetting.type === 'date' ? (\n\t\t\t\t\t\t\t\t<div className='col-12 col-md-12 mb-3'>\n\t\t\t\t\t\t\t\t\t<label htmlFor='date' className='form-label'>\n\t\t\t\t\t\t\t\t\t\tDate\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t<input type='date' name='date' value={expenseForm.date} onChange={handleInputChange} className='form-control' id='date' placeholder='Date' />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\tdialogSetting.employee && (\n\t\t\t\t\t\t\t\t\t<div className='col-12 col-md-12 mb-3'>\n\t\t\t\t\t\t\t\t\t\t<label htmlFor='perEmployee' className='form-label'>\n\t\t\t\t\t\t\t\t\t\t\t{dialogSetting.employee}\n\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t<input type='text' name='perEmployee' value={expenseForm.perEmployee} onChange={handleInputChange} className='form-control' id='perEmployee' placeholder={dialogSetting.employee} />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</DialogContent>\n\t\t\t\t\t<DialogActions>\n\t\t\t\t\t\t<button className='btn btn-danger' onClick={handleClose}>\n\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button disabled={loader} type='submit' className='btn btn-primary' autoFocus>\n\t\t\t\t\t\t\t{loader && (\n\t\t\t\t\t\t\t\t<div className='spinner-border spinner-border-sm' role='status'>\n\t\t\t\t\t\t\t\t\t<span className='sr-only'>Loading...</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{!loader && (edit ? 'Update Expense' : 'Add Expense')}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</DialogActions>\n\t\t\t\t</form>\n\t\t\t</Dialog>\n\n\t\t\t<div className='card'>\n\t\t\t\t<div>\n\t\t\t\t\t<div className='table-responsive'>\n\t\t\t\t\t\t<table className='table table-sm table-hover table-nowrap mb-0'>\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Tradeshows</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Cost (per quarter)</th>\n\n\t\t\t\t\t\t\t\t\t<th scope='col'>\n\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\ttitle='Add Major Expense'\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ fontSize: '22px' }}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Tradeshows',\n\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'tradeShows',\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\thandleClickOpen();\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-plus add-icon'></i>\n\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t{expenseInputs &&\n\t\t\t\t\t\t\t\t\texpenseInputs\n\t\t\t\t\t\t\t\t\t\t.filter((exp) => exp.heading === 'tradeShows')\n\t\t\t\t\t\t\t\t\t\t.map((expInp, id) => (\n\t\t\t\t\t\t\t\t\t\t\t<tr key={id}>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.value}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.cost}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-edit edit-icon'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Tradeshows',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'tradeShows',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleEditPlan(expInp);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className='fe fe-trash-2 delete-icon' onClick={() => handleDeletePlan(expInp._id)}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div className='card'>\n\t\t\t\t<div>\n\t\t\t\t\t<div className='table-responsive'>\n\t\t\t\t\t\t<table className='table table-sm table-hover table-nowrap mb-0'>\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Online Marketing</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Cost (per month)</th>\n\n\t\t\t\t\t\t\t\t\t<th scope='col'>\n\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\ttitle='Add Major Expense'\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ fontSize: '22px' }}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Online Marketing',\n\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'onlineMarketing',\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\thandleClickOpen();\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-plus add-icon'></i>\n\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t{expenseInputs &&\n\t\t\t\t\t\t\t\t\texpenseInputs\n\t\t\t\t\t\t\t\t\t\t.filter((exp) => exp.heading === 'onlineMarketing')\n\t\t\t\t\t\t\t\t\t\t.map((expInp, id) => (\n\t\t\t\t\t\t\t\t\t\t\t<tr key={id}>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.value}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.cost}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-edit edit-icon'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Online Marketing',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'onlineMarketing',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleEditPlan(expInp);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className='fe fe-trash-2 delete-icon' onClick={() => handleDeletePlan(expInp._id)}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div className='card'>\n\t\t\t\t<div>\n\t\t\t\t\t<div className='table-responsive'>\n\t\t\t\t\t\t<table className='table table-sm table-hover table-nowrap mb-0'>\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Equipment & Telecom</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Cost</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Per new Employee</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>\n\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\ttitle='Add Major Expense'\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ fontSize: '22px' }}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Equipment & Telecom',\n\t\t\t\t\t\t\t\t\t\t\t\t\temployee: 'Per New Employee',\n\t\t\t\t\t\t\t\t\t\t\t\t\tbuttonTitle: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'equipmentAndTelecom',\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\thandleClickOpen();\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-plus add-icon'></i>\n\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t{expenseInputs &&\n\t\t\t\t\t\t\t\t\texpenseInputs\n\t\t\t\t\t\t\t\t\t\t.filter((exp) => exp.heading === 'equipmentAndTelecom')\n\t\t\t\t\t\t\t\t\t\t.map((expInp, id) => (\n\t\t\t\t\t\t\t\t\t\t\t<tr key={id}>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.value}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.cost}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.perEmployee}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-edit edit-icon'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Equipment & Telecom',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\temployee: 'Per New Employee',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbuttonTitle: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'equipmentAndTelecom',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleEditPlan(expInp);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className='fe fe-trash-2 delete-icon' onClick={() => handleDeletePlan(expInp._id)}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div className='card'>\n\t\t\t\t<div>\n\t\t\t\t\t<div className='table-responsive'>\n\t\t\t\t\t\t<table className='table table-sm table-hover table-nowrap mb-0'>\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Dues & Subscriptions</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Cost</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>\n\t\t\t\t\t\t\t\t\t\tPer new Employee <br /> (per month)\n\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>\n\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\ttitle='Add Major Expense'\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ fontSize: '22px' }}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Dues & Subscription',\n\t\t\t\t\t\t\t\t\t\t\t\t\temployee: 'Per New Employee',\n\t\t\t\t\t\t\t\t\t\t\t\t\tbuttonTitle: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'duesAnsSubscriptions',\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\thandleClickOpen();\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-plus add-icon'></i>\n\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t{expenseInputs &&\n\t\t\t\t\t\t\t\t\texpenseInputs\n\t\t\t\t\t\t\t\t\t\t.filter((exp) => exp.heading === 'duesAnsSubscriptions')\n\t\t\t\t\t\t\t\t\t\t.map((expInp, id) => (\n\t\t\t\t\t\t\t\t\t\t\t<tr key={id}>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.value}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.cost}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.perEmployee}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-edit edit-icon'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Dues & Subscriptions',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\temployee: 'Per New Employee',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbuttonTitle: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'duesAnsSubscriptions',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleEditPlan(expInp);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className='fe fe-trash-2 delete-icon' onClick={() => handleDeletePlan(expInp._id)}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div className='card'>\n\t\t\t\t<div>\n\t\t\t\t\t<div className='table-responsive'>\n\t\t\t\t\t\t<table className='table table-sm table-hover table-nowrap mb-0'>\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Travel & Entertainment</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Cost</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Per Employee (per month)</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>\n\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\ttitle='Add Major Expense'\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ fontSize: '22px' }}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Travel & Entertainment',\n\t\t\t\t\t\t\t\t\t\t\t\t\temployee: 'Per New Employee',\n\t\t\t\t\t\t\t\t\t\t\t\t\tbuttonTitle: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'travelAndEntertainment',\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\thandleClickOpen();\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-plus add-icon'></i>\n\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t{expenseInputs &&\n\t\t\t\t\t\t\t\t\texpenseInputs\n\t\t\t\t\t\t\t\t\t\t.filter((exp) => exp.heading === 'travelAndEntertainment')\n\t\t\t\t\t\t\t\t\t\t.map((expInp, id) => (\n\t\t\t\t\t\t\t\t\t\t\t<tr key={id}>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.value}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.cost}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.perEmployee}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-edit edit-icon'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Travel & Entertainments',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\temployee: 'Per New Employee',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbuttonTitle: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'travelAndEntertainment',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleEditPlan(expInp);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className='fe fe-trash-2 delete-icon' onClick={() => handleDeletePlan(expInp._id)}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div className='card'>\n\t\t\t\t<div>\n\t\t\t\t\t<div className='table-responsive'>\n\t\t\t\t\t\t<table className='table table-sm table-hover table-nowrap mb-0'>\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Others</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Cost</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Date</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>\n\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\ttitle='Add Major Expense'\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ fontSize: '22px' }}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Others',\n\t\t\t\t\t\t\t\t\t\t\t\t\temployee: 'Cost',\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: 'date',\n\t\t\t\t\t\t\t\t\t\t\t\t\tbuttonTitle: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'others',\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\thandleClickOpen();\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-plus add-icon'></i>\n\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t{expenseInputs &&\n\t\t\t\t\t\t\t\t\texpenseInputs\n\t\t\t\t\t\t\t\t\t\t.filter((exp) => exp.heading === 'others')\n\t\t\t\t\t\t\t\t\t\t.map((expInp, id) => (\n\t\t\t\t\t\t\t\t\t\t\t<tr key={id}>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.value}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.cost}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.date}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-edit edit-icon'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Others',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\temployee: 'Cost',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: 'date',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbuttonTitle: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'others',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleEditPlan(expInp);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className='fe fe-trash-2 delete-icon' onClick={() => handleDeletePlan(expInp._id)}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default ExpenseInputs;\n","/home/yamin/Downloads/work/finpro/src/views/GandA/GandAInputs.js",["200"],"/home/yamin/Downloads/work/finpro/src/views/GandA/ContractorExpense.js",["201"],{"ruleId":"202","replacedBy":"203"},{"ruleId":"204","replacedBy":"205"},{"ruleId":"202","replacedBy":"206"},{"ruleId":"204","replacedBy":"207"},{"ruleId":"208","severity":1,"message":"209","line":10,"column":61,"nodeType":"210","messageId":"211","endLine":10,"endColumn":67},{"ruleId":"208","severity":1,"message":"212","line":97,"column":7,"nodeType":"210","messageId":"211","endLine":97,"endColumn":17},{"ruleId":"208","severity":1,"message":"213","line":15,"column":8,"nodeType":"210","messageId":"211","endLine":15,"endColumn":15},{"ruleId":"208","severity":1,"message":"213","line":17,"column":8,"nodeType":"210","messageId":"211","endLine":17,"endColumn":15},{"ruleId":"208","severity":1,"message":"214","line":19,"column":10,"nodeType":"210","messageId":"211","endLine":19,"endColumn":15},{"ruleId":"202","replacedBy":"215"},{"ruleId":"204","replacedBy":"216"},{"ruleId":"202","replacedBy":"217"},{"ruleId":"204","replacedBy":"218"},{"ruleId":"208","severity":1,"message":"214","line":12,"column":10,"nodeType":"210","messageId":"211","endLine":12,"endColumn":15},{"ruleId":"208","severity":1,"message":"214","line":12,"column":10,"nodeType":"210","messageId":"211","endLine":12,"endColumn":15},{"ruleId":"208","severity":1,"message":"214","line":11,"column":10,"nodeType":"210","messageId":"211","endLine":11,"endColumn":15},{"ruleId":"208","severity":1,"message":"214","line":12,"column":10,"nodeType":"210","messageId":"211","endLine":12,"endColumn":15},{"ruleId":"208","severity":1,"message":"214","line":14,"column":10,"nodeType":"210","messageId":"211","endLine":14,"endColumn":15},{"ruleId":"208","severity":1,"message":"214","line":12,"column":10,"nodeType":"210","messageId":"211","endLine":12,"endColumn":15},{"ruleId":"208","severity":1,"message":"214","line":12,"column":10,"nodeType":"210","messageId":"211","endLine":12,"endColumn":15},{"ruleId":"208","severity":1,"message":"214","line":14,"column":10,"nodeType":"210","messageId":"211","endLine":14,"endColumn":15},{"ruleId":"208","severity":1,"message":"214","line":12,"column":10,"nodeType":"210","messageId":"211","endLine":12,"endColumn":15},{"ruleId":"208","severity":1,"message":"214","line":12,"column":10,"nodeType":"210","messageId":"211","endLine":12,"endColumn":15},{"ruleId":"208","severity":1,"message":"214","line":14,"column":10,"nodeType":"210","messageId":"211","endLine":14,"endColumn":15},{"ruleId":"208","severity":1,"message":"214","line":12,"column":10,"nodeType":"210","messageId":"211","endLine":12,"endColumn":15},{"ruleId":"208","severity":1,"message":"214","line":12,"column":10,"nodeType":"210","messageId":"211","endLine":12,"endColumn":15},{"ruleId":"208","severity":1,"message":"214","line":14,"column":10,"nodeType":"210","messageId":"211","endLine":14,"endColumn":15},{"ruleId":"208","severity":1,"message":"214","line":12,"column":10,"nodeType":"210","messageId":"211","endLine":12,"endColumn":15},"no-native-reassign",["219"],"no-negated-in-lhs",["220"],["219"],["220"],"no-unused-vars","'radius' is defined but never used.","Identifier","unusedVar","'nextCorner' is assigned a value but never used.","'classes' is assigned a value but never used.","'state' is assigned a value but never used.",["219"],["220"],["219"],["220"],"no-global-assign","no-unsafe-negation"]