[{"/home/yamin/Downloads/work/finpro/src/reportWebVitals.js":"1","/home/yamin/Downloads/work/finpro/src/components/MenuBar.js":"2","/home/yamin/Downloads/work/finpro/src/views/Reports/Reports.js":"3","/home/yamin/Downloads/work/finpro/src/views/RandD/RandD.js":"4","/home/yamin/Downloads/work/finpro/src/RoundedBars.js":"5","/home/yamin/Downloads/work/finpro/src/views/Marketing/Marketing.js":"6","/home/yamin/Downloads/work/finpro/src/views/Sales/Sales.js":"7","/home/yamin/Downloads/work/finpro/src/views/GandA/GandA.js":"8","/home/yamin/Downloads/work/finpro/src/App.js":"9","/home/yamin/Downloads/work/finpro/src/views/Auth/SignUp/SignUp.js":"10","/home/yamin/Downloads/work/finpro/src/context/context.js":"11","/home/yamin/Downloads/work/finpro/src/views/Revenue/Revenue.js":"12","/home/yamin/Downloads/work/finpro/src/views/Auth/Login/Login.js":"13","/home/yamin/Downloads/work/finpro/src/routes.js":"14","/home/yamin/Downloads/work/finpro/src/views/Checkout/Checkout.js":"15","/home/yamin/Downloads/work/finpro/src/context/axios.js":"16","/home/yamin/Downloads/work/finpro/src/index.js":"17","/home/yamin/Downloads/work/finpro/src/views/Settings/Settings.js":"18","/home/yamin/Downloads/work/finpro/src/views/Pricing/Pricing.js":"19","/home/yamin/Downloads/work/finpro/src/views/Billing/Billing.js":"20","/home/yamin/Downloads/work/finpro/src/service.js":"21","/home/yamin/Downloads/work/finpro/src/context/types.js":"22","/home/yamin/Downloads/work/finpro/src/context/fetch-service.js":"23","/home/yamin/Downloads/work/finpro/src/context/revenue-service.js":"24","/home/yamin/Downloads/work/finpro/src/views/Revenue/RevenueInputs.js":"25","/home/yamin/Downloads/work/finpro/src/views/Revenue/ExpenseInputs.js":"26","/home/yamin/Downloads/work/finpro/src/views/Revenue/StartingCapitalInput.js":"27","/home/yamin/Downloads/work/finpro/src/views/Sales/ExpenseInputs.js":"28","/home/yamin/Downloads/work/finpro/src/views/Sales/SalesInputs.js":"29","/home/yamin/Downloads/work/finpro/src/context/input-service.js":"30","/home/yamin/Downloads/work/finpro/src/views/Sales/ContractorExpense.js":"31","/home/yamin/Downloads/work/finpro/src/views/Marketing/ExpenseInputs.js":"32","/home/yamin/Downloads/work/finpro/src/views/Marketing/MarketingInputs.js":"33","/home/yamin/Downloads/work/finpro/src/views/Marketing/ContractorExpense.js":"34","/home/yamin/Downloads/work/finpro/src/views/RandD/ExpenseInputs.js":"35","/home/yamin/Downloads/work/finpro/src/views/RandD/RandDInputs.js":"36","/home/yamin/Downloads/work/finpro/src/views/RandD/ContractorExpense.js":"37","/home/yamin/Downloads/work/finpro/src/views/GandA/ExpenseInputs.js":"38","/home/yamin/Downloads/work/finpro/src/views/GandA/GandAInputs.js":"39","/home/yamin/Downloads/work/finpro/src/views/GandA/ContractorExpense.js":"40","/home/yamin/Downloads/work/finpro/src/utils/getYearSum.js":"41"},{"size":362,"mtime":1609134352161,"results":"42","hashOfConfig":"43"},{"size":4895,"mtime":1609134352157,"results":"44","hashOfConfig":"43"},{"size":4585,"mtime":1609141141769,"results":"45","hashOfConfig":"43"},{"size":6075,"mtime":1609160123932,"results":"46","hashOfConfig":"43"},{"size":5304,"mtime":1609138302684,"results":"47","hashOfConfig":"43"},{"size":6227,"mtime":1609159925936,"results":"48","hashOfConfig":"43"},{"size":5926,"mtime":1609159552606,"results":"49","hashOfConfig":"43"},{"size":6120,"mtime":1609160099181,"results":"50","hashOfConfig":"43"},{"size":661,"mtime":1609156880976,"results":"51","hashOfConfig":"43"},{"size":4519,"mtime":1609134352165,"results":"52","hashOfConfig":"43"},{"size":6079,"mtime":1609138958154,"results":"53","hashOfConfig":"43"},{"size":6888,"mtime":1609166883457,"results":"54","hashOfConfig":"43"},{"size":4745,"mtime":1609134352161,"results":"55","hashOfConfig":"43"},{"size":1794,"mtime":1608990562862,"results":"56","hashOfConfig":"43"},{"size":2187,"mtime":1608795239980,"results":"57","hashOfConfig":"43"},{"size":465,"mtime":1609160331144,"results":"58","hashOfConfig":"43"},{"size":579,"mtime":1609134352161,"results":"59","hashOfConfig":"43"},{"size":7174,"mtime":1609134352173,"results":"60","hashOfConfig":"43"},{"size":1441,"mtime":1609134352169,"results":"61","hashOfConfig":"43"},{"size":5404,"mtime":1609134352165,"results":"62","hashOfConfig":"43"},{"size":601,"mtime":1609134352161,"results":"63","hashOfConfig":"43"},{"size":344,"mtime":1609078930106,"results":"64","hashOfConfig":"43"},{"size":859,"mtime":1609134352157,"results":"65","hashOfConfig":"43"},{"size":2380,"mtime":1609134352161,"results":"66","hashOfConfig":"43"},{"size":8254,"mtime":1609171205619,"results":"67","hashOfConfig":"43"},{"size":9762,"mtime":1609167895907,"results":"68","hashOfConfig":"43"},{"size":6671,"mtime":1609167942158,"results":"69","hashOfConfig":"43"},{"size":13364,"mtime":1609168229747,"results":"70","hashOfConfig":"43"},{"size":8529,"mtime":1609155916983,"results":"71","hashOfConfig":"43"},{"size":1586,"mtime":1609134352161,"results":"72","hashOfConfig":"43"},{"size":6864,"mtime":1609155954435,"results":"73","hashOfConfig":"43"},{"size":16430,"mtime":1609156039455,"results":"74","hashOfConfig":"43"},{"size":8693,"mtime":1609156022403,"results":"75","hashOfConfig":"43"},{"size":6880,"mtime":1609156046907,"results":"76","hashOfConfig":"43"},{"size":13360,"mtime":1609155977911,"results":"77","hashOfConfig":"43"},{"size":8538,"mtime":1609155966263,"results":"78","hashOfConfig":"43"},{"size":6864,"mtime":1609155991859,"results":"79","hashOfConfig":"43"},{"size":16414,"mtime":1609156065843,"results":"80","hashOfConfig":"43"},{"size":8509,"mtime":1609156057443,"results":"81","hashOfConfig":"43"},{"size":6864,"mtime":1609156074195,"results":"82","hashOfConfig":"43"},{"size":1254,"mtime":1609159327126,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"1c1kmpq",{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"86"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"92"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"86"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"92"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"117"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"92"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"86"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"/home/yamin/Downloads/work/finpro/src/reportWebVitals.js",[],["185","186"],"/home/yamin/Downloads/work/finpro/src/components/MenuBar.js",[],"/home/yamin/Downloads/work/finpro/src/views/Reports/Reports.js",["187"],"import React from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { ButtonGroup, Button } from 'react-bootstrap';\nimport { AuthContext } from '../../context/context';\nimport { useHistory } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport numeral from 'numeral';\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tdisplay: 'flex',\n\t\tjustifyContent: 'center',\n\t},\n}));\n\nfunction Reports() {\n\tconst history = useHistory();\n\n\tconst classes = useStyles();\n\tconst {\n\t\tstate: { reports, isAuthenticated },\n\t} = React.useContext(AuthContext);\n\n\tReact.useEffect(() => {\n\t\tif (!isAuthenticated) {\n\t\t\thistory.push('/login');\n\t\t}\n\t}, [isAuthenticated, history]);\n\n\tconst [chartValue, setChartValue] = React.useState('P&L by Year');\n\tconst handleChange = (text) => {\n\t\tsetChartValue(text);\n\t};\n\n\treturn (\n\t\t<div className='report-container'>\n\t\t\t<div className='container-fluid'>\n\t\t\t\t<div className='row'>\n\t\t\t\t\t<div className='col-3 col-xl-3 full-height'>\n\t\t\t\t\t\t<div className='control-panel'>\n\t\t\t\t\t\t\t<div className='control-btn'>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\thandleChange('P&L by Year');\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tclassName='btn btn-primary'>\n\t\t\t\t\t\t\t\t\tP&L by Year\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='control-btn'>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\thandleChange('P&L by Quarter');\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tclassName='btn btn-light'>\n\t\t\t\t\t\t\t\t\tP&L by Quarter\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='control-btn'>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\thandleChange('CapEx & Cash Flow');\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tclassName='btn btn-light'>\n\t\t\t\t\t\t\t\t\tCapEx & Cash Flow\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='col-9 col-xl-9'>\n\t\t\t\t\t\t<div className='chart-panel'>\n\t\t\t\t\t\t\t<div className='card'>\n\t\t\t\t\t\t\t\t<div className='card-header'>\n\t\t\t\t\t\t\t\t\t<h4 className='card-header-title'>{chartValue}</h4>\n\t\t\t\t\t\t\t\t\t<div className='chart-handle-grup'>\n\t\t\t\t\t\t\t\t\t\t<ButtonGroup aria-label='Basic example'>\n\t\t\t\t\t\t\t\t\t\t\t<Button className='btn-custom-group'>Export</Button>\n\t\t\t\t\t\t\t\t\t\t\t<Button className='btn-custom-group'>CSV</Button>\n\t\t\t\t\t\t\t\t\t\t\t<Button className='btn-custom-group'>PDF</Button>\n\t\t\t\t\t\t\t\t\t\t</ButtonGroup>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='card-body'>\n\t\t\t\t\t\t\t\t\t<Bar\n\t\t\t\t\t\t\t\t\t\theight={400}\n\t\t\t\t\t\t\t\t\t\tdata={reports}\n\t\t\t\t\t\t\t\t\t\toptions={{\n\t\t\t\t\t\t\t\t\t\t\ttooltips: {\n\t\t\t\t\t\t\t\t\t\t\t\tcallbacks: {\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: function (tooltipItem, data) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn data['labels'][tooltipItem[0]['index']];\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: function (tooltipItem, data) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlet value;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata['datasets'].forEach((d) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (d['data'][tooltipItem['index']] === Number(tooltipItem.value)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue = '$ ' + d['data'][tooltipItem['index']];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// console.log(value)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\tafterLabel: function (tooltipItem, data) {},\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: '#FFF',\n\t\t\t\t\t\t\t\t\t\t\t\tborderWidth: 2,\n\t\t\t\t\t\t\t\t\t\t\t\txPadding: 15,\n\t\t\t\t\t\t\t\t\t\t\t\tyPadding: 15,\n\t\t\t\t\t\t\t\t\t\t\t\tborderColor: '#ddd',\n\t\t\t\t\t\t\t\t\t\t\t\ttitleFontSize: 16,\n\t\t\t\t\t\t\t\t\t\t\t\ttitleFontColor: '#0066ff',\n\t\t\t\t\t\t\t\t\t\t\t\tbodyFontColor: '#000',\n\t\t\t\t\t\t\t\t\t\t\t\tbodyFontSize: 14,\n\t\t\t\t\t\t\t\t\t\t\t\tdisplayColors: false,\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\tcornerRadius: 20,\n\t\t\t\t\t\t\t\t\t\t\tresponsive: true,\n\t\t\t\t\t\t\t\t\t\t\tmaintainAspectRatio: false,\n\t\t\t\t\t\t\t\t\t\t\tscales: {\n\t\t\t\t\t\t\t\t\t\t\t\tyAxes: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tticks: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcallback: function (value) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn '$ ' + numeral(value).format('0.0a');\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstepSize: 200,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbeginAtZero: true,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tgridLines: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tborderDash: [2],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// zeroLineColor: 'transparent',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tzeroLineWidth: 3,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttickMarkLength: 15,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlineWidth: 0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\txAxes: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// barThickness: 10,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbarPercentage: 0.3,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tgridLines: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlineWidth: 0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tzeroLineColor: 'transparent',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tlegend={{\n\t\t\t\t\t\t\t\t\t\t\tdisplay: true,\n\t\t\t\t\t\t\t\t\t\t\tposition: 'bottom',\n\t\t\t\t\t\t\t\t\t\t\tlabels: {\n\t\t\t\t\t\t\t\t\t\t\t\tusePointStyle: true,\n\t\t\t\t\t\t\t\t\t\t\t\tboxWidth: 10,\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Reports;\n",["188","189"],"/home/yamin/Downloads/work/finpro/src/views/RandD/RandD.js",[],"/home/yamin/Downloads/work/finpro/src/RoundedBars.js",["190","191","192"],"//Custom rewrite for radius border on bar draw\n//Code from https://github.com/jedtrow/Chart.js-Rounded-Bar-Charts with a few adjustments\n\nimport { Chart as ChartJS } from 'react-chartjs-2';\nChartJS.elements.Rectangle.prototype.draw = function () {\n\tlet ctx = this._chart.ctx;\n\tlet vm = this._view;\n\tlet left, right, top, bottom, signX, signY, borderSkipped, radius;\n\tlet borderWidth = vm.borderWidth;\n\n\t// If radius is less than 0 or is large enough to cause drawing errors a max\n\t//      radius is imposed. If cornerRadius is not defined set it to 0.\n\tlet cornerRadius = this._chart.config.options.cornerRadius;\n\tif (cornerRadius < 0) {\n\t\tcornerRadius = 0;\n\t}\n\tif (typeof cornerRadius == 'undefined') {\n\t\tcornerRadius = 0;\n\t}\n\n\tif (!vm.horizontal) {\n\t\t// bar\n\t\tleft = vm.x - vm.width / 2;\n\t\tright = vm.x + vm.width / 2;\n\t\ttop = vm.y;\n\t\tbottom = vm.base;\n\t\tsignX = 1;\n\t\tsignY = bottom > top ? 1 : -1;\n\t\tborderSkipped = vm.borderSkipped || 'bottom';\n\t} else {\n\t\t// horizontal bar\n\t\tleft = vm.base;\n\t\tright = vm.x;\n\t\ttop = vm.y - vm.height / 2;\n\t\tbottom = vm.y + vm.height / 2;\n\t\tsignX = right > left ? 1 : -1;\n\t\tsignY = 1;\n\t\tborderSkipped = vm.borderSkipped || 'left';\n\t}\n\n\t// Canvas doesn't allow us to stroke inside the width so we can\n\t// adjust the sizes to fit if we're setting a stroke on the line\n\tif (borderWidth) {\n\t\t// borderWidth shold be less than bar width and bar height.\n\t\tlet barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n\t\tborderWidth = borderWidth > barSize ? barSize : borderWidth;\n\t\tlet halfStroke = borderWidth / 2;\n\t\t// Adjust borderWidth when bar top position is near vm.base(zero).\n\t\tlet borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\n\t\tlet borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\n\t\tlet borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\n\t\tlet borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\n\t\t// not become a vertical line?\n\t\tif (borderLeft !== borderRight) {\n\t\t\ttop = borderTop;\n\t\t\tbottom = borderBottom;\n\t\t}\n\t\t// not become a horizontal line?\n\t\tif (borderTop !== borderBottom) {\n\t\t\tleft = borderLeft;\n\t\t\tright = borderRight;\n\t\t}\n\t}\n\n\tctx.beginPath();\n\tctx.fillStyle = vm.backgroundColor;\n\tctx.strokeStyle = vm.borderColor;\n\tctx.lineWidth = borderWidth;\n\n\t// Corner points, from bottom-left to bottom-right clockwise\n\t// | 1 2 |\n\t// | 0 3 |\n\tvar corners = [\n\t\t[left, bottom],\n\t\t[left, top],\n\t\t[right, top],\n\t\t[right, bottom],\n\t];\n\n\t// Find first (starting) corner with fallback to 'bottom'\n\tlet borders = ['bottom', 'left', 'top', 'right'];\n\tlet startCorner = borders.indexOf(borderSkipped, 0);\n\tif (startCorner === -1) {\n\t\tstartCorner = 0;\n\t}\n\n\tfunction cornerAt(index) {\n\t\treturn corners[(startCorner + index) % 4];\n\t}\n\n\t// Draw rectangle from 'startCorner'\n\tlet corner = cornerAt(0);\n\tctx.moveTo(corner[0], corner[1]);\n\n\tfor (let i = 1; i < 4; i++) {\n\t\tcorner = cornerAt(i);\n\t\tlet nextCornerId = i + 1;\n\t\tif (nextCornerId == 4) {\n\t\t\tnextCornerId = 0;\n\t\t}\n\n\t\tlet nextCorner = cornerAt(nextCornerId);\n\n\t\tlet width = corners[2][0] - corners[1][0];\n\t\tlet height = corners[0][1] - corners[1][1];\n\t\tlet x = corners[1][0];\n\t\tlet y = corners[1][1];\n\n\t\tlet radius = cornerRadius;\n\t\t// Fix radius being too large\n\t\tif (radius > Math.abs(height) / 2) {\n\t\t\tradius = Math.floor(Math.abs(height) / 2);\n\t\t}\n\t\tif (radius > Math.abs(width) / 2) {\n\t\t\tradius = Math.floor(Math.abs(width) / 2);\n\t\t}\n\n\t\tif (height < 0) {\n\t\t\t// Negative values in a standard bar chart\n\t\t\tlet x_tl = x;\n\t\t\tlet x_tr = x + width;\n\t\t\tlet y_tl = y + height;\n\t\t\tlet y_tr = y + height;\n\n\t\t\tlet x_bl = x;\n\t\t\tlet x_br = x + width;\n\t\t\tlet y_bl = y;\n\t\t\tlet y_br = y;\n\n\t\t\t// Draw\n\t\t\tctx.moveTo(x_bl + radius, y_bl);\n\t\t\tctx.lineTo(x_br - radius, y_br);\n\t\t\tctx.quadraticCurveTo(x_br, y_br, x_br, y_br - radius);\n\t\t\tctx.lineTo(x_tr, y_tr + radius);\n\t\t\tctx.quadraticCurveTo(x_tr, y_tr, x_tr - radius, y_tr);\n\t\t\tctx.lineTo(x_tl + radius, y_tl);\n\t\t\tctx.quadraticCurveTo(x_tl, y_tl, x_tl, y_tl + radius);\n\t\t\tctx.lineTo(x_bl, y_bl - radius);\n\t\t\tctx.quadraticCurveTo(x_bl, y_bl, x_bl + radius, y_bl);\n\t\t} else if (width < 0) {\n\t\t\t// Negative values in a horizontal bar chart\n\t\t\tlet x_tl = x + width;\n\t\t\tlet x_tr = x;\n\t\t\tlet y_tl = y;\n\t\t\tlet y_tr = y;\n\n\t\t\tlet x_bl = x + width;\n\t\t\tlet x_br = x;\n\t\t\tlet y_bl = y + height;\n\t\t\tlet y_br = y + height;\n\n\t\t\t// Draw\n\t\t\tctx.moveTo(x_bl + radius, y_bl);\n\t\t\tctx.lineTo(x_br - radius, y_br);\n\t\t\tctx.quadraticCurveTo(x_br, y_br, x_br, y_br - radius);\n\t\t\tctx.lineTo(x_tr, y_tr + radius);\n\t\t\tctx.quadraticCurveTo(x_tr, y_tr, x_tr - radius, y_tr);\n\t\t\tctx.lineTo(x_tl + radius, y_tl);\n\t\t\tctx.quadraticCurveTo(x_tl, y_tl, x_tl, y_tl + radius);\n\t\t\tctx.lineTo(x_bl, y_bl - radius);\n\t\t\tctx.quadraticCurveTo(x_bl, y_bl, x_bl + radius, y_bl);\n\t\t} else {\n\t\t\t//Positive Value\n\t\t\tctx.moveTo(x + radius, y);\n\t\t\tctx.lineTo(x + width - radius, y);\n\t\t\tctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\t\t\tctx.lineTo(x + width, y + height - radius);\n\t\t\tctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\t\t\tctx.lineTo(x + radius, y + height);\n\t\t\tctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\t\t\tctx.lineTo(x, y + radius);\n\t\t\tctx.quadraticCurveTo(x, y, x + radius, y);\n\t\t}\n\t}\n\n\tctx.fill();\n\tif (borderWidth) {\n\t\tctx.stroke();\n\t}\n};\n","/home/yamin/Downloads/work/finpro/src/views/Marketing/Marketing.js",["193"],"import React from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport { FormControl, InputBase, NativeSelect } from '@material-ui/core';\nimport { AuthContext } from '../../context/context';\nimport { useHistory } from 'react-router-dom';\n\nimport { ButtonGroup, Button } from 'react-bootstrap';\nimport { getInputs } from '../../context/fetch-service';\n\nimport MarketingInputs from './MarketingInputs';\nimport ExpenseInputs from './ExpenseInputs';\n\nimport { getYearSum, duplicateCounter, getTotal } from '../../utils/getYearSum';\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tdisplay: 'flex',\n\t\tjustifyContent: 'center',\n\t},\n}));\n\nconst BootstrapInput = withStyles((theme) => ({\n\troot: {\n\t\t'label + &': {\n\t\t\tmarginTop: theme.spacing(3),\n\t\t},\n\t},\n\tinput: {\n\t\tborderRadius: 4,\n\t\tposition: 'relative',\n\t\tbackgroundColor: '#f8f9fa',\n\t\t// border: '1px solid #ced4da',\n\t\tfontSize: 16,\n\t\tpadding: '10px 26px 10px 12px',\n\t\ttransition: theme.transitions.create(['border-color', 'box-shadow']),\n\t\t// Use the system font instead of the default Roboto font.\n\t\tfontFamily: ['-apple-system', 'BlinkMacSystemFont', '\"Segoe UI\"', 'Roboto', '\"Helvetica Neue\"', 'Arial', 'sans-serif', '\"Apple Color Emoji\"', '\"Segoe UI Emoji\"', '\"Segoe UI Symbol\"'].join(','),\n\t\t'&:focus': {\n\t\t\tborderRadius: 4,\n\t\t\tborderColor: '#80bdff',\n\t\t\tboxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n\t\t},\n\t},\n}))(InputBase);\n\nfunction Marketing() {\n\tconst history = useHistory();\n\tconst classes = useStyles();\n\tconst {\n\t\tstate: { inputs, data, isAuthenticated },\n\t\tdispatch,\n\t} = React.useContext(AuthContext);\n\n\tconst marketing = inputs.filter((i) => i.title === 'marketing')[0];\n\n\tconst [chartValue, setChartValue] = React.useState('year');\n\tconst handleChange = (event) => {\n\t\tsetChartValue(event.target.value);\n\t};\n\n\tconst [msg, setMsg] = React.useState('');\n\tconst [err, setErr] = React.useState('');\n\tconst [alertClass, setAlertClass] = React.useState('');\n\n\tconst handleCloseAlert = () => {\n\t\tsetAlertClass('hide');\n\t\tsetErr('');\n\t\tsetMsg('');\n\t};\n\n\tReact.useEffect(() => {\n\t\tif (!isAuthenticated) {\n\t\t\thistory.push('/login');\n\t\t}\n\t\tasync function fetchRevenue() {\n\t\t\tlet inputs = await getInputs();\n\t\t\tdispatch({\n\t\t\t\ttype: 'SET_INPUTS',\n\t\t\t\tpayload: inputs,\n\t\t\t});\n\t\t}\n\t\tfetchRevenue();\n\t}, [isAuthenticated, history, dispatch]);\n\n\treturn (\n\t\t<div className='container-fluid'>\n\t\t\t<div className='row'>\n\t\t\t\t<div className='col-12 col-xl-12'>\n\t\t\t\t\t{msg && (\n\t\t\t\t\t\t<div className={`alert alert-success alert-dismissible fade ${alertClass}`} role='alert'>\n\t\t\t\t\t\t\t<strong>{msg}</strong>\n\t\t\t\t\t\t\t<button onClick={handleCloseAlert} type='button' className='close' data-dismiss='alert' aria-label='Close'>\n\t\t\t\t\t\t\t\t<span aria-hidden='true'>×</span>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t\t{err && (\n\t\t\t\t\t\t<div className={`alert alert-danger alert-dismissible fade ${alertClass}`} role='alert'>\n\t\t\t\t\t\t\t<strong>{err}</strong>\n\t\t\t\t\t\t\t<button onClick={handleCloseAlert} type='button' className='close' data-dismiss='alert' aria-label='Close'>\n\t\t\t\t\t\t\t\t<span aria-hidden='true'>×</span>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t\t<div className='table-container-header'>\n\t\t\t\t\t\t<h4 className=''>Marketing</h4>\n\t\t\t\t\t\t<div className='chart-handle-grup'>\n\t\t\t\t\t\t\t<div className='chart-dropdown'>\n\t\t\t\t\t\t\t\t<span className='mr-3'>View By :</span>\n\t\t\t\t\t\t\t\t<FormControl variant='outlined' className={classes.margin}>\n\t\t\t\t\t\t\t\t\t<NativeSelect id='demo-customized-select-native' value={chartValue} onChange={handleChange} input={<BootstrapInput />}>\n\t\t\t\t\t\t\t\t\t\t<option defaultValue='year' value='year'>\n\t\t\t\t\t\t\t\t\t\t\tYear\n\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t\t<option value='quarter'>Quarter</option>\n\t\t\t\t\t\t\t\t\t\t<option value='month'>Month</option>\n\t\t\t\t\t\t\t\t\t</NativeSelect>\n\t\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<ButtonGroup aria-label='Basic example'>\n\t\t\t\t\t\t\t\t<Button className='btn-custom-group'>Export</Button>\n\t\t\t\t\t\t\t\t<Button className='btn-custom-group'>CSV</Button>\n\t\t\t\t\t\t\t\t<Button className='btn-custom-group'>PDF</Button>\n\t\t\t\t\t\t\t</ButtonGroup>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className='custom-table-container'>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th></th>\n\t\t\t\t\t\t\t\t\t{duplicateCounter(marketing) &&\n\t\t\t\t\t\t\t\t\t\tduplicateCounter(marketing)\n\t\t\t\t\t\t\t\t\t\t\t.splice(-4)\n\t\t\t\t\t\t\t\t\t\t\t.map((year, id) => <th key={id}>{new Date(year.startDate).getFullYear()}</th>)}\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th>Headcounts</th>\n\t\t\t\t\t\t\t\t\t{duplicateCounter(marketing) &&\n\t\t\t\t\t\t\t\t\t\tduplicateCounter(marketing)\n\t\t\t\t\t\t\t\t\t\t\t.splice(-4)\n\t\t\t\t\t\t\t\t\t\t\t.map((data, id) => <td key={id}>{data.count}</td>)}\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th>Salaries</th>\n\t\t\t\t\t\t\t\t\t{marketing &&\n\t\t\t\t\t\t\t\t\t\tmarketing.inputs &&\n\t\t\t\t\t\t\t\t\t\tObject.keys(getYearSum(marketing.inputs, 'salary'))\n\t\t\t\t\t\t\t\t\t\t\t.splice(-4)\n\t\t\t\t\t\t\t\t\t\t\t.map((data, id) => <td key={id}>${getYearSum(marketing.inputs, 'salary')[data]}</td>)}\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th>Benifits & Taxes</th>\n\t\t\t\t\t\t\t\t\t{marketing &&\n\t\t\t\t\t\t\t\t\t\tmarketing.inputs &&\n\t\t\t\t\t\t\t\t\t\tObject.keys(getYearSum(marketing.inputs, 'taxes'))\n\t\t\t\t\t\t\t\t\t\t\t.splice(-4)\n\t\t\t\t\t\t\t\t\t\t\t.map((data, id) => <td key={id}>${getYearSum(marketing.inputs, 'taxes')[data]}</td>)}\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th>Commissions</th>\n\t\t\t\t\t\t\t\t\t{marketing && marketing.inputs && Object.keys(getYearSum(marketing.inputs, 'commissions')).map((data, id) => <td key={id}>${getYearSum(marketing.inputs, 'commissions')[data]}</td>)}\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th>Total Payroll</th>\n\t\t\t\t\t\t\t\t\t{marketing && marketing.inputs && Object.keys(getTotal(marketing.inputs)).map((data, id) => <td key={id}>${getTotal(marketing.inputs)[data]}</td>)}\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div className='col-8 col-xl-7'>\n\t\t\t\t\t<h4>Marketing Inputs</h4>\n\t\t\t\t\t<MarketingInputs marketing={marketing} setMsg={setMsg} setErr={setErr} setAlertClass={setAlertClass} />\n\t\t\t\t</div>\n\t\t\t\t<div className='col-4 col-xl-5'>\n\t\t\t\t\t<h4>Major Expense Input</h4>\n\t\t\t\t\t{marketing && marketing._id && <ExpenseInputs marketingId={marketing._id} expenseInputs={marketing.majorExpenseInput} setMsg={setMsg} setErr={setErr} setAlertClass={setAlertClass} />}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Marketing;\n","/home/yamin/Downloads/work/finpro/src/views/Sales/Sales.js",[],"/home/yamin/Downloads/work/finpro/src/views/GandA/GandA.js",["194","195"],"import React from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport { Bar } from 'react-chartjs-2';\nimport { FormControl, InputBase, NativeSelect } from '@material-ui/core';\nimport { AuthContext } from '../../context/context';\nimport { useHistory } from 'react-router-dom';\n\nimport { ButtonGroup, Button } from 'react-bootstrap';\nimport { getInputs } from '../../context/fetch-service';\n\nimport GandAInputs from './GandAInputs';\nimport ExpenseInputs from './ExpenseInputs';\n\nimport { getYearSum, duplicateCounter, getTotal } from '../../utils/getYearSum';\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tdisplay: 'flex',\n\t\tjustifyContent: 'center',\n\t},\n}));\n\nconst BootstrapInput = withStyles((theme) => ({\n\troot: {\n\t\t'label + &': {\n\t\t\tmarginTop: theme.spacing(3),\n\t\t},\n\t},\n\tinput: {\n\t\tborderRadius: 4,\n\t\tposition: 'relative',\n\t\tbackgroundColor: '#f8f9fa',\n\t\t// border: '1px solid #ced4da',\n\t\tfontSize: 16,\n\t\tpadding: '10px 26px 10px 12px',\n\t\ttransition: theme.transitions.create(['border-color', 'box-shadow']),\n\t\t// Use the system font instead of the default Roboto font.\n\t\tfontFamily: ['-apple-system', 'BlinkMacSystemFont', '\"Segoe UI\"', 'Roboto', '\"Helvetica Neue\"', 'Arial', 'sans-serif', '\"Apple Color Emoji\"', '\"Segoe UI Emoji\"', '\"Segoe UI Symbol\"'].join(','),\n\t\t'&:focus': {\n\t\t\tborderRadius: 4,\n\t\t\tborderColor: '#80bdff',\n\t\t\tboxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n\t\t},\n\t},\n}))(InputBase);\n\nfunction GandA() {\n\tconst history = useHistory();\n\tconst classes = useStyles();\n\tconst {\n\t\tstate: { inputs, data, isAuthenticated },\n\t\tdispatch,\n\t} = React.useContext(AuthContext);\n\n\tconst ganda = inputs.filter((i) => i.title === 'ganda')[0];\n\n\tconst [chartValue, setChartValue] = React.useState('year');\n\tconst handleChange = (event) => {\n\t\tsetChartValue(event.target.value);\n\t};\n\n\tconst [msg, setMsg] = React.useState('');\n\tconst [err, setErr] = React.useState('');\n\tconst [alertClass, setAlertClass] = React.useState('');\n\n\tconst handleCloseAlert = () => {\n\t\tsetAlertClass('hide');\n\t\tsetErr('');\n\t\tsetMsg('');\n\t};\n\n\tReact.useEffect(() => {\n\t\tif (!isAuthenticated) {\n\t\t\thistory.push('/login');\n\t\t}\n\t\tasync function fetchRevenue() {\n\t\t\tlet inputs = await getInputs();\n\t\t\tdispatch({\n\t\t\t\ttype: 'SET_INPUTS',\n\t\t\t\tpayload: inputs,\n\t\t\t});\n\t\t}\n\t\tfetchRevenue();\n\t}, [isAuthenticated, history, dispatch]);\n\n\treturn (\n\t\t<div className='container-fluid'>\n\t\t\t<div className='row'>\n\t\t\t\t<div className='col-12 col-xl-12'>\n\t\t\t\t\t{msg && (\n\t\t\t\t\t\t<div className={`alert alert-success alert-dismissible fade ${alertClass}`} role='alert'>\n\t\t\t\t\t\t\t<strong>{msg}</strong>\n\t\t\t\t\t\t\t<button onClick={handleCloseAlert} type='button' className='close' data-dismiss='alert' aria-label='Close'>\n\t\t\t\t\t\t\t\t<span aria-hidden='true'>×</span>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t\t{err && (\n\t\t\t\t\t\t<div className={`alert alert-danger alert-dismissible fade ${alertClass}`} role='alert'>\n\t\t\t\t\t\t\t<strong>{err}</strong>\n\t\t\t\t\t\t\t<button onClick={handleCloseAlert} type='button' className='close' data-dismiss='alert' aria-label='Close'>\n\t\t\t\t\t\t\t\t<span aria-hidden='true'>×</span>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t\t<div className='table-container-header'>\n\t\t\t\t\t\t<h4 className=''>G&A</h4>\n\t\t\t\t\t\t<div className='chart-handle-grup'>\n\t\t\t\t\t\t\t<div className='chart-dropdown'>\n\t\t\t\t\t\t\t\t<span className='mr-3'>View By :</span>\n\t\t\t\t\t\t\t\t<FormControl variant='outlined' className={classes.margin}>\n\t\t\t\t\t\t\t\t\t<NativeSelect id='demo-customized-select-native' value={chartValue} onChange={handleChange} input={<BootstrapInput />}>\n\t\t\t\t\t\t\t\t\t\t<option defaultValue='year' value='year'>\n\t\t\t\t\t\t\t\t\t\t\tYear\n\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t\t<option value='quarter'>Quarter</option>\n\t\t\t\t\t\t\t\t\t\t<option value='month'>Month</option>\n\t\t\t\t\t\t\t\t\t</NativeSelect>\n\t\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<ButtonGroup aria-label='Basic example'>\n\t\t\t\t\t\t\t\t<Button className='btn-custom-group'>Export</Button>\n\t\t\t\t\t\t\t\t<Button className='btn-custom-group'>CSV</Button>\n\t\t\t\t\t\t\t\t<Button className='btn-custom-group'>PDF</Button>\n\t\t\t\t\t\t\t</ButtonGroup>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className='custom-table-container'>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th></th>\n\t\t\t\t\t\t\t\t\t{duplicateCounter(ganda) &&\n\t\t\t\t\t\t\t\t\t\tduplicateCounter(ganda)\n\t\t\t\t\t\t\t\t\t\t\t.splice(-4)\n\t\t\t\t\t\t\t\t\t\t\t.map((year, id) => <th key={id}>{new Date(year.startDate).getFullYear()}</th>)}\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th>Headcounts</th>\n\t\t\t\t\t\t\t\t\t{duplicateCounter(ganda) &&\n\t\t\t\t\t\t\t\t\t\tduplicateCounter(ganda)\n\t\t\t\t\t\t\t\t\t\t\t.splice(-4)\n\t\t\t\t\t\t\t\t\t\t\t.map((data, id) => <td key={id}>{data.count}</td>)}\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th>Salaries</th>\n\t\t\t\t\t\t\t\t\t{ganda &&\n\t\t\t\t\t\t\t\t\t\tganda.inputs &&\n\t\t\t\t\t\t\t\t\t\tObject.keys(getYearSum(ganda.inputs, 'salary'))\n\t\t\t\t\t\t\t\t\t\t\t.splice(-4)\n\t\t\t\t\t\t\t\t\t\t\t.map((data, id) => <td key={id}>${getYearSum(ganda.inputs, 'salary')[data]}</td>)}\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th>Benifits & Taxes</th>\n\t\t\t\t\t\t\t\t\t{ganda &&\n\t\t\t\t\t\t\t\t\t\tganda.inputs &&\n\t\t\t\t\t\t\t\t\t\tObject.keys(getYearSum(ganda.inputs, 'taxes'))\n\t\t\t\t\t\t\t\t\t\t\t.splice(-4)\n\t\t\t\t\t\t\t\t\t\t\t.map((data, id) => <td key={id}>${getYearSum(ganda.inputs, 'taxes')[data]}</td>)}\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th>Commissions</th>\n\t\t\t\t\t\t\t\t\t{ganda && ganda.inputs && Object.keys(getYearSum(ganda.inputs, 'commissions')).map((data, id) => <td key={id}>${getYearSum(ganda.inputs, 'commissions')[data]}</td>)}\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th>Total Payroll</th>\n\t\t\t\t\t\t\t\t\t{ganda && ganda.inputs && Object.keys(getTotal(ganda.inputs)).map((data, id) => <td key={id}>${getTotal(ganda.inputs)[data]}</td>)}\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div className='col-8 col-xl-7'>\n\t\t\t\t\t<h4>G & A Inputs</h4>\n\t\t\t\t\t<GandAInputs ganda={ganda} setMsg={setMsg} setErr={setErr} setAlertClass={setAlertClass} />\n\t\t\t\t</div>\n\t\t\t\t<div className='col-4 col-xl-5'>\n\t\t\t\t\t<h4>Major Expense Input</h4>\n\t\t\t\t\t{ganda && ganda._id && <ExpenseInputs gandaId={ganda._id} expenseInputs={ganda.majorExpenseInput} setMsg={setMsg} setErr={setErr} setAlertClass={setAlertClass} />}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default GandA;\n","/home/yamin/Downloads/work/finpro/src/App.js",[],"/home/yamin/Downloads/work/finpro/src/views/Auth/SignUp/SignUp.js",["196"],"/home/yamin/Downloads/work/finpro/src/context/context.js",[],"/home/yamin/Downloads/work/finpro/src/views/Revenue/Revenue.js",[],"/home/yamin/Downloads/work/finpro/src/views/Auth/Login/Login.js",["197","198"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport axios from '../../../context/axios';\nimport { useHistory, Link } from 'react-router-dom';\nimport { AuthContext } from '../../../context/context';\nimport { getUser } from '../../../context/fetch-service';\nimport LOGO from '../../../assets/logo.png';\nimport BGImgs from '../../../assets/sign-in-cover.jpg';\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tdisplay: 'flex',\n\t\tjustifyContent: 'center',\n\t},\n}));\n\nfunction Login() {\n\tconst classes = useStyles();\n\tconst history = useHistory();\n\tconst { state, dispatch } = React.useContext(AuthContext);\n\tconst [passwordType, setPasswordType] = React.useState('password');\n\tconst [alertClass, setAlertClass] = React.useState('');\n\tconst [err, setErr] = React.useState('');\n\tconst [loader, setLoader] = React.useState(false);\n\tconst [loginForm, setLoginForm] = React.useState({\n\t\temail: '',\n\t\tpassword: '',\n\t});\n\n\tconst handleLogin = (e) => {\n\t\tconst { name, value } = e.target;\n\t\tsetLoginForm((prevState) => {\n\t\t\t// console.log(prevState);\n\t\t\treturn {\n\t\t\t\t...prevState,\n\t\t\t\t[name]: value,\n\t\t\t};\n\t\t});\n\t};\n\n\tconst handleSubmit = async (e) => {\n\t\tsetLoader(true);\n\t\te.preventDefault();\n\t\ttry {\n\t\t\tlet login = await axios.post('/auth/login', loginForm);\n\t\t\tif (login.status === 200 || login.status === 201) {\n\t\t\t\tlet user = await getUser(login.data.token);\n\t\t\t\tif (user) {\n\t\t\t\t\tsetErr('');\n\t\t\t\t\tsetAlertClass('show');\n\t\t\t\t\tsetLoginForm({\n\t\t\t\t\t\temail: '',\n\t\t\t\t\t\tpassword: '',\n\t\t\t\t\t});\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: 'LOGIN',\n\t\t\t\t\t\tpayload: { token: login.data.token, user: user },\n\t\t\t\t\t});\n\t\t\t\t\tsetLoader(false);\n\t\t\t\t\thistory.push('/');\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tsetAlertClass('show');\n\t\t\tif (e.response && e.response.data) {\n\t\t\t\tif (e.response.data.error) {\n\t\t\t\t\tsetErr(e.response.data.error.message);\n\t\t\t\t} else {\n\t\t\t\t\tif (e.response.data.message) {\n\t\t\t\t\t\tsetErr(e.response.data.message.message);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsetErr(e.message);\n\t\t\t}\n\t\t\tsetLoader(false);\n\t\t}\n\t};\n\tconst handleCloseAlert = () => {\n\t\tsetAlertClass('hide');\n\t\tsetErr('');\n\t};\n\n\tconst handlePwdType = () => {\n\t\tif (passwordType === 'password') {\n\t\t\tsetPasswordType('text');\n\t\t} else {\n\t\t\tsetPasswordType('password');\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className='container-fluid'>\n\t\t\t<div className='row align-items-center justify-content-center'>\n\t\t\t\t<div className='col-12 col-md-5 col-lg-6 col-xl-4 px-lg-6 my-5'>\n\t\t\t\t\t<div className='Logo text-center'>\n\t\t\t\t\t\t<Link to='/'>\n\t\t\t\t\t\t\t<img src={LOGO} alt='logo' />\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</div>\n\t\t\t\t\t<h2 className='display-4 text-center mb-3'>Sign in</h2>\n\t\t\t\t\t{err && (\n\t\t\t\t\t\t<div className={`alert alert-danger alert-dismissible fade ${alertClass}`} role='alert'>\n\t\t\t\t\t\t\t<strong>{err}</strong>\n\t\t\t\t\t\t\t<button onClick={handleCloseAlert} type='button' className='close' data-dismiss='alert' aria-label='Close'>\n\t\t\t\t\t\t\t\t<span aria-hidden='true'>×</span>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t\t\t<div className='form-group'>\n\t\t\t\t\t\t\t<label className='form-label'>Email Address</label>\n\n\t\t\t\t\t\t\t<input type='email' name='email' value={loginForm.email} onChange={handleLogin} className='form-control' required placeholder='name@address.com' />\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className='form-group'>\n\t\t\t\t\t\t\t<div className='row'>\n\t\t\t\t\t\t\t\t<div className='col'>\n\t\t\t\t\t\t\t\t\t<label className='form-label'>Password</label>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='col-auto'>\n\t\t\t\t\t\t\t\t\t<Link to='forgot-password' className='form-text small text-muted'>\n\t\t\t\t\t\t\t\t\t\tForgot password?\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div className='input-group input-group-merge'>\n\t\t\t\t\t\t\t\t<input className='form-control' type={passwordType} name='password' value={loginForm.password} onChange={handleLogin} required placeholder='Enter your password' />\n\n\t\t\t\t\t\t\t\t<span onClick={handlePwdType} className='input-group-text'>\n\t\t\t\t\t\t\t\t\t<i style={{ cursor: 'pointer' }} className='fe fe-eye'></i>\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<button disabled={loader} className='btn btn-lg btn-block btn-custom mb-3'>\n\t\t\t\t\t\t\t{loader && (\n\t\t\t\t\t\t\t\t<div className='spinner-border spinner-border-sm' role='status'>\n\t\t\t\t\t\t\t\t\t<span className='sr-only'>Loading...</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{!loader && 'Sign in'}\n\t\t\t\t\t\t</button>\n\n\t\t\t\t\t\t<p className='text-center'>\n\t\t\t\t\t\t\t<small className='text-muted text-center'>\n\t\t\t\t\t\t\t\tDon't have an account yet? <Link to='/signup'>Sign up</Link>.\n\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t\t<div className='col-12 col-md-7 col-lg-6 col-xl-8 d-none d-lg-block'>\n\t\t\t\t\t<div className='bg-cover vh-100 mt-n1 mr-n3' style={{ backgroundImage: `url(${BGImgs})` }}></div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Login;\n",["199","200"],"/home/yamin/Downloads/work/finpro/src/routes.js",[],"/home/yamin/Downloads/work/finpro/src/views/Checkout/Checkout.js",[],"/home/yamin/Downloads/work/finpro/src/context/axios.js",[],"/home/yamin/Downloads/work/finpro/src/index.js",[],"/home/yamin/Downloads/work/finpro/src/views/Settings/Settings.js",[],"/home/yamin/Downloads/work/finpro/src/views/Pricing/Pricing.js",[],"/home/yamin/Downloads/work/finpro/src/views/Billing/Billing.js",[],"/home/yamin/Downloads/work/finpro/src/service.js",[],"/home/yamin/Downloads/work/finpro/src/context/types.js",[],"/home/yamin/Downloads/work/finpro/src/context/fetch-service.js",[],"/home/yamin/Downloads/work/finpro/src/context/revenue-service.js",[],"/home/yamin/Downloads/work/finpro/src/views/Revenue/RevenueInputs.js",["201"],"/home/yamin/Downloads/work/finpro/src/views/Revenue/ExpenseInputs.js",["202"],"import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport { AuthContext } from '../../context/context';\nimport { getRevenue } from '../../context/fetch-service';\nimport { addExpense, deleteExpense, updateExpense } from '../../context/revenue-service';\n\nfunction ExpenseInputs({ revenueId, expenseInputs, setMsg, setErr, setAlertClass }) {\n\tconst { state, dispatch } = React.useContext(AuthContext);\n\n\tconst [open, setOpen] = React.useState(false);\n\tconst [open2, setOpen2] = React.useState(false);\n\tconst [loader, setLoader] = React.useState(false);\n\tconst [edit, setEdit] = React.useState(false);\n\n\tconst handleClickOpen = () => {\n\t\tsetOpen(true);\n\t};\n\n\tconst handleClose = (e) => {\n\t\te.preventDefault();\n\t\tsetOpen(false);\n\t};\n\n\tconst handleClickOpen2 = () => {\n\t\tsetOpen2(true);\n\t};\n\n\tconst handleClose2 = () => {\n\t\tsetOpen2(false);\n\t};\n\n\tconst [expenseForm, setExpenseForm] = React.useState({\n\t\tvalue: '',\n\t\tcost: '',\n\t});\n\n\tconst handleRevenueChange = (e) => {\n\t\tconst { name, value } = e.target;\n\t\tsetExpenseForm((prevState) => {\n\t\t\treturn {\n\t\t\t\t...prevState,\n\t\t\t\t[name]: value,\n\t\t\t};\n\t\t});\n\t};\n\n\tconst handleSubmit = async (e, heading) => {\n\t\te.preventDefault();\n\n\t\tsetLoader(true);\n\t\ttry {\n\t\t\tif (edit) {\n\t\t\t\tlet update = await updateExpense({ revenueId, expenseInputId: expenseForm.expenseInputId, data: expenseForm });\n\t\t\t\tif (update.status === 200 || update.status === 201) {\n\t\t\t\t\tlet revenues = await getRevenue();\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: 'SET_REVENUE',\n\t\t\t\t\t\tpayload: revenues,\n\t\t\t\t\t});\n\n\t\t\t\t\tsetAlertClass('show');\n\t\t\t\t\tsetMsg(update.data.message);\n\t\t\t\t\tsetErr('');\n\t\t\t\t\tsetEdit(false);\n\t\t\t\t\tsetLoader(false);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlet add = await addExpense({ ...expenseForm, revenueId, heading });\n\t\t\t\tif (add.status === 200 || add.status === 201) {\n\t\t\t\t\tlet revenues = await getRevenue();\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: 'SET_REVENUE',\n\t\t\t\t\t\tpayload: revenues,\n\t\t\t\t\t});\n\n\t\t\t\t\tsetAlertClass('show');\n\t\t\t\t\tsetMsg(add.data.message);\n\t\t\t\t\tsetErr('');\n\t\t\t\t\tsetLoader(false);\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tsetAlertClass('show');\n\t\t\tsetMsg('');\n\t\t\tconsole.log(e);\n\t\t\tif (err.response && err.response.data) {\n\t\t\t\tif (err.response.data.error) {\n\t\t\t\t\tsetErr(err.response.data.error.message);\n\t\t\t\t} else if (err.response.data.errors) {\n\t\t\t\t\tlet errors = err.response.data.errors.map((err) => <li>{err.msg}</li>);\n\t\t\t\t\tsetErr(errors);\n\t\t\t\t} else {\n\t\t\t\t\tsetErr(err.response.data.message);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsetErr(err.message);\n\t\t\t}\n\t\t\tsetLoader(false);\n\t\t}\n\t\tsetExpenseForm({\n\t\t\tvalue: '',\n\t\t\tcost: '',\n\t\t});\n\t\tsetOpen(false);\n\t\tsetOpen2(false);\n\t};\n\n\tconst handleDeletePlan = async (majorExpenseInputId) => {\n\t\ttry {\n\t\t\tlet deletePlanRes = await deleteExpense({ revenueId, majorExpenseInputId });\n\n\t\t\tif (deletePlanRes.status === 200) {\n\t\t\t\tlet revenues = await getRevenue();\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: 'SET_REVENUE',\n\t\t\t\t\tpayload: revenues,\n\t\t\t\t});\n\n\t\t\t\tsetAlertClass('show');\n\t\t\t\tsetMsg(deletePlanRes.data.message);\n\t\t\t\tsetErr('');\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tsetAlertClass('show');\n\t\t\tsetMsg('');\n\t\t\tif (e.response && e.response.data) {\n\t\t\t\tif (e.response.data.error) {\n\t\t\t\t\tsetErr(e.response.data.error.message);\n\t\t\t\t} else if (e.response.data.errors) {\n\t\t\t\t\tconsole.log(e.response.data.errors);\n\t\t\t\t\tlet errors = e.response.data.errors.map((err) => <li>{err.msg}</li>);\n\t\t\t\t\tsetErr(errors);\n\t\t\t\t} else {\n\t\t\t\t\tsetErr(e.response.data.message);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsetErr(e.message);\n\t\t\t}\n\t\t}\n\t\tsetOpen(false);\n\t};\n\n\tconst handleEditPlan = (expenseInputId, expInp) => {\n\t\tsetEdit(true);\n\t\tsetOpen(true);\n\t\tsetExpenseForm({\n\t\t\tvalue: expInp.value,\n\t\t\tcost: expInp.cost,\n\t\t\texpenseInputId,\n\t\t});\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<div className='card'>\n\t\t\t\t<div>\n\t\t\t\t\t<div className='table-responsive'>\n\t\t\t\t\t\t<table className='table table-sm table-hover table-nowrap mb-0'>\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Credit Card Porcessing Fees</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Cost</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>\n\t\t\t\t\t\t\t\t\t\t<i title='Add Major Expense' style={{ fontSize: '22px' }} onClick={handleClickOpen} className='fe fe-plus add-icon'></i>\n\t\t\t\t\t\t\t\t\t\t<Dialog open={open} onClose={handleClose} aria-labelledby='alert-dialog-title' aria-describedby='alert-dialog-description'>\n\t\t\t\t\t\t\t\t\t\t\t<DialogTitle id='alert-dialog-title'>{edit ? 'Edit Expense' : 'Add Expense'}</DialogTitle>\n\t\t\t\t\t\t\t\t\t\t\t<form onSubmit={(e) => handleSubmit(e, 'creditCardProcessingFees')}>\n\t\t\t\t\t\t\t\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='row g-3'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='col-12 col-md-12 mb-3'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label htmlFor='value' className='form-label'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCredit Card Processing Fees\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type='text' name='value' value={expenseForm.value} onChange={handleRevenueChange} className='form-control' id='value' placeholder='Credit Card Processing Fees' required />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='row g-3'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='col-12 col-md-12 mb-3'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label htmlFor='cost' className='form-label'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCost\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type='text' name='cost' value={expenseForm.cost} onChange={handleRevenueChange} className='form-control' id='cost' placeholder='Cost' required />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</DialogContent>\n\t\t\t\t\t\t\t\t\t\t\t\t<DialogActions>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<button className='btn btn-danger' onClick={handleClose}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<button disabled={loader} type='submit' className='btn btn-primary' autoFocus>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{loader && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='spinner-border spinner-border-sm' role='status'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='sr-only'>Loading...</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{!loader && (edit ? 'Update Expense' : 'Add Expense')}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t\t</DialogActions>\n\t\t\t\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t\t\t\t</Dialog>\n\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t{expenseInputs &&\n\t\t\t\t\t\t\t\t\texpenseInputs\n\t\t\t\t\t\t\t\t\t\t.filter((exp) => exp.heading === 'creditCardProcessingFees')\n\t\t\t\t\t\t\t\t\t\t.map((expInp, id) => (\n\t\t\t\t\t\t\t\t\t\t\t<tr key={id}>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.value}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>${expInp.cost}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className='fe fe-edit edit-icon' onClick={() => handleEditPlan(expInp._id, expInp)}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className='fe fe-trash-2 delete-icon' onClick={() => handleDeletePlan(expInp._id)}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div className='card'>\n\t\t\t\t<div>\n\t\t\t\t\t<div className='table-responsive'>\n\t\t\t\t\t\t<table className='table table-sm table-hover table-nowrap mb-0'>\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Paid User Acquisition</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Cost</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>\n\t\t\t\t\t\t\t\t\t\t<i title='Add Major' style={{ fontSize: '22px' }} onClick={handleClickOpen2} className='fe fe-plus add-icon'></i>\n\t\t\t\t\t\t\t\t\t\t<Dialog open={open2} onClose={handleClose2} aria-labelledby='alert-dialog-title' aria-describedby='alert-dialog-description'>\n\t\t\t\t\t\t\t\t\t\t\t<DialogTitle id='alert-dialog-title'>{edit ? 'Edit Expense' : 'Add Plan'}</DialogTitle>\n\t\t\t\t\t\t\t\t\t\t\t<form onSubmit={(e) => handleSubmit(e, 'paidUserAcquisition')}>\n\t\t\t\t\t\t\t\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='row g-3'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='col-12 col-md-12 mb-3'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label htmlFor='value' className='form-label'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tPaid User Acquisition\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type='text' name='value' value={expenseForm.value} onChange={handleRevenueChange} className='form-control' id='value' placeholder='Credit Card Processing Fees' required />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='row g-3'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='col-12 col-md-12 mb-3'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label htmlFor='cost' className='form-label'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCost\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type='text' name='cost' value={expenseForm.cost} onChange={handleRevenueChange} className='form-control' id='cost' placeholder='Cost' required />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</DialogContent>\n\t\t\t\t\t\t\t\t\t\t\t\t<DialogActions>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<button className='btn btn-danger' onClick={handleClose2}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<button disabled={loader} type='submit' className='btn btn-primary' autoFocus>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{loader && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='spinner-border spinner-border-sm' role='status'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='sr-only'>Loading...</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{!loader && (edit ? 'Update Expense' : 'Add Expense')}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t\t</DialogActions>\n\t\t\t\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t\t\t\t</Dialog>\n\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t{expenseInputs &&\n\t\t\t\t\t\t\t\t\texpenseInputs\n\t\t\t\t\t\t\t\t\t\t.filter((exp) => exp.heading === 'paidUserAcquisition')\n\t\t\t\t\t\t\t\t\t\t.map((expInp, id) => (\n\t\t\t\t\t\t\t\t\t\t\t<tr key={id}>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.value}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>${expInp.cost}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className='fe fe-edit edit-icon' onClick={() => handleEditPlan(expInp._id, expInp)}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className='fe fe-trash-2 delete-icon' onClick={() => handleDeletePlan(expInp._id)}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default ExpenseInputs;\n","/home/yamin/Downloads/work/finpro/src/views/Revenue/StartingCapitalInput.js",["203"],"/home/yamin/Downloads/work/finpro/src/views/Sales/ExpenseInputs.js",["204"],"/home/yamin/Downloads/work/finpro/src/views/Sales/SalesInputs.js",["205"],"import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { addInputs, deleteInputs, updateInputs } from '../../context/input-service';\nimport { AuthContext } from '../../context/context';\nimport { getInputs } from '../../context/fetch-service';\nimport moment from 'moment';\n\nimport ContractExpense from './ContractorExpense';\n\nfunction SalesInputs({ sales, setMsg, setErr, setAlertClass }) {\n\tconst { state, dispatch } = React.useContext(AuthContext);\n\n\tconst [open, setOpen] = React.useState(false);\n\tconst [loader, setLoader] = React.useState(false);\n\tconst [edit, setEdit] = React.useState(false);\n\n\tconst handleClickOpen = () => {\n\t\tsetOpen(true);\n\t};\n\n\tconst handleClose = (e) => {\n\t\te.preventDefault();\n\t\tsetOpen(false);\n\t};\n\n\tconst [salesInputForm, setSalesInputForm] = React.useState({\n\t\thire: '',\n\t\tstartDate: '',\n\t\tsalary: '',\n\t\ttaxes: '',\n\t\tcommissions: '',\n\t\ttitle: 'sales',\n\t});\n\n\tconst handleSalesChange = (e) => {\n\t\tconst { name, value } = e.target;\n\t\tsetSalesInputForm((prevState) => {\n\t\t\treturn {\n\t\t\t\t...prevState,\n\t\t\t\t[name]: value,\n\t\t\t};\n\t\t});\n\t};\n\n\tconst handleSubmit = async (e) => {\n\t\tsetLoader(true);\n\t\te.preventDefault();\n\t\ttry {\n\t\t\tif (edit) {\n\t\t\t\tlet update = await updateInputs({ inputMainId: sales._id, inputId: salesInputForm.inputId, data: salesInputForm });\n\t\t\t\tif (update.status === 200 || update.status === 201) {\n\t\t\t\t\tlet inputs = await getInputs();\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: 'SET_INPUTS',\n\t\t\t\t\t\tpayload: inputs,\n\t\t\t\t\t});\n\n\t\t\t\t\tsetAlertClass('show');\n\t\t\t\t\tsetMsg(update.data.message);\n\t\t\t\t\tsetErr('');\n\t\t\t\t\tsetEdit(false);\n\t\t\t\t\tsetLoader(false);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlet add = await addInputs(salesInputForm);\n\t\t\t\tif (add.status === 200 || add.status === 201) {\n\t\t\t\t\tlet inputs = await getInputs();\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: 'SET_INPUTS',\n\t\t\t\t\t\tpayload: inputs,\n\t\t\t\t\t});\n\n\t\t\t\t\tsetAlertClass('show');\n\t\t\t\t\tsetMsg(add.data.message);\n\t\t\t\t\tsetErr('');\n\t\t\t\t\tsetLoader(false);\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tsetAlertClass('show');\n\t\t\tsetMsg('');\n\t\t\tconsole.log(e);\n\t\t\tif (err.response && err.response.data) {\n\t\t\t\tif (err.response.data.error) {\n\t\t\t\t\tsetErr(err.response.data.error.message);\n\t\t\t\t} else if (err.response.data.errors) {\n\t\t\t\t\tlet errors = err.response.data.errors.map((err) => <li>{err.msg}</li>);\n\t\t\t\t\tsetErr(errors);\n\t\t\t\t} else {\n\t\t\t\t\tsetErr(err.response.data.message);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsetErr(err.message);\n\t\t\t}\n\t\t\tsetLoader(false);\n\t\t}\n\t\tsetSalesInputForm({\n\t\t\thire: '',\n\t\t\tstartDate: '',\n\t\t\tsalary: '',\n\t\t\ttaxes: '',\n\t\t\tcommissions: '',\n\t\t\ttitle: 'sales',\n\t\t});\n\t\tsetOpen(false);\n\t};\n\n\tconst handleDeleteInput = async (data) => {\n\t\ttry {\n\t\t\tlet deletePlanRes = await deleteInputs(data);\n\n\t\t\tif (deletePlanRes.status === 200) {\n\t\t\t\tlet inputs = await getInputs();\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: 'SET_INPUTS',\n\t\t\t\t\tpayload: inputs,\n\t\t\t\t});\n\n\t\t\t\tsetAlertClass('show');\n\t\t\t\tsetMsg(deletePlanRes.data.message);\n\t\t\t\tsetErr('');\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tsetAlertClass('show');\n\t\t\tsetMsg('');\n\t\t\tif (e.response && e.response.data) {\n\t\t\t\tif (e.response.data.error) {\n\t\t\t\t\tsetErr(e.response.data.error.message);\n\t\t\t\t} else if (e.response.data.errors) {\n\t\t\t\t\tconsole.log(e.response.data.errors);\n\t\t\t\t\tlet errors = e.response.data.errors.map((err) => <li>{err.msg}</li>);\n\t\t\t\t\tsetErr(errors);\n\t\t\t\t} else {\n\t\t\t\t\tsetErr(e.response.data.message);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsetErr(e.message);\n\t\t\t}\n\t\t}\n\t\tsetOpen(false);\n\t};\n\n\tconst handleEditInput = (input) => {\n\t\tsetEdit(true);\n\t\tsetOpen(true);\n\t\tsetSalesInputForm({\n\t\t\thire: input.hire,\n\t\t\tstartDate: moment(input.date).format('YYYY-MM-DD'),\n\t\t\tsalary: input.salary,\n\t\t\ttaxes: input.taxes,\n\t\t\tcommissions: input.commissions,\n\t\t\ttitle: 'sales',\n\t\t\tinputId: input._id,\n\t\t});\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<div className='card'>\n\t\t\t\t<div>\n\t\t\t\t\t<div className='table-responsive'>\n\t\t\t\t\t\t<table className='table table-sm table-hover table-nowrap mb-0'>\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Hire</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Start Date</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Salary</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Taxes</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Commissions</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>\n\t\t\t\t\t\t\t\t\t\t<i title='Add Sales Inputs' onClick={handleClickOpen} style={{ fontSize: '22px', cursor: 'pointer' }} className='fe fe-plus add-icon'></i>\n\t\t\t\t\t\t\t\t\t\t<Dialog open={open} onClose={handleClose} aria-labelledby='alert-dialog-title' aria-describedby='alert-dialog-description'>\n\t\t\t\t\t\t\t\t\t\t\t<DialogTitle id='alert-dialog-title'>{edit ? 'Edit Sales' : 'Add Sales'}</DialogTitle>\n\n\t\t\t\t\t\t\t\t\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t\t\t\t\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='row g-3'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='col-12 col-md-6 mb-3'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label htmlFor='hire' className='form-label'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tHire\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type='text' name='hire' value={salesInputForm.hire} onChange={handleSalesChange} className='form-control' id='hire' placeholder='Hire' required />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='col-6 col-md-6 mb-3'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label htmlFor='startDate' className='form-label'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tStart Date\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type='date' name='startDate' value={salesInputForm.startDate} onChange={handleSalesChange} className='form-control' id='date' placeholder='Start Date' required />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='row g-3'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='col-12 col-md-12 mb-3'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label htmlFor='salary' className='form-label'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tSalary\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type='text' name='salary' value={salesInputForm.salary} onChange={handleSalesChange} className='form-control' id='salary' placeholder='Salary' required />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='row g-3'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='col-12 col-md-12 mb-3'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label htmlFor='taxes' className='form-label'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tTaxes\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type='text' name='taxes' value={salesInputForm.taxes} onChange={handleSalesChange} className='form-control' id='taxes' placeholder='Taxes' required />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='col-12 col-md-12 mb-3'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label htmlFor='commissions' className='form-label'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCommissions\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type='text' name='commissions' value={salesInputForm.commissions} onChange={handleSalesChange} className='form-control' id='commissions' placeholder='Commissions' required />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</DialogContent>\n\t\t\t\t\t\t\t\t\t\t\t\t<DialogActions>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<button className='btn btn-danger' onClick={handleClose}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<button disabled={loader} type='submit' className='btn btn-primary' autoFocus>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{loader && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='spinner-border spinner-border-sm' role='status'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='sr-only'>Loading...</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{!loader && (edit ? 'Update Sales' : 'Add Sales')}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t\t</DialogActions>\n\t\t\t\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t\t\t\t</Dialog>\n\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t{sales &&\n\t\t\t\t\t\t\t\t\tsales.inputs &&\n\t\t\t\t\t\t\t\t\tsales.inputs.length > 0 &&\n\t\t\t\t\t\t\t\t\tsales.inputs.map((input, id) => (\n\t\t\t\t\t\t\t\t\t\t<tr key={id}>\n\t\t\t\t\t\t\t\t\t\t\t<td>{input.hire}</td>\n\t\t\t\t\t\t\t\t\t\t\t<td>{input.startDate}</td>\n\t\t\t\t\t\t\t\t\t\t\t<td>{input.salary}</td>\n\t\t\t\t\t\t\t\t\t\t\t<td>{input.taxes}</td>\n\t\t\t\t\t\t\t\t\t\t\t<td>{input.commissions}</td>\n\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<i title='Edit Plan' style={{ cursor: 'pointer' }} className='fe fe-edit edit-icon' onClick={() => handleEditInput(input)}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<i title='Delete Plan' style={{ cursor: 'pointer' }} onClick={() => handleDeleteInput({ inputMainId: sales._id, inputId: input._id })} className='fe fe-trash-2 delete-icon'></i>\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div className='row'>\n\t\t\t\t<div className='col-6 col-xl-6'>{sales && sales._id && <ContractExpense salesId={sales._id} expenseInputs={sales.majorExpenseInput} setMsg={setMsg} setErr={setErr} setAlertClass={setAlertClass} />}</div>\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\nexport default SalesInputs;\n","/home/yamin/Downloads/work/finpro/src/context/input-service.js",[],"/home/yamin/Downloads/work/finpro/src/views/Sales/ContractorExpense.js",["206"],"import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport { AuthContext } from '../../context/context';\nimport { getInputs } from '../../context/fetch-service';\nimport { addInputExpense, deleteInputExpense, updateInputExpense } from '../../context/input-service';\n\nfunction ExpenseInputs({ salesId, expenseInputs, setMsg, setErr, setAlertClass }) {\n\tconst { state, dispatch } = React.useContext(AuthContext);\n\n\tconst [open, setOpen] = React.useState(false);\n\tconst [dialogSetting, setDialogSetting] = React.useState({\n\t\ttitle: '',\n\t\tbuttonTitle: '',\n\t\theading: '',\n\t\ttype: '',\n\t});\n\tconst [loader, setLoader] = React.useState(false);\n\tconst [edit, setEdit] = React.useState(false);\n\n\tconst handleClickOpen = () => {\n\t\tsetOpen(true);\n\t};\n\n\tconst handleClose = (e) => {\n\t\te.preventDefault();\n\t\tsetOpen(false);\n\t};\n\n\tconst [expenseForm, setExpenseForm] = React.useState({\n\t\tvalue: '',\n\t\tcost: '',\n\t});\n\n\tconst handleInputChange = (e) => {\n\t\tconst { name, value } = e.target;\n\t\tsetExpenseForm((prevState) => {\n\t\t\treturn {\n\t\t\t\t...prevState,\n\t\t\t\t[name]: value,\n\t\t\t};\n\t\t});\n\t};\n\n\tconst handleSubmit = async (e, heading) => {\n\t\te.preventDefault();\n\n\t\tsetLoader(true);\n\t\ttry {\n\t\t\tif (edit) {\n\t\t\t\tlet update = await updateInputExpense({ inputMainId: salesId, inputId: expenseForm.inputId, data: expenseForm });\n\t\t\t\tif (update.status === 200 || update.status === 201) {\n\t\t\t\t\tlet inputs = await getInputs();\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: 'SET_INPUTS',\n\t\t\t\t\t\tpayload: inputs,\n\t\t\t\t\t});\n\n\t\t\t\t\tsetAlertClass('show');\n\t\t\t\t\tsetMsg(update.data.message);\n\t\t\t\t\tsetErr('');\n\t\t\t\t\tsetEdit(false);\n\t\t\t\t\tsetLoader(false);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlet add = await addInputExpense({ ...expenseForm, inputMainId: salesId, heading });\n\t\t\t\tif (add.status === 200 || add.status === 201) {\n\t\t\t\t\tlet inputs = await getInputs();\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: 'SET_INPUTS',\n\t\t\t\t\t\tpayload: inputs,\n\t\t\t\t\t});\n\n\t\t\t\t\tsetAlertClass('show');\n\t\t\t\t\tsetMsg(add.data.message);\n\t\t\t\t\tsetErr('');\n\t\t\t\t\tsetLoader(false);\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tsetAlertClass('show');\n\t\t\tsetMsg('');\n\t\t\tconsole.log(e);\n\t\t\tif (err.response && err.response.data) {\n\t\t\t\tif (err.response.data.error) {\n\t\t\t\t\tsetErr(err.response.data.error.message);\n\t\t\t\t} else if (err.response.data.errors) {\n\t\t\t\t\tlet errors = err.response.data.errors.map((err) => <li>{err.msg}</li>);\n\t\t\t\t\tsetErr(errors);\n\t\t\t\t} else {\n\t\t\t\t\tsetErr(err.response.data.message);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsetErr(err.message);\n\t\t\t}\n\t\t\tsetLoader(false);\n\t\t}\n\t\tsetExpenseForm({\n\t\t\tvalue: '',\n\t\t\tcost: '',\n\t\t});\n\t\tsetOpen(false);\n\t};\n\n\tconst handleDeletePlan = async (inputId) => {\n\t\ttry {\n\t\t\tlet deletePlanRes = await deleteInputExpense({ inputMainId: salesId, inputId });\n\n\t\t\tif (deletePlanRes.status === 200) {\n\t\t\t\tlet inputs = await getInputs();\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: 'SET_INPUTS',\n\t\t\t\t\tpayload: inputs,\n\t\t\t\t});\n\n\t\t\t\tsetAlertClass('show');\n\t\t\t\tsetMsg(deletePlanRes.data.message);\n\t\t\t\tsetErr('');\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tsetAlertClass('show');\n\t\t\tsetMsg('');\n\t\t\tif (e.response && e.response.data) {\n\t\t\t\tif (e.response.data.error) {\n\t\t\t\t\tsetErr(e.response.data.error.message);\n\t\t\t\t} else if (e.response.data.errors) {\n\t\t\t\t\tconsole.log(e.response.data.errors);\n\t\t\t\t\tlet errors = e.response.data.errors.map((err) => <li>{err.msg}</li>);\n\t\t\t\t\tsetErr(errors);\n\t\t\t\t} else {\n\t\t\t\t\tsetErr(e.response.data.message);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsetErr(e.message);\n\t\t\t}\n\t\t}\n\t\tsetOpen(false);\n\t};\n\n\tconst handleEditPlan = (expInp) => {\n\t\tsetEdit(true);\n\t\tsetOpen(true);\n\t\tsetExpenseForm({\n\t\t\tvalue: expInp.value,\n\t\t\tcost: expInp.cost,\n\t\t\tinputId: expInp._id,\n\t\t});\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<Dialog open={open} onClose={handleClose} aria-labelledby='alert-dialog-title' aria-describedby='alert-dialog-description'>\n\t\t\t\t<DialogTitle id='alert-dialog-title'>{edit ? 'Edit Expense' : 'Add Expense'}</DialogTitle>\n\t\t\t\t<form onSubmit={(e) => handleSubmit(e, dialogSetting.heading)}>\n\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t<div className='row g-3'>\n\t\t\t\t\t\t\t<div className='col-12 col-md-12 mb-3'>\n\t\t\t\t\t\t\t\t<label htmlFor='value' className='form-label'>\n\t\t\t\t\t\t\t\t\t{dialogSetting.title}\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<input type='text' name='value' value={expenseForm.value} onChange={handleInputChange} className='form-control' id='value' placeholder='Credit Card Processing Fees' required />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='row g-3'>\n\t\t\t\t\t\t\t<div className='col-12 col-md-12 mb-3'>\n\t\t\t\t\t\t\t\t<label htmlFor='cost' className='form-label'>\n\t\t\t\t\t\t\t\t\tCost\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<input type='text' name='cost' value={expenseForm.cost} onChange={handleInputChange} className='form-control' id='cost' placeholder='Cost' required />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</DialogContent>\n\t\t\t\t\t<DialogActions>\n\t\t\t\t\t\t<button className='btn btn-danger' onClick={handleClose}>\n\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button disabled={loader} type='submit' className='btn btn-primary' autoFocus>\n\t\t\t\t\t\t\t{loader && (\n\t\t\t\t\t\t\t\t<div className='spinner-border spinner-border-sm' role='status'>\n\t\t\t\t\t\t\t\t\t<span className='sr-only'>Loading...</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{!loader && (edit ? 'Update Expense' : 'Add Expense')}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</DialogActions>\n\t\t\t\t</form>\n\t\t\t</Dialog>\n\t\t\t<div className='card'>\n\t\t\t\t<div>\n\t\t\t\t\t<div className='table-responsive'>\n\t\t\t\t\t\t<table className='table table-sm table-hover table-nowrap mb-0'>\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Contractor</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Cost (per month) </th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>\n\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\ttitle='Add Major Expense'\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ fontSize: '22px' }}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Contractor',\n\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'contractor',\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\thandleClickOpen();\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-plus add-icon'></i>\n\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t{expenseInputs &&\n\t\t\t\t\t\t\t\t\texpenseInputs\n\t\t\t\t\t\t\t\t\t\t.filter((exp) => exp.heading === 'contractor')\n\t\t\t\t\t\t\t\t\t\t.map((expInp, id) => (\n\t\t\t\t\t\t\t\t\t\t\t<tr key={id}>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.value}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.cost}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-edit edit-icon'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Contractor',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'contractor',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleEditPlan(expInp);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className='fe fe-trash-2 delete-icon' onClick={() => handleDeletePlan(expInp._id)}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default ExpenseInputs;\n","/home/yamin/Downloads/work/finpro/src/views/Marketing/ExpenseInputs.js",["207"],"import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport { AuthContext } from '../../context/context';\nimport { getInputs } from '../../context/fetch-service';\nimport { addInputExpense, deleteInputExpense, updateInputExpense } from '../../context/input-service';\n\nfunction ExpenseInputs({ marketingId, expenseInputs, setMsg, setErr, setAlertClass }) {\n\tconst { state, dispatch } = React.useContext(AuthContext);\n\n\tconst [open, setOpen] = React.useState(false);\n\tconst [dialogSetting, setDialogSetting] = React.useState({\n\t\ttitle: '',\n\t\tbuttonTitle: '',\n\t\theading: '',\n\t\ttype: '',\n\t});\n\tconst [loader, setLoader] = React.useState(false);\n\tconst [edit, setEdit] = React.useState(false);\n\n\tconst handleClickOpen = () => {\n\t\tsetOpen(true);\n\t};\n\n\tconst handleClose = (e) => {\n\t\te.preventDefault();\n\t\tsetOpen(false);\n\t};\n\n\tconst [expenseForm, setExpenseForm] = React.useState({\n\t\tvalue: '',\n\t\tcost: '',\n\t\tperEmployee: '',\n\t\tdate: '',\n\t});\n\n\tconst handleInputChange = (e) => {\n\t\tconst { name, value } = e.target;\n\t\tsetExpenseForm((prevState) => {\n\t\t\treturn {\n\t\t\t\t...prevState,\n\t\t\t\t[name]: value,\n\t\t\t};\n\t\t});\n\t};\n\n\tconst handleSubmit = async (e, heading) => {\n\t\te.preventDefault();\n\n\t\tsetLoader(true);\n\t\ttry {\n\t\t\tif (edit) {\n\t\t\t\tlet update = await updateInputExpense({ inputMainId: marketingId, inputId: expenseForm.inputId, data: expenseForm });\n\t\t\t\tif (update.status === 200 || update.status === 201) {\n\t\t\t\t\tlet inputs = await getInputs();\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: 'SET_INPUTS',\n\t\t\t\t\t\tpayload: inputs,\n\t\t\t\t\t});\n\n\t\t\t\t\tsetAlertClass('show');\n\t\t\t\t\tsetMsg(update.data.message);\n\t\t\t\t\tsetErr('');\n\t\t\t\t\tsetEdit(false);\n\t\t\t\t\tsetLoader(false);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlet add = await addInputExpense({ ...expenseForm, inputMainId: marketingId, heading });\n\t\t\t\tif (add.status === 200 || add.status === 201) {\n\t\t\t\t\tlet inputs = await getInputs();\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: 'SET_INPUTS',\n\t\t\t\t\t\tpayload: inputs,\n\t\t\t\t\t});\n\n\t\t\t\t\tsetAlertClass('show');\n\t\t\t\t\tsetMsg(add.data.message);\n\t\t\t\t\tsetErr('');\n\t\t\t\t\tsetLoader(false);\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tsetAlertClass('show');\n\t\t\tsetMsg('');\n\t\t\tconsole.log(e);\n\t\t\tif (err.response && err.response.data) {\n\t\t\t\tif (err.response.data.error) {\n\t\t\t\t\tsetErr(err.response.data.error.message);\n\t\t\t\t} else if (err.response.data.errors) {\n\t\t\t\t\tlet errors = err.response.data.errors.map((err) => <li>{err.msg}</li>);\n\t\t\t\t\tsetErr(errors);\n\t\t\t\t} else {\n\t\t\t\t\tsetErr(err.response.data.message);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsetErr(err.message);\n\t\t\t}\n\t\t\tsetLoader(false);\n\t\t}\n\t\tsetExpenseForm({\n\t\t\tvalue: '',\n\t\t\tcost: '',\n\t\t\tperEmployee: '',\n\t\t\tdate: '',\n\t\t});\n\t\tsetOpen(false);\n\t};\n\n\tconst handleDeletePlan = async (inputId) => {\n\t\ttry {\n\t\t\tlet deletePlanRes = await deleteInputExpense({ inputMainId: marketingId, inputId });\n\n\t\t\tif (deletePlanRes.status === 200) {\n\t\t\t\tlet inputs = await getInputs();\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: 'SET_INPUTS',\n\t\t\t\t\tpayload: inputs,\n\t\t\t\t});\n\n\t\t\t\tsetAlertClass('show');\n\t\t\t\tsetMsg(deletePlanRes.data.message);\n\t\t\t\tsetErr('');\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tsetAlertClass('show');\n\t\t\tsetMsg('');\n\t\t\tif (e.response && e.response.data) {\n\t\t\t\tif (e.response.data.error) {\n\t\t\t\t\tsetErr(e.response.data.error.message);\n\t\t\t\t} else if (e.response.data.errors) {\n\t\t\t\t\tconsole.log(e.response.data.errors);\n\t\t\t\t\tlet errors = e.response.data.errors.map((err) => <li>{err.msg}</li>);\n\t\t\t\t\tsetErr(errors);\n\t\t\t\t} else {\n\t\t\t\t\tsetErr(e.response.data.message);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsetErr(e.message);\n\t\t\t}\n\t\t}\n\t\tsetOpen(false);\n\t};\n\n\tconst handleEditPlan = (expInp) => {\n\t\tsetEdit(true);\n\t\tsetOpen(true);\n\t\tsetExpenseForm({\n\t\t\tvalue: expInp.value,\n\t\t\tcost: expInp.cost,\n\t\t\tperEmployee: expInp.perEmployee,\n\t\t\tdate: expInp.date,\n\t\t\tinputId: expInp._id,\n\t\t});\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<Dialog open={open} onClose={handleClose} aria-labelledby='alert-dialog-title' aria-describedby='alert-dialog-description'>\n\t\t\t\t<DialogTitle id='alert-dialog-title'>{edit ? 'Edit Expense' : 'Add Expense'}</DialogTitle>\n\t\t\t\t<form onSubmit={(e) => handleSubmit(e, dialogSetting.heading)}>\n\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t<div className='row g-3'>\n\t\t\t\t\t\t\t<div className='col-12 col-md-12 mb-3'>\n\t\t\t\t\t\t\t\t<label htmlFor='value' className='form-label'>\n\t\t\t\t\t\t\t\t\t{dialogSetting.title}\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<input type='text' name='value' value={expenseForm.value} onChange={handleInputChange} className='form-control' id='value' placeholder='Credit Card Processing Fees' required />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='row g-3'>\n\t\t\t\t\t\t\t<div className='col-12 col-md-12 mb-3'>\n\t\t\t\t\t\t\t\t<label htmlFor='cost' className='form-label'>\n\t\t\t\t\t\t\t\t\tCost\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<input type='text' name='cost' value={expenseForm.cost} onChange={handleInputChange} className='form-control' id='cost' placeholder='Cost' required />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='row g-3'>\n\t\t\t\t\t\t\t{dialogSetting.type === 'date' ? (\n\t\t\t\t\t\t\t\t<div className='col-12 col-md-12 mb-3'>\n\t\t\t\t\t\t\t\t\t<label htmlFor='date' className='form-label'>\n\t\t\t\t\t\t\t\t\t\tDate\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t<input type='date' name='date' value={expenseForm.date} onChange={handleInputChange} className='form-control' id='date' placeholder='Date' />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\tdialogSetting.employee && (\n\t\t\t\t\t\t\t\t\t<div className='col-12 col-md-12 mb-3'>\n\t\t\t\t\t\t\t\t\t\t<label htmlFor='perEmployee' className='form-label'>\n\t\t\t\t\t\t\t\t\t\t\t{dialogSetting.employee}\n\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t<input type='text' name='perEmployee' value={expenseForm.perEmployee} onChange={handleInputChange} className='form-control' id='perEmployee' placeholder={dialogSetting.employee} />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</DialogContent>\n\t\t\t\t\t<DialogActions>\n\t\t\t\t\t\t<button className='btn btn-danger' onClick={handleClose}>\n\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button disabled={loader} type='submit' className='btn btn-primary' autoFocus>\n\t\t\t\t\t\t\t{loader && (\n\t\t\t\t\t\t\t\t<div className='spinner-border spinner-border-sm' role='status'>\n\t\t\t\t\t\t\t\t\t<span className='sr-only'>Loading...</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{!loader && (edit ? 'Update Expense' : 'Add Expense')}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</DialogActions>\n\t\t\t\t</form>\n\t\t\t</Dialog>\n\n\t\t\t<div className='card'>\n\t\t\t\t<div>\n\t\t\t\t\t<div className='table-responsive'>\n\t\t\t\t\t\t<table className='table table-sm table-hover table-nowrap mb-0'>\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Tradeshows</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Cost (per quarter)</th>\n\n\t\t\t\t\t\t\t\t\t<th scope='col'>\n\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\ttitle='Add Major Expense'\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ fontSize: '22px' }}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Tradeshows',\n\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'tradeShows',\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\thandleClickOpen();\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-plus add-icon'></i>\n\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t{expenseInputs &&\n\t\t\t\t\t\t\t\t\texpenseInputs\n\t\t\t\t\t\t\t\t\t\t.filter((exp) => exp.heading === 'tradeShows')\n\t\t\t\t\t\t\t\t\t\t.map((expInp, id) => (\n\t\t\t\t\t\t\t\t\t\t\t<tr key={id}>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.value}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.cost}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-edit edit-icon'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Tradeshows',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'tradeShows',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleEditPlan(expInp);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className='fe fe-trash-2 delete-icon' onClick={() => handleDeletePlan(expInp._id)}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div className='card'>\n\t\t\t\t<div>\n\t\t\t\t\t<div className='table-responsive'>\n\t\t\t\t\t\t<table className='table table-sm table-hover table-nowrap mb-0'>\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Online Marketing</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Cost (per month)</th>\n\n\t\t\t\t\t\t\t\t\t<th scope='col'>\n\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\ttitle='Add Major Expense'\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ fontSize: '22px' }}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Online Marketing',\n\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'onlineMarketing',\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\thandleClickOpen();\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-plus add-icon'></i>\n\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t{expenseInputs &&\n\t\t\t\t\t\t\t\t\texpenseInputs\n\t\t\t\t\t\t\t\t\t\t.filter((exp) => exp.heading === 'onlineMarketing')\n\t\t\t\t\t\t\t\t\t\t.map((expInp, id) => (\n\t\t\t\t\t\t\t\t\t\t\t<tr key={id}>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.value}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.cost}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-edit edit-icon'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Online Marketing',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'onlineMarketing',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleEditPlan(expInp);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className='fe fe-trash-2 delete-icon' onClick={() => handleDeletePlan(expInp._id)}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div className='card'>\n\t\t\t\t<div>\n\t\t\t\t\t<div className='table-responsive'>\n\t\t\t\t\t\t<table className='table table-sm table-hover table-nowrap mb-0'>\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Equipment & Telecom</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Cost</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Per new Employee</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>\n\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\ttitle='Add Major Expense'\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ fontSize: '22px' }}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Equipment & Telecom',\n\t\t\t\t\t\t\t\t\t\t\t\t\temployee: 'Per New Employee',\n\t\t\t\t\t\t\t\t\t\t\t\t\tbuttonTitle: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'equipmentAndTelecom',\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\thandleClickOpen();\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-plus add-icon'></i>\n\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t{expenseInputs &&\n\t\t\t\t\t\t\t\t\texpenseInputs\n\t\t\t\t\t\t\t\t\t\t.filter((exp) => exp.heading === 'equipmentAndTelecom')\n\t\t\t\t\t\t\t\t\t\t.map((expInp, id) => (\n\t\t\t\t\t\t\t\t\t\t\t<tr key={id}>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.value}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.cost}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.perEmployee}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-edit edit-icon'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Equipment & Telecom',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\temployee: 'Per New Employee',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbuttonTitle: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'equipmentAndTelecom',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleEditPlan(expInp);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className='fe fe-trash-2 delete-icon' onClick={() => handleDeletePlan(expInp._id)}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div className='card'>\n\t\t\t\t<div>\n\t\t\t\t\t<div className='table-responsive'>\n\t\t\t\t\t\t<table className='table table-sm table-hover table-nowrap mb-0'>\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Dues & Subscriptions</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Cost</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>\n\t\t\t\t\t\t\t\t\t\tPer new Employee <br /> (per month)\n\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>\n\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\ttitle='Add Major Expense'\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ fontSize: '22px' }}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Dues & Subscription',\n\t\t\t\t\t\t\t\t\t\t\t\t\temployee: 'Per New Employee',\n\t\t\t\t\t\t\t\t\t\t\t\t\tbuttonTitle: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'duesAnsSubscriptions',\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\thandleClickOpen();\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-plus add-icon'></i>\n\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t{expenseInputs &&\n\t\t\t\t\t\t\t\t\texpenseInputs\n\t\t\t\t\t\t\t\t\t\t.filter((exp) => exp.heading === 'duesAnsSubscriptions')\n\t\t\t\t\t\t\t\t\t\t.map((expInp, id) => (\n\t\t\t\t\t\t\t\t\t\t\t<tr key={id}>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.value}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.cost}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.perEmployee}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-edit edit-icon'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Dues & Subscriptions',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\temployee: 'Per New Employee',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbuttonTitle: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'duesAnsSubscriptions',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleEditPlan(expInp);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className='fe fe-trash-2 delete-icon' onClick={() => handleDeletePlan(expInp._id)}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div className='card'>\n\t\t\t\t<div>\n\t\t\t\t\t<div className='table-responsive'>\n\t\t\t\t\t\t<table className='table table-sm table-hover table-nowrap mb-0'>\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Travel & Entertainment</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Cost</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Per Employee (per month)</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>\n\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\ttitle='Add Major Expense'\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ fontSize: '22px' }}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Travel & Entertainment',\n\t\t\t\t\t\t\t\t\t\t\t\t\temployee: 'Per New Employee',\n\t\t\t\t\t\t\t\t\t\t\t\t\tbuttonTitle: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'travelAndEntertainment',\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\thandleClickOpen();\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-plus add-icon'></i>\n\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t{expenseInputs &&\n\t\t\t\t\t\t\t\t\texpenseInputs\n\t\t\t\t\t\t\t\t\t\t.filter((exp) => exp.heading === 'travelAndEntertainment')\n\t\t\t\t\t\t\t\t\t\t.map((expInp, id) => (\n\t\t\t\t\t\t\t\t\t\t\t<tr key={id}>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.value}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.cost}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.perEmployee}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-edit edit-icon'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Travel & Entertainments',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\temployee: 'Per New Employee',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbuttonTitle: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'travelAndEntertainment',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleEditPlan(expInp);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className='fe fe-trash-2 delete-icon' onClick={() => handleDeletePlan(expInp._id)}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div className='card'>\n\t\t\t\t<div>\n\t\t\t\t\t<div className='table-responsive'>\n\t\t\t\t\t\t<table className='table table-sm table-hover table-nowrap mb-0'>\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Others</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Cost</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Date</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>\n\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\ttitle='Add Major Expense'\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ fontSize: '22px' }}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Others',\n\t\t\t\t\t\t\t\t\t\t\t\t\temployee: 'Cost',\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: 'date',\n\t\t\t\t\t\t\t\t\t\t\t\t\tbuttonTitle: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'others',\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\thandleClickOpen();\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-plus add-icon'></i>\n\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t{expenseInputs &&\n\t\t\t\t\t\t\t\t\texpenseInputs\n\t\t\t\t\t\t\t\t\t\t.filter((exp) => exp.heading === 'others')\n\t\t\t\t\t\t\t\t\t\t.map((expInp, id) => (\n\t\t\t\t\t\t\t\t\t\t\t<tr key={id}>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.value}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.cost}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.date}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-edit edit-icon'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Others',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\temployee: 'Cost',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: 'date',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbuttonTitle: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'others',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleEditPlan(expInp);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className='fe fe-trash-2 delete-icon' onClick={() => handleDeletePlan(expInp._id)}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default ExpenseInputs;\n","/home/yamin/Downloads/work/finpro/src/views/Marketing/MarketingInputs.js",["208"],"import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { addInputs, deleteInputs, updateInputs } from '../../context/input-service';\nimport { AuthContext } from '../../context/context';\nimport { getInputs } from '../../context/fetch-service';\nimport moment from 'moment';\n\nimport ContractExpense from './ContractorExpense';\n\nfunction MarketingInputs({ marketing, setMsg, setErr, setAlertClass }) {\n\tconst { state, dispatch } = React.useContext(AuthContext);\n\n\tconst [open, setOpen] = React.useState(false);\n\tconst [loader, setLoader] = React.useState(false);\n\tconst [edit, setEdit] = React.useState(false);\n\n\tconst handleClickOpen = () => {\n\t\tsetOpen(true);\n\t};\n\n\tconst handleClose = (e) => {\n\t\te.preventDefault();\n\t\tsetOpen(false);\n\t};\n\n\tconst [marketingInputForm, setMarketingInputForm] = React.useState({\n\t\thire: '',\n\t\tstartDate: '',\n\t\tsalary: '',\n\t\ttaxes: '',\n\t\tcommissions: '',\n\t\ttitle: 'marketing',\n\t});\n\n\tconst handleMarketingChange = (e) => {\n\t\tconst { name, value } = e.target;\n\t\tsetMarketingInputForm((prevState) => {\n\t\t\treturn {\n\t\t\t\t...prevState,\n\t\t\t\t[name]: value,\n\t\t\t};\n\t\t});\n\t};\n\n\tconst handleSubmit = async (e) => {\n\t\tsetLoader(true);\n\t\te.preventDefault();\n\t\ttry {\n\t\t\tif (edit) {\n\t\t\t\tlet update = await updateInputs({ inputMainId: marketing._id, inputId: marketingInputForm.inputId, data: marketingInputForm });\n\t\t\t\tif (update.status === 200 || update.status === 201) {\n\t\t\t\t\tlet inputs = await getInputs();\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: 'SET_INPUTS',\n\t\t\t\t\t\tpayload: inputs,\n\t\t\t\t\t});\n\n\t\t\t\t\tsetAlertClass('show');\n\t\t\t\t\tsetMsg(update.data.message);\n\t\t\t\t\tsetErr('');\n\t\t\t\t\tsetEdit(false);\n\t\t\t\t\tsetLoader(false);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlet add = await addInputs(marketingInputForm);\n\t\t\t\tif (add.status === 200 || add.status === 201) {\n\t\t\t\t\tlet inputs = await getInputs();\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: 'SET_INPUTS',\n\t\t\t\t\t\tpayload: inputs,\n\t\t\t\t\t});\n\n\t\t\t\t\tsetAlertClass('show');\n\t\t\t\t\tsetMsg(add.data.message);\n\t\t\t\t\tsetErr('');\n\t\t\t\t\tsetLoader(false);\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tsetAlertClass('show');\n\t\t\tsetMsg('');\n\t\t\tconsole.log(e);\n\t\t\tif (err.response && err.response.data) {\n\t\t\t\tif (err.response.data.error) {\n\t\t\t\t\tsetErr(err.response.data.error.message);\n\t\t\t\t} else if (err.response.data.errors) {\n\t\t\t\t\tlet errors = err.response.data.errors.map((err) => <li>{err.msg}</li>);\n\t\t\t\t\tsetErr(errors);\n\t\t\t\t} else {\n\t\t\t\t\tsetErr(err.response.data.message);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsetErr(err.message);\n\t\t\t}\n\t\t\tsetLoader(false);\n\t\t}\n\t\tsetMarketingInputForm({\n\t\t\thire: '',\n\t\t\tstartDate: '',\n\t\t\tsalary: '',\n\t\t\ttaxes: '',\n\t\t\tcommissions: '',\n\t\t\ttitle: 'marketing',\n\t\t});\n\t\tsetOpen(false);\n\t};\n\n\tconst handleDeleteInput = async (data) => {\n\t\ttry {\n\t\t\tlet deletePlanRes = await deleteInputs(data);\n\n\t\t\tif (deletePlanRes.status === 200) {\n\t\t\t\tlet inputs = await getInputs();\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: 'SET_INPUTS',\n\t\t\t\t\tpayload: inputs,\n\t\t\t\t});\n\n\t\t\t\tsetAlertClass('show');\n\t\t\t\tsetMsg(deletePlanRes.data.message);\n\t\t\t\tsetErr('');\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tsetAlertClass('show');\n\t\t\tsetMsg('');\n\t\t\tif (e.response && e.response.data) {\n\t\t\t\tif (e.response.data.error) {\n\t\t\t\t\tsetErr(e.response.data.error.message);\n\t\t\t\t} else if (e.response.data.errors) {\n\t\t\t\t\tconsole.log(e.response.data.errors);\n\t\t\t\t\tlet errors = e.response.data.errors.map((err) => <li>{err.msg}</li>);\n\t\t\t\t\tsetErr(errors);\n\t\t\t\t} else {\n\t\t\t\t\tsetErr(e.response.data.message);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsetErr(e.message);\n\t\t\t}\n\t\t}\n\t\tsetOpen(false);\n\t};\n\n\tconst handleEditInput = (input) => {\n\t\tsetEdit(true);\n\t\tsetOpen(true);\n\t\tsetMarketingInputForm({\n\t\t\thire: input.hire,\n\t\t\tstartDate: moment(input.date).format('YYYY-MM-DD'),\n\t\t\tsalary: input.salary,\n\t\t\ttaxes: input.taxes,\n\t\t\tcommissions: input.commissions,\n\t\t\ttitle: 'marketing',\n\t\t\tinputId: input._id,\n\t\t});\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<div className='card'>\n\t\t\t\t<div>\n\t\t\t\t\t<div className='table-responsive'>\n\t\t\t\t\t\t<table className='table table-sm table-hover table-nowrap mb-0'>\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Hire</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Start Date</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Salary</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Taxes</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Commissions</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>\n\t\t\t\t\t\t\t\t\t\t<i title='Add Marketing Inputs' onClick={handleClickOpen} style={{ fontSize: '22px', cursor: 'pointer' }} className='fe fe-plus add-icon'></i>\n\t\t\t\t\t\t\t\t\t\t<Dialog open={open} onClose={handleClose} aria-labelledby='alert-dialog-title' aria-describedby='alert-dialog-description'>\n\t\t\t\t\t\t\t\t\t\t\t<DialogTitle id='alert-dialog-title'>{edit ? 'Edit Marketing' : 'Add Marketing'}</DialogTitle>\n\n\t\t\t\t\t\t\t\t\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t\t\t\t\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='row g-3'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='col-12 col-md-6 mb-3'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label htmlFor='hire' className='form-label'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tHire\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type='text' name='hire' value={marketingInputForm.hire} onChange={handleMarketingChange} className='form-control' id='hire' placeholder='Hire' required />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='col-6 col-md-6 mb-3'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label htmlFor='startDate' className='form-label'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tStart Date\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type='date' name='startDate' value={marketingInputForm.startDate} onChange={handleMarketingChange} className='form-control' id='date' placeholder='Start Date' required />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='row g-3'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='col-12 col-md-12 mb-3'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label htmlFor='salary' className='form-label'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tSalary\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type='text' name='salary' value={marketingInputForm.salary} onChange={handleMarketingChange} className='form-control' id='salary' placeholder='Salary' required />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='row g-3'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='col-12 col-md-12 mb-3'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label htmlFor='taxes' className='form-label'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tTaxes\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type='text' name='taxes' value={marketingInputForm.taxes} onChange={handleMarketingChange} className='form-control' id='taxes' placeholder='Taxes' required />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='col-12 col-md-12 mb-3'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label htmlFor='commissions' className='form-label'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCommissions\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type='text' name='commissions' value={marketingInputForm.commissions} onChange={handleMarketingChange} className='form-control' id='commissions' placeholder='Commissions' required />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</DialogContent>\n\t\t\t\t\t\t\t\t\t\t\t\t<DialogActions>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<button className='btn btn-danger' onClick={handleClose}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<button disabled={loader} type='submit' className='btn btn-primary' autoFocus>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{loader && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='spinner-border spinner-border-sm' role='status'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='sr-only'>Loading...</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{!loader && (edit ? 'Update Marketing' : 'Add Marketing')}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t\t</DialogActions>\n\t\t\t\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t\t\t\t</Dialog>\n\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t{marketing &&\n\t\t\t\t\t\t\t\t\tmarketing.inputs &&\n\t\t\t\t\t\t\t\t\tmarketing.inputs.length > 0 &&\n\t\t\t\t\t\t\t\t\tmarketing.inputs.map((input, id) => (\n\t\t\t\t\t\t\t\t\t\t<tr key={id}>\n\t\t\t\t\t\t\t\t\t\t\t<td>{input.hire}</td>\n\t\t\t\t\t\t\t\t\t\t\t<td>{input.startDate}</td>\n\t\t\t\t\t\t\t\t\t\t\t<td>{input.salary}</td>\n\t\t\t\t\t\t\t\t\t\t\t<td>{input.taxes}</td>\n\t\t\t\t\t\t\t\t\t\t\t<td>{input.commissions}</td>\n\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<i title='Edit Plan' style={{ cursor: 'pointer' }} className='fe fe-edit edit-icon' onClick={() => handleEditInput(input)}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<i title='Delete Plan' style={{ cursor: 'pointer' }} onClick={() => handleDeleteInput({ inputMainId: marketing._id, inputId: input._id })} className='fe fe-trash-2 delete-icon'></i>\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div className='row'>\n\t\t\t\t<div className='col-6 col-xl-6'>{marketing && marketing._id && <ContractExpense marketingId={marketing._id} expenseInputs={marketing.majorExpenseInput} setMsg={setMsg} setErr={setErr} setAlertClass={setAlertClass} />}</div>\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\nexport default MarketingInputs;\n","/home/yamin/Downloads/work/finpro/src/views/Marketing/ContractorExpense.js",["209"],"import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport { AuthContext } from '../../context/context';\nimport { getInputs } from '../../context/fetch-service';\nimport { addInputExpense, deleteInputExpense, updateInputExpense } from '../../context/input-service';\n\nfunction ExpenseInputs({ marketingId, expenseInputs, setMsg, setErr, setAlertClass }) {\n\tconst { state, dispatch } = React.useContext(AuthContext);\n\n\tconst [open, setOpen] = React.useState(false);\n\tconst [dialogSetting, setDialogSetting] = React.useState({\n\t\ttitle: '',\n\t\tbuttonTitle: '',\n\t\theading: '',\n\t\ttype: '',\n\t});\n\tconst [loader, setLoader] = React.useState(false);\n\tconst [edit, setEdit] = React.useState(false);\n\n\tconst handleClickOpen = () => {\n\t\tsetOpen(true);\n\t};\n\n\tconst handleClose = (e) => {\n\t\te.preventDefault();\n\t\tsetOpen(false);\n\t};\n\n\tconst [expenseForm, setExpenseForm] = React.useState({\n\t\tvalue: '',\n\t\tcost: '',\n\t});\n\n\tconst handleInputChange = (e) => {\n\t\tconst { name, value } = e.target;\n\t\tsetExpenseForm((prevState) => {\n\t\t\treturn {\n\t\t\t\t...prevState,\n\t\t\t\t[name]: value,\n\t\t\t};\n\t\t});\n\t};\n\n\tconst handleSubmit = async (e, heading) => {\n\t\te.preventDefault();\n\n\t\tsetLoader(true);\n\t\ttry {\n\t\t\tif (edit) {\n\t\t\t\tlet update = await updateInputExpense({ inputMainId: marketingId, inputId: expenseForm.inputId, data: expenseForm });\n\t\t\t\tif (update.status === 200 || update.status === 201) {\n\t\t\t\t\tlet inputs = await getInputs();\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: 'SET_INPUTS',\n\t\t\t\t\t\tpayload: inputs,\n\t\t\t\t\t});\n\n\t\t\t\t\tsetAlertClass('show');\n\t\t\t\t\tsetMsg(update.data.message);\n\t\t\t\t\tsetErr('');\n\t\t\t\t\tsetEdit(false);\n\t\t\t\t\tsetLoader(false);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlet add = await addInputExpense({ ...expenseForm, inputMainId: marketingId, heading });\n\t\t\t\tif (add.status === 200 || add.status === 201) {\n\t\t\t\t\tlet inputs = await getInputs();\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: 'SET_INPUTS',\n\t\t\t\t\t\tpayload: inputs,\n\t\t\t\t\t});\n\n\t\t\t\t\tsetAlertClass('show');\n\t\t\t\t\tsetMsg(add.data.message);\n\t\t\t\t\tsetErr('');\n\t\t\t\t\tsetLoader(false);\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tsetAlertClass('show');\n\t\t\tsetMsg('');\n\t\t\tconsole.log(e);\n\t\t\tif (err.response && err.response.data) {\n\t\t\t\tif (err.response.data.error) {\n\t\t\t\t\tsetErr(err.response.data.error.message);\n\t\t\t\t} else if (err.response.data.errors) {\n\t\t\t\t\tlet errors = err.response.data.errors.map((err) => <li>{err.msg}</li>);\n\t\t\t\t\tsetErr(errors);\n\t\t\t\t} else {\n\t\t\t\t\tsetErr(err.response.data.message);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsetErr(err.message);\n\t\t\t}\n\t\t\tsetLoader(false);\n\t\t}\n\t\tsetExpenseForm({\n\t\t\tvalue: '',\n\t\t\tcost: '',\n\t\t});\n\t\tsetOpen(false);\n\t};\n\n\tconst handleDeletePlan = async (inputId) => {\n\t\ttry {\n\t\t\tlet deletePlanRes = await deleteInputExpense({ inputMainId: marketingId, inputId });\n\n\t\t\tif (deletePlanRes.status === 200) {\n\t\t\t\tlet inputs = await getInputs();\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: 'SET_INPUTS',\n\t\t\t\t\tpayload: inputs,\n\t\t\t\t});\n\n\t\t\t\tsetAlertClass('show');\n\t\t\t\tsetMsg(deletePlanRes.data.message);\n\t\t\t\tsetErr('');\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tsetAlertClass('show');\n\t\t\tsetMsg('');\n\t\t\tif (e.response && e.response.data) {\n\t\t\t\tif (e.response.data.error) {\n\t\t\t\t\tsetErr(e.response.data.error.message);\n\t\t\t\t} else if (e.response.data.errors) {\n\t\t\t\t\tconsole.log(e.response.data.errors);\n\t\t\t\t\tlet errors = e.response.data.errors.map((err) => <li>{err.msg}</li>);\n\t\t\t\t\tsetErr(errors);\n\t\t\t\t} else {\n\t\t\t\t\tsetErr(e.response.data.message);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsetErr(e.message);\n\t\t\t}\n\t\t}\n\t\tsetOpen(false);\n\t};\n\n\tconst handleEditPlan = (expInp) => {\n\t\tsetEdit(true);\n\t\tsetOpen(true);\n\t\tsetExpenseForm({\n\t\t\tvalue: expInp.value,\n\t\t\tcost: expInp.cost,\n\t\t\tinputId: expInp._id,\n\t\t});\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<Dialog open={open} onClose={handleClose} aria-labelledby='alert-dialog-title' aria-describedby='alert-dialog-description'>\n\t\t\t\t<DialogTitle id='alert-dialog-title'>{edit ? 'Edit Expense' : 'Add Expense'}</DialogTitle>\n\t\t\t\t<form onSubmit={(e) => handleSubmit(e, dialogSetting.heading)}>\n\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t<div className='row g-3'>\n\t\t\t\t\t\t\t<div className='col-12 col-md-12 mb-3'>\n\t\t\t\t\t\t\t\t<label htmlFor='value' className='form-label'>\n\t\t\t\t\t\t\t\t\t{dialogSetting.title}\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<input type='text' name='value' value={expenseForm.value} onChange={handleInputChange} className='form-control' id='value' placeholder='Credit Card Processing Fees' required />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='row g-3'>\n\t\t\t\t\t\t\t<div className='col-12 col-md-12 mb-3'>\n\t\t\t\t\t\t\t\t<label htmlFor='cost' className='form-label'>\n\t\t\t\t\t\t\t\t\tCost\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<input type='text' name='cost' value={expenseForm.cost} onChange={handleInputChange} className='form-control' id='cost' placeholder='Cost' required />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</DialogContent>\n\t\t\t\t\t<DialogActions>\n\t\t\t\t\t\t<button className='btn btn-danger' onClick={handleClose}>\n\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button disabled={loader} type='submit' className='btn btn-primary' autoFocus>\n\t\t\t\t\t\t\t{loader && (\n\t\t\t\t\t\t\t\t<div className='spinner-border spinner-border-sm' role='status'>\n\t\t\t\t\t\t\t\t\t<span className='sr-only'>Loading...</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{!loader && (edit ? 'Update Expense' : 'Add Expense')}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</DialogActions>\n\t\t\t\t</form>\n\t\t\t</Dialog>\n\t\t\t<div className='card'>\n\t\t\t\t<div>\n\t\t\t\t\t<div className='table-responsive'>\n\t\t\t\t\t\t<table className='table table-sm table-hover table-nowrap mb-0'>\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Contractor</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Cost (per month) </th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>\n\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\ttitle='Add Major Expense'\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ fontSize: '22px' }}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Contractor',\n\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'contractor',\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\thandleClickOpen();\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-plus add-icon'></i>\n\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t{expenseInputs &&\n\t\t\t\t\t\t\t\t\texpenseInputs\n\t\t\t\t\t\t\t\t\t\t.filter((exp) => exp.heading === 'contractor')\n\t\t\t\t\t\t\t\t\t\t.map((expInp, id) => (\n\t\t\t\t\t\t\t\t\t\t\t<tr key={id}>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.value}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.cost}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-edit edit-icon'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Contractor',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'contractor',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleEditPlan(expInp);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className='fe fe-trash-2 delete-icon' onClick={() => handleDeletePlan(expInp._id)}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default ExpenseInputs;\n","/home/yamin/Downloads/work/finpro/src/views/RandD/ExpenseInputs.js",["210"],"import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport { AuthContext } from '../../context/context';\nimport { getInputs } from '../../context/fetch-service';\nimport { addInputExpense, deleteInputExpense, updateInputExpense } from '../../context/input-service';\n\nfunction ExpenseInputs({ randdId, expenseInputs, setMsg, setErr, setAlertClass }) {\n\tconst { state, dispatch } = React.useContext(AuthContext);\n\n\tconst [open, setOpen] = React.useState(false);\n\tconst [dialogSetting, setDialogSetting] = React.useState({\n\t\ttitle: '',\n\t\tbuttonTitle: '',\n\t\theading: '',\n\t\ttype: '',\n\t});\n\tconst [loader, setLoader] = React.useState(false);\n\tconst [edit, setEdit] = React.useState(false);\n\n\tconst handleClickOpen = () => {\n\t\tsetOpen(true);\n\t};\n\n\tconst handleClose = (e) => {\n\t\te.preventDefault();\n\t\tsetOpen(false);\n\t};\n\n\tconst [expenseForm, setExpenseForm] = React.useState({\n\t\tvalue: '',\n\t\tcost: '',\n\t\tperEmployee: '',\n\t\tdate: '',\n\t});\n\n\tconst handleInputChange = (e) => {\n\t\tconst { name, value } = e.target;\n\t\tsetExpenseForm((prevState) => {\n\t\t\treturn {\n\t\t\t\t...prevState,\n\t\t\t\t[name]: value,\n\t\t\t};\n\t\t});\n\t};\n\n\tconst handleSubmit = async (e, heading) => {\n\t\te.preventDefault();\n\n\t\tsetLoader(true);\n\t\ttry {\n\t\t\tif (edit) {\n\t\t\t\tlet update = await updateInputExpense({ inputMainId: randdId, inputId: expenseForm.inputId, data: expenseForm });\n\t\t\t\tif (update.status === 200 || update.status === 201) {\n\t\t\t\t\tlet inputs = await getInputs();\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: 'SET_INPUTS',\n\t\t\t\t\t\tpayload: inputs,\n\t\t\t\t\t});\n\n\t\t\t\t\tsetAlertClass('show');\n\t\t\t\t\tsetMsg(update.data.message);\n\t\t\t\t\tsetErr('');\n\t\t\t\t\tsetEdit(false);\n\t\t\t\t\tsetLoader(false);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlet add = await addInputExpense({ ...expenseForm, inputMainId: randdId, heading });\n\t\t\t\tif (add.status === 200 || add.status === 201) {\n\t\t\t\t\tlet inputs = await getInputs();\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: 'SET_INPUTS',\n\t\t\t\t\t\tpayload: inputs,\n\t\t\t\t\t});\n\n\t\t\t\t\tsetAlertClass('show');\n\t\t\t\t\tsetMsg(add.data.message);\n\t\t\t\t\tsetErr('');\n\t\t\t\t\tsetLoader(false);\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tsetAlertClass('show');\n\t\t\tsetMsg('');\n\t\t\tconsole.log(e);\n\t\t\tif (err.response && err.response.data) {\n\t\t\t\tif (err.response.data.error) {\n\t\t\t\t\tsetErr(err.response.data.error.message);\n\t\t\t\t} else if (err.response.data.errors) {\n\t\t\t\t\tlet errors = err.response.data.errors.map((err) => <li>{err.msg}</li>);\n\t\t\t\t\tsetErr(errors);\n\t\t\t\t} else {\n\t\t\t\t\tsetErr(err.response.data.message);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsetErr(err.message);\n\t\t\t}\n\t\t\tsetLoader(false);\n\t\t}\n\t\tsetExpenseForm({\n\t\t\tvalue: '',\n\t\t\tcost: '',\n\t\t\tperEmployee: '',\n\t\t\tdate: '',\n\t\t});\n\t\tsetOpen(false);\n\t};\n\n\tconst handleDeletePlan = async (inputId) => {\n\t\ttry {\n\t\t\tlet deletePlanRes = await deleteInputExpense({ inputMainId: randdId, inputId });\n\n\t\t\tif (deletePlanRes.status === 200) {\n\t\t\t\tlet inputs = await getInputs();\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: 'SET_INPUTS',\n\t\t\t\t\tpayload: inputs,\n\t\t\t\t});\n\n\t\t\t\tsetAlertClass('show');\n\t\t\t\tsetMsg(deletePlanRes.data.message);\n\t\t\t\tsetErr('');\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tsetAlertClass('show');\n\t\t\tsetMsg('');\n\t\t\tif (e.response && e.response.data) {\n\t\t\t\tif (e.response.data.error) {\n\t\t\t\t\tsetErr(e.response.data.error.message);\n\t\t\t\t} else if (e.response.data.errors) {\n\t\t\t\t\tconsole.log(e.response.data.errors);\n\t\t\t\t\tlet errors = e.response.data.errors.map((err) => <li>{err.msg}</li>);\n\t\t\t\t\tsetErr(errors);\n\t\t\t\t} else {\n\t\t\t\t\tsetErr(e.response.data.message);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsetErr(e.message);\n\t\t\t}\n\t\t}\n\t\tsetOpen(false);\n\t};\n\n\tconst handleEditPlan = (expInp) => {\n\t\tsetEdit(true);\n\t\tsetOpen(true);\n\t\tsetExpenseForm({\n\t\t\tvalue: expInp.value,\n\t\t\tcost: expInp.cost,\n\t\t\tperEmployee: expInp.perEmployee,\n\t\t\tdate: expInp.date,\n\t\t\tinputId: expInp._id,\n\t\t});\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<Dialog open={open} onClose={handleClose} aria-labelledby='alert-dialog-title' aria-describedby='alert-dialog-description'>\n\t\t\t\t<DialogTitle id='alert-dialog-title'>{edit ? 'Edit Expense' : 'Add Expense'}</DialogTitle>\n\t\t\t\t<form onSubmit={(e) => handleSubmit(e, dialogSetting.heading)}>\n\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t<div className='row g-3'>\n\t\t\t\t\t\t\t<div className='col-12 col-md-12 mb-3'>\n\t\t\t\t\t\t\t\t<label htmlFor='value' className='form-label'>\n\t\t\t\t\t\t\t\t\t{dialogSetting.title}\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<input type='text' name='value' value={expenseForm.value} onChange={handleInputChange} className='form-control' id='value' placeholder='Credit Card Processing Fees' required />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='row g-3'>\n\t\t\t\t\t\t\t<div className='col-12 col-md-12 mb-3'>\n\t\t\t\t\t\t\t\t<label htmlFor='cost' className='form-label'>\n\t\t\t\t\t\t\t\t\tCost\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<input type='text' name='cost' value={expenseForm.cost} onChange={handleInputChange} className='form-control' id='cost' placeholder='Cost' required />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='row g-3'>\n\t\t\t\t\t\t\t{dialogSetting.type === 'date' ? (\n\t\t\t\t\t\t\t\t<div className='col-12 col-md-12 mb-3'>\n\t\t\t\t\t\t\t\t\t<label htmlFor='date' className='form-label'>\n\t\t\t\t\t\t\t\t\t\tDate\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t<input type='date' name='date' value={expenseForm.date} onChange={handleInputChange} className='form-control' id='date' placeholder='Date' />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<div className='col-12 col-md-12 mb-3'>\n\t\t\t\t\t\t\t\t\t<label htmlFor='perEmployee' className='form-label'>\n\t\t\t\t\t\t\t\t\t\t{dialogSetting.employee}\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t<input type='text' name='perEmployee' value={expenseForm.perEmployee} onChange={handleInputChange} className='form-control' id='perEmployee' placeholder={dialogSetting.employee} />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</DialogContent>\n\t\t\t\t\t<DialogActions>\n\t\t\t\t\t\t<button className='btn btn-danger' onClick={handleClose}>\n\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button disabled={loader} type='submit' className='btn btn-primary' autoFocus>\n\t\t\t\t\t\t\t{loader && (\n\t\t\t\t\t\t\t\t<div className='spinner-border spinner-border-sm' role='status'>\n\t\t\t\t\t\t\t\t\t<span className='sr-only'>Loading...</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{!loader && (edit ? 'Update Expense' : 'Add Expense')}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</DialogActions>\n\t\t\t\t</form>\n\t\t\t</Dialog>\n\t\t\t<div className='card'>\n\t\t\t\t<div>\n\t\t\t\t\t<div className='table-responsive'>\n\t\t\t\t\t\t<table className='table table-sm table-hover table-nowrap mb-0'>\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Equipment & Telecom</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Cost</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Per new Employee</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>\n\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\ttitle='Add Major Expense'\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ fontSize: '22px' }}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Equipment & Telecom',\n\t\t\t\t\t\t\t\t\t\t\t\t\temployee: 'Per New Employee',\n\t\t\t\t\t\t\t\t\t\t\t\t\tbuttonTitle: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'equipmentAndTelecom',\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\thandleClickOpen();\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-plus add-icon'></i>\n\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t{expenseInputs &&\n\t\t\t\t\t\t\t\t\texpenseInputs\n\t\t\t\t\t\t\t\t\t\t.filter((exp) => exp.heading === 'equipmentAndTelecom')\n\t\t\t\t\t\t\t\t\t\t.map((expInp, id) => (\n\t\t\t\t\t\t\t\t\t\t\t<tr key={id}>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.value}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.cost}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.perEmployee}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-edit edit-icon'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Equipment & Telecom',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\temployee: 'Per New Employee',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbuttonTitle: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'equipmentAndTelecom',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleEditPlan(expInp);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className='fe fe-trash-2 delete-icon' onClick={() => handleDeletePlan(expInp._id)}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div className='card'>\n\t\t\t\t<div>\n\t\t\t\t\t<div className='table-responsive'>\n\t\t\t\t\t\t<table className='table table-sm table-hover table-nowrap mb-0'>\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Dues & Subscriptions</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Cost</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>\n\t\t\t\t\t\t\t\t\t\tPer new Employee <br /> (per month)\n\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>\n\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\ttitle='Add Major Expense'\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ fontSize: '22px' }}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Dues & Subscription',\n\t\t\t\t\t\t\t\t\t\t\t\t\temployee: 'Per New Employee',\n\t\t\t\t\t\t\t\t\t\t\t\t\tbuttonTitle: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'duesAnsSubscriptions',\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\thandleClickOpen();\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-plus add-icon'></i>\n\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t{expenseInputs &&\n\t\t\t\t\t\t\t\t\texpenseInputs\n\t\t\t\t\t\t\t\t\t\t.filter((exp) => exp.heading === 'duesAnsSubscriptions')\n\t\t\t\t\t\t\t\t\t\t.map((expInp, id) => (\n\t\t\t\t\t\t\t\t\t\t\t<tr key={id}>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.value}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.cost}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.perEmployee}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-edit edit-icon'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Dues & Subscriptions',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\temployee: 'Per New Employee',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbuttonTitle: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'duesAnsSubscriptions',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleEditPlan(expInp);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className='fe fe-trash-2 delete-icon' onClick={() => handleDeletePlan(expInp._id)}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div className='card'>\n\t\t\t\t<div>\n\t\t\t\t\t<div className='table-responsive'>\n\t\t\t\t\t\t<table className='table table-sm table-hover table-nowrap mb-0'>\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Travel & Entertainment</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Cost</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Per Employee (per month)</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>\n\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\ttitle='Add Major Expense'\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ fontSize: '22px' }}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Travel & Entertainment',\n\t\t\t\t\t\t\t\t\t\t\t\t\temployee: 'Per New Employee',\n\t\t\t\t\t\t\t\t\t\t\t\t\tbuttonTitle: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'travelAndEntertainment',\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\thandleClickOpen();\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-plus add-icon'></i>\n\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t{expenseInputs &&\n\t\t\t\t\t\t\t\t\texpenseInputs\n\t\t\t\t\t\t\t\t\t\t.filter((exp) => exp.heading === 'travelAndEntertainment')\n\t\t\t\t\t\t\t\t\t\t.map((expInp, id) => (\n\t\t\t\t\t\t\t\t\t\t\t<tr key={id}>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.value}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.cost}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.perEmployee}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-edit edit-icon'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Travel & Entertainments',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\temployee: 'Per New Employee',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbuttonTitle: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'travelAndEntertainment',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleEditPlan(expInp);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className='fe fe-trash-2 delete-icon' onClick={() => handleDeletePlan(expInp._id)}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div className='card'>\n\t\t\t\t<div>\n\t\t\t\t\t<div className='table-responsive'>\n\t\t\t\t\t\t<table className='table table-sm table-hover table-nowrap mb-0'>\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Others</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Cost</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Date</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>\n\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\ttitle='Add Major Expense'\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ fontSize: '22px' }}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Others',\n\t\t\t\t\t\t\t\t\t\t\t\t\temployee: 'Cost',\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: 'date',\n\t\t\t\t\t\t\t\t\t\t\t\t\tbuttonTitle: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'others',\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\thandleClickOpen();\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-plus add-icon'></i>\n\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t{expenseInputs &&\n\t\t\t\t\t\t\t\t\texpenseInputs\n\t\t\t\t\t\t\t\t\t\t.filter((exp) => exp.heading === 'others')\n\t\t\t\t\t\t\t\t\t\t.map((expInp, id) => (\n\t\t\t\t\t\t\t\t\t\t\t<tr key={id}>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.value}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.cost}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.date}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-edit edit-icon'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Others',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\temployee: 'Cost',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: 'date',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbuttonTitle: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'others',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleEditPlan(expInp);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className='fe fe-trash-2 delete-icon' onClick={() => handleDeletePlan(expInp._id)}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default ExpenseInputs;\n","/home/yamin/Downloads/work/finpro/src/views/RandD/RandDInputs.js",["211"],"/home/yamin/Downloads/work/finpro/src/views/RandD/ContractorExpense.js",["212"],"import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport { AuthContext } from '../../context/context';\nimport { getInputs } from '../../context/fetch-service';\nimport { addInputExpense, deleteInputExpense, updateInputExpense } from '../../context/input-service';\n\nfunction ExpenseInputs({ randdId, expenseInputs, setMsg, setErr, setAlertClass }) {\n\tconst { state, dispatch } = React.useContext(AuthContext);\n\n\tconst [open, setOpen] = React.useState(false);\n\tconst [dialogSetting, setDialogSetting] = React.useState({\n\t\ttitle: '',\n\t\tbuttonTitle: '',\n\t\theading: '',\n\t\ttype: '',\n\t});\n\tconst [loader, setLoader] = React.useState(false);\n\tconst [edit, setEdit] = React.useState(false);\n\n\tconst handleClickOpen = () => {\n\t\tsetOpen(true);\n\t};\n\n\tconst handleClose = (e) => {\n\t\te.preventDefault();\n\t\tsetOpen(false);\n\t};\n\n\tconst [expenseForm, setExpenseForm] = React.useState({\n\t\tvalue: '',\n\t\tcost: '',\n\t});\n\n\tconst handleInputChange = (e) => {\n\t\tconst { name, value } = e.target;\n\t\tsetExpenseForm((prevState) => {\n\t\t\treturn {\n\t\t\t\t...prevState,\n\t\t\t\t[name]: value,\n\t\t\t};\n\t\t});\n\t};\n\n\tconst handleSubmit = async (e, heading) => {\n\t\te.preventDefault();\n\n\t\tsetLoader(true);\n\t\ttry {\n\t\t\tif (edit) {\n\t\t\t\tlet update = await updateInputExpense({ inputMainId: randdId, inputId: expenseForm.inputId, data: expenseForm });\n\t\t\t\tif (update.status === 200 || update.status === 201) {\n\t\t\t\t\tlet inputs = await getInputs();\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: 'SET_INPUTS',\n\t\t\t\t\t\tpayload: inputs,\n\t\t\t\t\t});\n\n\t\t\t\t\tsetAlertClass('show');\n\t\t\t\t\tsetMsg(update.data.message);\n\t\t\t\t\tsetErr('');\n\t\t\t\t\tsetEdit(false);\n\t\t\t\t\tsetLoader(false);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlet add = await addInputExpense({ ...expenseForm, inputMainId: randdId, heading });\n\t\t\t\tif (add.status === 200 || add.status === 201) {\n\t\t\t\t\tlet inputs = await getInputs();\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: 'SET_INPUTS',\n\t\t\t\t\t\tpayload: inputs,\n\t\t\t\t\t});\n\n\t\t\t\t\tsetAlertClass('show');\n\t\t\t\t\tsetMsg(add.data.message);\n\t\t\t\t\tsetErr('');\n\t\t\t\t\tsetLoader(false);\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tsetAlertClass('show');\n\t\t\tsetMsg('');\n\t\t\tconsole.log(e);\n\t\t\tif (err.response && err.response.data) {\n\t\t\t\tif (err.response.data.error) {\n\t\t\t\t\tsetErr(err.response.data.error.message);\n\t\t\t\t} else if (err.response.data.errors) {\n\t\t\t\t\tlet errors = err.response.data.errors.map((err) => <li>{err.msg}</li>);\n\t\t\t\t\tsetErr(errors);\n\t\t\t\t} else {\n\t\t\t\t\tsetErr(err.response.data.message);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsetErr(err.message);\n\t\t\t}\n\t\t\tsetLoader(false);\n\t\t}\n\t\tsetExpenseForm({\n\t\t\tvalue: '',\n\t\t\tcost: '',\n\t\t});\n\t\tsetOpen(false);\n\t};\n\n\tconst handleDeletePlan = async (inputId) => {\n\t\ttry {\n\t\t\tlet deletePlanRes = await deleteInputExpense({ inputMainId: randdId, inputId });\n\n\t\t\tif (deletePlanRes.status === 200) {\n\t\t\t\tlet inputs = await getInputs();\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: 'SET_INPUTS',\n\t\t\t\t\tpayload: inputs,\n\t\t\t\t});\n\n\t\t\t\tsetAlertClass('show');\n\t\t\t\tsetMsg(deletePlanRes.data.message);\n\t\t\t\tsetErr('');\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tsetAlertClass('show');\n\t\t\tsetMsg('');\n\t\t\tif (e.response && e.response.data) {\n\t\t\t\tif (e.response.data.error) {\n\t\t\t\t\tsetErr(e.response.data.error.message);\n\t\t\t\t} else if (e.response.data.errors) {\n\t\t\t\t\tconsole.log(e.response.data.errors);\n\t\t\t\t\tlet errors = e.response.data.errors.map((err) => <li>{err.msg}</li>);\n\t\t\t\t\tsetErr(errors);\n\t\t\t\t} else {\n\t\t\t\t\tsetErr(e.response.data.message);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsetErr(e.message);\n\t\t\t}\n\t\t}\n\t\tsetOpen(false);\n\t};\n\n\tconst handleEditPlan = (expInp) => {\n\t\tsetEdit(true);\n\t\tsetOpen(true);\n\t\tsetExpenseForm({\n\t\t\tvalue: expInp.value,\n\t\t\tcost: expInp.cost,\n\t\t\tinputId: expInp._id,\n\t\t});\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<Dialog open={open} onClose={handleClose} aria-labelledby='alert-dialog-title' aria-describedby='alert-dialog-description'>\n\t\t\t\t<DialogTitle id='alert-dialog-title'>{edit ? 'Edit Expense' : 'Add Expense'}</DialogTitle>\n\t\t\t\t<form onSubmit={(e) => handleSubmit(e, dialogSetting.heading)}>\n\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t<div className='row g-3'>\n\t\t\t\t\t\t\t<div className='col-12 col-md-12 mb-3'>\n\t\t\t\t\t\t\t\t<label htmlFor='value' className='form-label'>\n\t\t\t\t\t\t\t\t\t{dialogSetting.title}\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<input type='text' name='value' value={expenseForm.value} onChange={handleInputChange} className='form-control' id='value' placeholder='Credit Card Processing Fees' required />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='row g-3'>\n\t\t\t\t\t\t\t<div className='col-12 col-md-12 mb-3'>\n\t\t\t\t\t\t\t\t<label htmlFor='cost' className='form-label'>\n\t\t\t\t\t\t\t\t\tCost\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<input type='text' name='cost' value={expenseForm.cost} onChange={handleInputChange} className='form-control' id='cost' placeholder='Cost' required />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</DialogContent>\n\t\t\t\t\t<DialogActions>\n\t\t\t\t\t\t<button className='btn btn-danger' onClick={handleClose}>\n\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button disabled={loader} type='submit' className='btn btn-primary' autoFocus>\n\t\t\t\t\t\t\t{loader && (\n\t\t\t\t\t\t\t\t<div className='spinner-border spinner-border-sm' role='status'>\n\t\t\t\t\t\t\t\t\t<span className='sr-only'>Loading...</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{!loader && (edit ? 'Update Expense' : 'Add Expense')}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</DialogActions>\n\t\t\t\t</form>\n\t\t\t</Dialog>\n\t\t\t<div className='card'>\n\t\t\t\t<div>\n\t\t\t\t\t<div className='table-responsive'>\n\t\t\t\t\t\t<table className='table table-sm table-hover table-nowrap mb-0'>\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Contractor</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Cost (per month) </th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>\n\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\ttitle='Add Major Expense'\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ fontSize: '22px' }}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Contractor',\n\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'contractor',\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\thandleClickOpen();\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-plus add-icon'></i>\n\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t{expenseInputs &&\n\t\t\t\t\t\t\t\t\texpenseInputs\n\t\t\t\t\t\t\t\t\t\t.filter((exp) => exp.heading === 'contractor')\n\t\t\t\t\t\t\t\t\t\t.map((expInp, id) => (\n\t\t\t\t\t\t\t\t\t\t\t<tr key={id}>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.value}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.cost}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-edit edit-icon'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Contractor',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'contractor',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleEditPlan(expInp);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className='fe fe-trash-2 delete-icon' onClick={() => handleDeletePlan(expInp._id)}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default ExpenseInputs;\n","/home/yamin/Downloads/work/finpro/src/views/GandA/ExpenseInputs.js",["213"],"import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport { AuthContext } from '../../context/context';\nimport { getInputs } from '../../context/fetch-service';\nimport { addInputExpense, deleteInputExpense, updateInputExpense } from '../../context/input-service';\n\nfunction ExpenseInputs({ gandaId, expenseInputs, setMsg, setErr, setAlertClass }) {\n\tconst { state, dispatch } = React.useContext(AuthContext);\n\n\tconst [open, setOpen] = React.useState(false);\n\tconst [dialogSetting, setDialogSetting] = React.useState({\n\t\ttitle: '',\n\t\tbuttonTitle: '',\n\t\theading: '',\n\t\ttype: '',\n\t});\n\tconst [loader, setLoader] = React.useState(false);\n\tconst [edit, setEdit] = React.useState(false);\n\n\tconst handleClickOpen = () => {\n\t\tsetOpen(true);\n\t};\n\n\tconst handleClose = (e) => {\n\t\te.preventDefault();\n\t\tsetOpen(false);\n\t};\n\n\tconst [expenseForm, setExpenseForm] = React.useState({\n\t\tvalue: '',\n\t\tcost: '',\n\t\tperEmployee: '',\n\t\tdate: '',\n\t});\n\n\tconst handleInputChange = (e) => {\n\t\tconst { name, value } = e.target;\n\t\tsetExpenseForm((prevState) => {\n\t\t\treturn {\n\t\t\t\t...prevState,\n\t\t\t\t[name]: value,\n\t\t\t};\n\t\t});\n\t};\n\n\tconst handleSubmit = async (e, heading) => {\n\t\te.preventDefault();\n\n\t\tsetLoader(true);\n\t\ttry {\n\t\t\tif (edit) {\n\t\t\t\tlet update = await updateInputExpense({ inputMainId: gandaId, inputId: expenseForm.inputId, data: expenseForm });\n\t\t\t\tif (update.status === 200 || update.status === 201) {\n\t\t\t\t\tlet inputs = await getInputs();\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: 'SET_INPUTS',\n\t\t\t\t\t\tpayload: inputs,\n\t\t\t\t\t});\n\n\t\t\t\t\tsetAlertClass('show');\n\t\t\t\t\tsetMsg(update.data.message);\n\t\t\t\t\tsetErr('');\n\t\t\t\t\tsetEdit(false);\n\t\t\t\t\tsetLoader(false);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlet add = await addInputExpense({ ...expenseForm, inputMainId: gandaId, heading });\n\t\t\t\tif (add.status === 200 || add.status === 201) {\n\t\t\t\t\tlet inputs = await getInputs();\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: 'SET_INPUTS',\n\t\t\t\t\t\tpayload: inputs,\n\t\t\t\t\t});\n\n\t\t\t\t\tsetAlertClass('show');\n\t\t\t\t\tsetMsg(add.data.message);\n\t\t\t\t\tsetErr('');\n\t\t\t\t\tsetLoader(false);\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tsetAlertClass('show');\n\t\t\tsetMsg('');\n\t\t\tconsole.log(e);\n\t\t\tif (err.response && err.response.data) {\n\t\t\t\tif (err.response.data.error) {\n\t\t\t\t\tsetErr(err.response.data.error.message);\n\t\t\t\t} else if (err.response.data.errors) {\n\t\t\t\t\tlet errors = err.response.data.errors.map((err) => <li>{err.msg}</li>);\n\t\t\t\t\tsetErr(errors);\n\t\t\t\t} else {\n\t\t\t\t\tsetErr(err.response.data.message);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsetErr(err.message);\n\t\t\t}\n\t\t\tsetLoader(false);\n\t\t}\n\t\tsetExpenseForm({\n\t\t\tvalue: '',\n\t\t\tcost: '',\n\t\t\tperEmployee: '',\n\t\t\tdate: '',\n\t\t});\n\t\tsetOpen(false);\n\t};\n\n\tconst handleDeletePlan = async (inputId) => {\n\t\ttry {\n\t\t\tlet deletePlanRes = await deleteInputExpense({ inputMainId: gandaId, inputId });\n\n\t\t\tif (deletePlanRes.status === 200) {\n\t\t\t\tlet inputs = await getInputs();\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: 'SET_INPUTS',\n\t\t\t\t\tpayload: inputs,\n\t\t\t\t});\n\n\t\t\t\tsetAlertClass('show');\n\t\t\t\tsetMsg(deletePlanRes.data.message);\n\t\t\t\tsetErr('');\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tsetAlertClass('show');\n\t\t\tsetMsg('');\n\t\t\tif (e.response && e.response.data) {\n\t\t\t\tif (e.response.data.error) {\n\t\t\t\t\tsetErr(e.response.data.error.message);\n\t\t\t\t} else if (e.response.data.errors) {\n\t\t\t\t\tconsole.log(e.response.data.errors);\n\t\t\t\t\tlet errors = e.response.data.errors.map((err) => <li>{err.msg}</li>);\n\t\t\t\t\tsetErr(errors);\n\t\t\t\t} else {\n\t\t\t\t\tsetErr(e.response.data.message);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsetErr(e.message);\n\t\t\t}\n\t\t}\n\t\tsetOpen(false);\n\t};\n\n\tconst handleEditPlan = (expInp) => {\n\t\tsetEdit(true);\n\t\tsetOpen(true);\n\t\tsetExpenseForm({\n\t\t\tvalue: expInp.value,\n\t\t\tcost: expInp.cost,\n\t\t\tperEmployee: expInp.perEmployee,\n\t\t\tdate: expInp.date,\n\t\t\tinputId: expInp._id,\n\t\t});\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<Dialog open={open} onClose={handleClose} aria-labelledby='alert-dialog-title' aria-describedby='alert-dialog-description'>\n\t\t\t\t<DialogTitle id='alert-dialog-title'>{edit ? 'Edit Expense' : 'Add Expense'}</DialogTitle>\n\t\t\t\t<form onSubmit={(e) => handleSubmit(e, dialogSetting.heading)}>\n\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t<div className='row g-3'>\n\t\t\t\t\t\t\t<div className='col-12 col-md-12 mb-3'>\n\t\t\t\t\t\t\t\t<label htmlFor='value' className='form-label'>\n\t\t\t\t\t\t\t\t\t{dialogSetting.title}\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<input type='text' name='value' value={expenseForm.value} onChange={handleInputChange} className='form-control' id='value' placeholder='Credit Card Processing Fees' required />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='row g-3'>\n\t\t\t\t\t\t\t<div className='col-12 col-md-12 mb-3'>\n\t\t\t\t\t\t\t\t<label htmlFor='cost' className='form-label'>\n\t\t\t\t\t\t\t\t\tCost\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<input type='text' name='cost' value={expenseForm.cost} onChange={handleInputChange} className='form-control' id='cost' placeholder='Cost' required />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='row g-3'>\n\t\t\t\t\t\t\t{dialogSetting.type === 'date' ? (\n\t\t\t\t\t\t\t\t<div className='col-12 col-md-12 mb-3'>\n\t\t\t\t\t\t\t\t\t<label htmlFor='date' className='form-label'>\n\t\t\t\t\t\t\t\t\t\tDate\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t<input type='date' name='date' value={expenseForm.date} onChange={handleInputChange} className='form-control' id='date' placeholder='Date' />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\tdialogSetting.employee && (\n\t\t\t\t\t\t\t\t\t<div className='col-12 col-md-12 mb-3'>\n\t\t\t\t\t\t\t\t\t\t<label htmlFor='perEmployee' className='form-label'>\n\t\t\t\t\t\t\t\t\t\t\t{dialogSetting.employee}\n\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t<input type='text' name='perEmployee' value={expenseForm.perEmployee} onChange={handleInputChange} className='form-control' id='perEmployee' placeholder={dialogSetting.employee} />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</DialogContent>\n\t\t\t\t\t<DialogActions>\n\t\t\t\t\t\t<button className='btn btn-danger' onClick={handleClose}>\n\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button disabled={loader} type='submit' className='btn btn-primary' autoFocus>\n\t\t\t\t\t\t\t{loader && (\n\t\t\t\t\t\t\t\t<div className='spinner-border spinner-border-sm' role='status'>\n\t\t\t\t\t\t\t\t\t<span className='sr-only'>Loading...</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{!loader && (edit ? 'Update Expense' : 'Add Expense')}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</DialogActions>\n\t\t\t\t</form>\n\t\t\t</Dialog>\n\n\t\t\t<div className='card'>\n\t\t\t\t<div>\n\t\t\t\t\t<div className='table-responsive'>\n\t\t\t\t\t\t<table className='table table-sm table-hover table-nowrap mb-0'>\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Tradeshows</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Cost (per quarter)</th>\n\n\t\t\t\t\t\t\t\t\t<th scope='col'>\n\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\ttitle='Add Major Expense'\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ fontSize: '22px' }}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Tradeshows',\n\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'tradeShows',\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\thandleClickOpen();\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-plus add-icon'></i>\n\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t{expenseInputs &&\n\t\t\t\t\t\t\t\t\texpenseInputs\n\t\t\t\t\t\t\t\t\t\t.filter((exp) => exp.heading === 'tradeShows')\n\t\t\t\t\t\t\t\t\t\t.map((expInp, id) => (\n\t\t\t\t\t\t\t\t\t\t\t<tr key={id}>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.value}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.cost}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-edit edit-icon'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Tradeshows',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'tradeShows',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleEditPlan(expInp);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className='fe fe-trash-2 delete-icon' onClick={() => handleDeletePlan(expInp._id)}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div className='card'>\n\t\t\t\t<div>\n\t\t\t\t\t<div className='table-responsive'>\n\t\t\t\t\t\t<table className='table table-sm table-hover table-nowrap mb-0'>\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Online Marketing</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Cost (per month)</th>\n\n\t\t\t\t\t\t\t\t\t<th scope='col'>\n\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\ttitle='Add Major Expense'\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ fontSize: '22px' }}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Online Marketing',\n\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'onlineMarketing',\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\thandleClickOpen();\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-plus add-icon'></i>\n\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t{expenseInputs &&\n\t\t\t\t\t\t\t\t\texpenseInputs\n\t\t\t\t\t\t\t\t\t\t.filter((exp) => exp.heading === 'onlineMarketing')\n\t\t\t\t\t\t\t\t\t\t.map((expInp, id) => (\n\t\t\t\t\t\t\t\t\t\t\t<tr key={id}>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.value}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.cost}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-edit edit-icon'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Online Marketing',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'onlineMarketing',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleEditPlan(expInp);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className='fe fe-trash-2 delete-icon' onClick={() => handleDeletePlan(expInp._id)}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div className='card'>\n\t\t\t\t<div>\n\t\t\t\t\t<div className='table-responsive'>\n\t\t\t\t\t\t<table className='table table-sm table-hover table-nowrap mb-0'>\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Equipment & Telecom</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Cost</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Per new Employee</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>\n\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\ttitle='Add Major Expense'\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ fontSize: '22px' }}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Equipment & Telecom',\n\t\t\t\t\t\t\t\t\t\t\t\t\temployee: 'Per New Employee',\n\t\t\t\t\t\t\t\t\t\t\t\t\tbuttonTitle: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'equipmentAndTelecom',\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\thandleClickOpen();\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-plus add-icon'></i>\n\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t{expenseInputs &&\n\t\t\t\t\t\t\t\t\texpenseInputs\n\t\t\t\t\t\t\t\t\t\t.filter((exp) => exp.heading === 'equipmentAndTelecom')\n\t\t\t\t\t\t\t\t\t\t.map((expInp, id) => (\n\t\t\t\t\t\t\t\t\t\t\t<tr key={id}>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.value}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.cost}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.perEmployee}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-edit edit-icon'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Equipment & Telecom',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\temployee: 'Per New Employee',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbuttonTitle: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'equipmentAndTelecom',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleEditPlan(expInp);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className='fe fe-trash-2 delete-icon' onClick={() => handleDeletePlan(expInp._id)}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div className='card'>\n\t\t\t\t<div>\n\t\t\t\t\t<div className='table-responsive'>\n\t\t\t\t\t\t<table className='table table-sm table-hover table-nowrap mb-0'>\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Dues & Subscriptions</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Cost</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>\n\t\t\t\t\t\t\t\t\t\tPer new Employee <br /> (per month)\n\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>\n\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\ttitle='Add Major Expense'\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ fontSize: '22px' }}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Dues & Subscription',\n\t\t\t\t\t\t\t\t\t\t\t\t\temployee: 'Per New Employee',\n\t\t\t\t\t\t\t\t\t\t\t\t\tbuttonTitle: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'duesAnsSubscriptions',\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\thandleClickOpen();\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-plus add-icon'></i>\n\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t{expenseInputs &&\n\t\t\t\t\t\t\t\t\texpenseInputs\n\t\t\t\t\t\t\t\t\t\t.filter((exp) => exp.heading === 'duesAnsSubscriptions')\n\t\t\t\t\t\t\t\t\t\t.map((expInp, id) => (\n\t\t\t\t\t\t\t\t\t\t\t<tr key={id}>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.value}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.cost}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.perEmployee}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-edit edit-icon'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Dues & Subscriptions',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\temployee: 'Per New Employee',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbuttonTitle: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'duesAnsSubscriptions',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleEditPlan(expInp);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className='fe fe-trash-2 delete-icon' onClick={() => handleDeletePlan(expInp._id)}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div className='card'>\n\t\t\t\t<div>\n\t\t\t\t\t<div className='table-responsive'>\n\t\t\t\t\t\t<table className='table table-sm table-hover table-nowrap mb-0'>\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Travel & Entertainment</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Cost</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Per Employee (per month)</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>\n\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\ttitle='Add Major Expense'\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ fontSize: '22px' }}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Travel & Entertainment',\n\t\t\t\t\t\t\t\t\t\t\t\t\temployee: 'Per New Employee',\n\t\t\t\t\t\t\t\t\t\t\t\t\tbuttonTitle: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'travelAndEntertainment',\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\thandleClickOpen();\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-plus add-icon'></i>\n\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t{expenseInputs &&\n\t\t\t\t\t\t\t\t\texpenseInputs\n\t\t\t\t\t\t\t\t\t\t.filter((exp) => exp.heading === 'travelAndEntertainment')\n\t\t\t\t\t\t\t\t\t\t.map((expInp, id) => (\n\t\t\t\t\t\t\t\t\t\t\t<tr key={id}>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.value}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.cost}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.perEmployee}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-edit edit-icon'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Travel & Entertainments',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\temployee: 'Per New Employee',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbuttonTitle: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'travelAndEntertainment',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleEditPlan(expInp);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className='fe fe-trash-2 delete-icon' onClick={() => handleDeletePlan(expInp._id)}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div className='card'>\n\t\t\t\t<div>\n\t\t\t\t\t<div className='table-responsive'>\n\t\t\t\t\t\t<table className='table table-sm table-hover table-nowrap mb-0'>\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Others</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Cost</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Date</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>\n\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\ttitle='Add Major Expense'\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ fontSize: '22px' }}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Others',\n\t\t\t\t\t\t\t\t\t\t\t\t\temployee: 'Cost',\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: 'date',\n\t\t\t\t\t\t\t\t\t\t\t\t\tbuttonTitle: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'others',\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\thandleClickOpen();\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-plus add-icon'></i>\n\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t{expenseInputs &&\n\t\t\t\t\t\t\t\t\texpenseInputs\n\t\t\t\t\t\t\t\t\t\t.filter((exp) => exp.heading === 'others')\n\t\t\t\t\t\t\t\t\t\t.map((expInp, id) => (\n\t\t\t\t\t\t\t\t\t\t\t<tr key={id}>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.value}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.cost}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.date}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-edit edit-icon'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Others',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\temployee: 'Cost',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: 'date',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbuttonTitle: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'others',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleEditPlan(expInp);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className='fe fe-trash-2 delete-icon' onClick={() => handleDeletePlan(expInp._id)}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default ExpenseInputs;\n","/home/yamin/Downloads/work/finpro/src/views/GandA/GandAInputs.js",["214"],"import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { addInputs, deleteInputs, updateInputs } from '../../context/input-service';\nimport { AuthContext } from '../../context/context';\nimport { getInputs } from '../../context/fetch-service';\nimport moment from 'moment';\n\nimport ContractExpense from './ContractorExpense';\n\nfunction GandAInputs({ ganda, setMsg, setErr, setAlertClass }) {\n\tconst { state, dispatch } = React.useContext(AuthContext);\n\n\tconst [open, setOpen] = React.useState(false);\n\tconst [loader, setLoader] = React.useState(false);\n\tconst [edit, setEdit] = React.useState(false);\n\n\tconst handleClickOpen = () => {\n\t\tsetOpen(true);\n\t};\n\n\tconst handleClose = (e) => {\n\t\te.preventDefault();\n\t\tsetOpen(false);\n\t};\n\n\tconst [gandaInputForm, setGandAForm] = React.useState({\n\t\thire: '',\n\t\tstartDate: '',\n\t\tsalary: '',\n\t\ttaxes: '',\n\t\tcommissions: '',\n\t\ttitle: 'ganda',\n\t});\n\n\tconst handleGandAInputs = (e) => {\n\t\tconst { name, value } = e.target;\n\t\tsetGandAForm((prevState) => {\n\t\t\treturn {\n\t\t\t\t...prevState,\n\t\t\t\t[name]: value,\n\t\t\t};\n\t\t});\n\t};\n\n\tconst handleSubmit = async (e) => {\n\t\tsetLoader(true);\n\t\te.preventDefault();\n\t\ttry {\n\t\t\tif (edit) {\n\t\t\t\tlet update = await updateInputs({ inputMainId: ganda._id, inputId: gandaInputForm.inputId, data: gandaInputForm });\n\t\t\t\tif (update.status === 200 || update.status === 201) {\n\t\t\t\t\tlet inputs = await getInputs();\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: 'SET_INPUTS',\n\t\t\t\t\t\tpayload: inputs,\n\t\t\t\t\t});\n\n\t\t\t\t\tsetAlertClass('show');\n\t\t\t\t\tsetMsg(update.data.message);\n\t\t\t\t\tsetErr('');\n\t\t\t\t\tsetEdit(false);\n\t\t\t\t\tsetLoader(false);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlet add = await addInputs(gandaInputForm);\n\t\t\t\tif (add.status === 200 || add.status === 201) {\n\t\t\t\t\tlet inputs = await getInputs();\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: 'SET_INPUTS',\n\t\t\t\t\t\tpayload: inputs,\n\t\t\t\t\t});\n\n\t\t\t\t\tsetAlertClass('show');\n\t\t\t\t\tsetMsg(add.data.message);\n\t\t\t\t\tsetErr('');\n\t\t\t\t\tsetLoader(false);\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tsetAlertClass('show');\n\t\t\tsetMsg('');\n\t\t\tconsole.log(e);\n\t\t\tif (err.response && err.response.data) {\n\t\t\t\tif (err.response.data.error) {\n\t\t\t\t\tsetErr(err.response.data.error.message);\n\t\t\t\t} else if (err.response.data.errors) {\n\t\t\t\t\tlet errors = err.response.data.errors.map((err) => <li>{err.msg}</li>);\n\t\t\t\t\tsetErr(errors);\n\t\t\t\t} else {\n\t\t\t\t\tsetErr(err.response.data.message);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsetErr(err.message);\n\t\t\t}\n\t\t\tsetLoader(false);\n\t\t}\n\t\tsetGandAForm({\n\t\t\thire: '',\n\t\t\tstartDate: '',\n\t\t\tsalary: '',\n\t\t\ttaxes: '',\n\t\t\tcommissions: '',\n\t\t\ttitle: 'ganda',\n\t\t});\n\t\tsetOpen(false);\n\t};\n\n\tconst handleDeleteInput = async (data) => {\n\t\ttry {\n\t\t\tlet deletePlanRes = await deleteInputs(data);\n\n\t\t\tif (deletePlanRes.status === 200) {\n\t\t\t\tlet inputs = await getInputs();\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: 'SET_INPUTS',\n\t\t\t\t\tpayload: inputs,\n\t\t\t\t});\n\n\t\t\t\tsetAlertClass('show');\n\t\t\t\tsetMsg(deletePlanRes.data.message);\n\t\t\t\tsetErr('');\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tsetAlertClass('show');\n\t\t\tsetMsg('');\n\t\t\tif (e.response && e.response.data) {\n\t\t\t\tif (e.response.data.error) {\n\t\t\t\t\tsetErr(e.response.data.error.message);\n\t\t\t\t} else if (e.response.data.errors) {\n\t\t\t\t\tconsole.log(e.response.data.errors);\n\t\t\t\t\tlet errors = e.response.data.errors.map((err) => <li>{err.msg}</li>);\n\t\t\t\t\tsetErr(errors);\n\t\t\t\t} else {\n\t\t\t\t\tsetErr(e.response.data.message);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsetErr(e.message);\n\t\t\t}\n\t\t}\n\t\tsetOpen(false);\n\t};\n\n\tconst handleEditInput = (input) => {\n\t\tsetEdit(true);\n\t\tsetOpen(true);\n\t\tsetGandAForm({\n\t\t\thire: input.hire,\n\t\t\tstartDate: moment(input.date).format('YYYY-MM-DD'),\n\t\t\tsalary: input.salary,\n\t\t\ttaxes: input.taxes,\n\t\t\tcommissions: input.commissions,\n\t\t\ttitle: 'ganda',\n\t\t\tinputId: input._id,\n\t\t});\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<div className='card'>\n\t\t\t\t<div>\n\t\t\t\t\t<div className='table-responsive'>\n\t\t\t\t\t\t<table className='table table-sm table-hover table-nowrap mb-0'>\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Hire</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Start Date</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Salary</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Taxes</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Commissions</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>\n\t\t\t\t\t\t\t\t\t\t<i title='Add G & A Inputs' onClick={handleClickOpen} style={{ fontSize: '22px', cursor: 'pointer' }} className='fe fe-plus add-icon'></i>\n\t\t\t\t\t\t\t\t\t\t<Dialog open={open} onClose={handleClose} aria-labelledby='alert-dialog-title' aria-describedby='alert-dialog-description'>\n\t\t\t\t\t\t\t\t\t\t\t<DialogTitle id='alert-dialog-title'>{edit ? 'Edit G & A' : 'Add G & A'}</DialogTitle>\n\n\t\t\t\t\t\t\t\t\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t\t\t\t\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='row g-3'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='col-12 col-md-6 mb-3'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label htmlFor='hire' className='form-label'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tHire\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type='text' name='hire' value={gandaInputForm.hire} onChange={handleGandAInputs} className='form-control' id='hire' placeholder='Hire' required />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='col-6 col-md-6 mb-3'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label htmlFor='startDate' className='form-label'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tStart Date\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type='date' name='startDate' value={gandaInputForm.startDate} onChange={handleGandAInputs} className='form-control' id='date' placeholder='Start Date' required />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='row g-3'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='col-12 col-md-12 mb-3'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label htmlFor='salary' className='form-label'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tSalary\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type='text' name='salary' value={gandaInputForm.salary} onChange={handleGandAInputs} className='form-control' id='salary' placeholder='Salary' required />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='row g-3'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='col-12 col-md-12 mb-3'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label htmlFor='taxes' className='form-label'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tTaxes\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type='text' name='taxes' value={gandaInputForm.taxes} onChange={handleGandAInputs} className='form-control' id='taxes' placeholder='Taxes' required />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='col-12 col-md-12 mb-3'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label htmlFor='commissions' className='form-label'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCommissions\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type='text' name='commissions' value={gandaInputForm.commissions} onChange={handleGandAInputs} className='form-control' id='commissions' placeholder='Commissions' required />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</DialogContent>\n\t\t\t\t\t\t\t\t\t\t\t\t<DialogActions>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<button className='btn btn-danger' onClick={handleClose}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<button disabled={loader} type='submit' className='btn btn-primary' autoFocus>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{loader && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='spinner-border spinner-border-sm' role='status'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='sr-only'>Loading...</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{!loader && (edit ? 'Update G & A' : 'Add G & A')}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t\t</DialogActions>\n\t\t\t\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t\t\t\t</Dialog>\n\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t{ganda &&\n\t\t\t\t\t\t\t\t\tganda.inputs &&\n\t\t\t\t\t\t\t\t\tganda.inputs.length > 0 &&\n\t\t\t\t\t\t\t\t\tganda.inputs.map((input, id) => (\n\t\t\t\t\t\t\t\t\t\t<tr key={id}>\n\t\t\t\t\t\t\t\t\t\t\t<td>{input.hire}</td>\n\t\t\t\t\t\t\t\t\t\t\t<td>{input.startDate}</td>\n\t\t\t\t\t\t\t\t\t\t\t<td>{input.salary}</td>\n\t\t\t\t\t\t\t\t\t\t\t<td>{input.taxes}</td>\n\t\t\t\t\t\t\t\t\t\t\t<td>{input.commissions}</td>\n\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<i title='Edit Plan' style={{ cursor: 'pointer' }} className='fe fe-edit edit-icon' onClick={() => handleEditInput(input)}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<i title='Delete Plan' style={{ cursor: 'pointer' }} onClick={() => handleDeleteInput({ inputMainId: ganda._id, inputId: input._id })} className='fe fe-trash-2 delete-icon'></i>\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div className='row'>\n\t\t\t\t<div className='col-6 col-xl-6'>{ganda && ganda._id && <ContractExpense gandaId={ganda._id} expenseInputs={ganda.majorExpenseInput} setMsg={setMsg} setErr={setErr} setAlertClass={setAlertClass} />}</div>\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\nexport default GandAInputs;\n","/home/yamin/Downloads/work/finpro/src/views/GandA/ContractorExpense.js",["215"],"import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport { AuthContext } from '../../context/context';\nimport { getInputs } from '../../context/fetch-service';\nimport { addInputExpense, deleteInputExpense, updateInputExpense } from '../../context/input-service';\n\nfunction ExpenseInputs({ gandaId, expenseInputs, setMsg, setErr, setAlertClass }) {\n\tconst { state, dispatch } = React.useContext(AuthContext);\n\n\tconst [open, setOpen] = React.useState(false);\n\tconst [dialogSetting, setDialogSetting] = React.useState({\n\t\ttitle: '',\n\t\tbuttonTitle: '',\n\t\theading: '',\n\t\ttype: '',\n\t});\n\tconst [loader, setLoader] = React.useState(false);\n\tconst [edit, setEdit] = React.useState(false);\n\n\tconst handleClickOpen = () => {\n\t\tsetOpen(true);\n\t};\n\n\tconst handleClose = (e) => {\n\t\te.preventDefault();\n\t\tsetOpen(false);\n\t};\n\n\tconst [expenseForm, setExpenseForm] = React.useState({\n\t\tvalue: '',\n\t\tcost: '',\n\t});\n\n\tconst handleInputChange = (e) => {\n\t\tconst { name, value } = e.target;\n\t\tsetExpenseForm((prevState) => {\n\t\t\treturn {\n\t\t\t\t...prevState,\n\t\t\t\t[name]: value,\n\t\t\t};\n\t\t});\n\t};\n\n\tconst handleSubmit = async (e, heading) => {\n\t\te.preventDefault();\n\n\t\tsetLoader(true);\n\t\ttry {\n\t\t\tif (edit) {\n\t\t\t\tlet update = await updateInputExpense({ inputMainId: gandaId, inputId: expenseForm.inputId, data: expenseForm });\n\t\t\t\tif (update.status === 200 || update.status === 201) {\n\t\t\t\t\tlet inputs = await getInputs();\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: 'SET_INPUTS',\n\t\t\t\t\t\tpayload: inputs,\n\t\t\t\t\t});\n\n\t\t\t\t\tsetAlertClass('show');\n\t\t\t\t\tsetMsg(update.data.message);\n\t\t\t\t\tsetErr('');\n\t\t\t\t\tsetEdit(false);\n\t\t\t\t\tsetLoader(false);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlet add = await addInputExpense({ ...expenseForm, inputMainId: gandaId, heading });\n\t\t\t\tif (add.status === 200 || add.status === 201) {\n\t\t\t\t\tlet inputs = await getInputs();\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: 'SET_INPUTS',\n\t\t\t\t\t\tpayload: inputs,\n\t\t\t\t\t});\n\n\t\t\t\t\tsetAlertClass('show');\n\t\t\t\t\tsetMsg(add.data.message);\n\t\t\t\t\tsetErr('');\n\t\t\t\t\tsetLoader(false);\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tsetAlertClass('show');\n\t\t\tsetMsg('');\n\t\t\tconsole.log(e);\n\t\t\tif (err.response && err.response.data) {\n\t\t\t\tif (err.response.data.error) {\n\t\t\t\t\tsetErr(err.response.data.error.message);\n\t\t\t\t} else if (err.response.data.errors) {\n\t\t\t\t\tlet errors = err.response.data.errors.map((err) => <li>{err.msg}</li>);\n\t\t\t\t\tsetErr(errors);\n\t\t\t\t} else {\n\t\t\t\t\tsetErr(err.response.data.message);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsetErr(err.message);\n\t\t\t}\n\t\t\tsetLoader(false);\n\t\t}\n\t\tsetExpenseForm({\n\t\t\tvalue: '',\n\t\t\tcost: '',\n\t\t});\n\t\tsetOpen(false);\n\t};\n\n\tconst handleDeletePlan = async (inputId) => {\n\t\ttry {\n\t\t\tlet deletePlanRes = await deleteInputExpense({ inputMainId: gandaId, inputId });\n\n\t\t\tif (deletePlanRes.status === 200) {\n\t\t\t\tlet inputs = await getInputs();\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: 'SET_INPUTS',\n\t\t\t\t\tpayload: inputs,\n\t\t\t\t});\n\n\t\t\t\tsetAlertClass('show');\n\t\t\t\tsetMsg(deletePlanRes.data.message);\n\t\t\t\tsetErr('');\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tsetAlertClass('show');\n\t\t\tsetMsg('');\n\t\t\tif (e.response && e.response.data) {\n\t\t\t\tif (e.response.data.error) {\n\t\t\t\t\tsetErr(e.response.data.error.message);\n\t\t\t\t} else if (e.response.data.errors) {\n\t\t\t\t\tconsole.log(e.response.data.errors);\n\t\t\t\t\tlet errors = e.response.data.errors.map((err) => <li>{err.msg}</li>);\n\t\t\t\t\tsetErr(errors);\n\t\t\t\t} else {\n\t\t\t\t\tsetErr(e.response.data.message);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsetErr(e.message);\n\t\t\t}\n\t\t}\n\t\tsetOpen(false);\n\t};\n\n\tconst handleEditPlan = (expInp) => {\n\t\tsetEdit(true);\n\t\tsetOpen(true);\n\t\tsetExpenseForm({\n\t\t\tvalue: expInp.value,\n\t\t\tcost: expInp.cost,\n\t\t\tinputId: expInp._id,\n\t\t});\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<Dialog open={open} onClose={handleClose} aria-labelledby='alert-dialog-title' aria-describedby='alert-dialog-description'>\n\t\t\t\t<DialogTitle id='alert-dialog-title'>{edit ? 'Edit Expense' : 'Add Expense'}</DialogTitle>\n\t\t\t\t<form onSubmit={(e) => handleSubmit(e, dialogSetting.heading)}>\n\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t<div className='row g-3'>\n\t\t\t\t\t\t\t<div className='col-12 col-md-12 mb-3'>\n\t\t\t\t\t\t\t\t<label htmlFor='value' className='form-label'>\n\t\t\t\t\t\t\t\t\t{dialogSetting.title}\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<input type='text' name='value' value={expenseForm.value} onChange={handleInputChange} className='form-control' id='value' placeholder='Credit Card Processing Fees' required />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='row g-3'>\n\t\t\t\t\t\t\t<div className='col-12 col-md-12 mb-3'>\n\t\t\t\t\t\t\t\t<label htmlFor='cost' className='form-label'>\n\t\t\t\t\t\t\t\t\tCost\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<input type='text' name='cost' value={expenseForm.cost} onChange={handleInputChange} className='form-control' id='cost' placeholder='Cost' required />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</DialogContent>\n\t\t\t\t\t<DialogActions>\n\t\t\t\t\t\t<button className='btn btn-danger' onClick={handleClose}>\n\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button disabled={loader} type='submit' className='btn btn-primary' autoFocus>\n\t\t\t\t\t\t\t{loader && (\n\t\t\t\t\t\t\t\t<div className='spinner-border spinner-border-sm' role='status'>\n\t\t\t\t\t\t\t\t\t<span className='sr-only'>Loading...</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{!loader && (edit ? 'Update Expense' : 'Add Expense')}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</DialogActions>\n\t\t\t\t</form>\n\t\t\t</Dialog>\n\t\t\t<div className='card'>\n\t\t\t\t<div>\n\t\t\t\t\t<div className='table-responsive'>\n\t\t\t\t\t\t<table className='table table-sm table-hover table-nowrap mb-0'>\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Contractor</th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>Cost (per month) </th>\n\t\t\t\t\t\t\t\t\t<th scope='col'>\n\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\ttitle='Add Major Expense'\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ fontSize: '22px' }}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Contractor',\n\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'contractor',\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\thandleClickOpen();\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-plus add-icon'></i>\n\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t{expenseInputs &&\n\t\t\t\t\t\t\t\t\texpenseInputs\n\t\t\t\t\t\t\t\t\t\t.filter((exp) => exp.heading === 'contractor')\n\t\t\t\t\t\t\t\t\t\t.map((expInp, id) => (\n\t\t\t\t\t\t\t\t\t\t\t<tr key={id}>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.value}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{expInp.cost}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='fe fe-edit edit-icon'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetDialogSetting({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: 'Contractor',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\theading: 'contractor',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleEditPlan(expInp);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className='fe fe-trash-2 delete-icon' onClick={() => handleDeletePlan(expInp._id)}></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default ExpenseInputs;\n","/home/yamin/Downloads/work/finpro/src/utils/getYearSum.js",[],{"ruleId":"216","replacedBy":"217"},{"ruleId":"218","replacedBy":"219"},{"ruleId":"220","severity":1,"message":"221","line":18,"column":8,"nodeType":"222","messageId":"223","endLine":18,"endColumn":15},{"ruleId":"216","replacedBy":"224"},{"ruleId":"218","replacedBy":"225"},{"ruleId":"220","severity":1,"message":"226","line":8,"column":61,"nodeType":"222","messageId":"223","endLine":8,"endColumn":67},{"ruleId":"227","severity":1,"message":"228","line":98,"column":20,"nodeType":"229","messageId":"230","endLine":98,"endColumn":22},{"ruleId":"220","severity":1,"message":"231","line":102,"column":7,"nodeType":"222","messageId":"223","endLine":102,"endColumn":17},{"ruleId":"220","severity":1,"message":"232","line":50,"column":20,"nodeType":"222","messageId":"223","endLine":50,"endColumn":24},{"ruleId":"220","severity":1,"message":"233","line":3,"column":10,"nodeType":"222","messageId":"223","endLine":3,"endColumn":13},{"ruleId":"220","severity":1,"message":"232","line":51,"column":20,"nodeType":"222","messageId":"223","endLine":51,"endColumn":24},{"ruleId":"220","severity":1,"message":"221","line":15,"column":8,"nodeType":"222","messageId":"223","endLine":15,"endColumn":15},{"ruleId":"220","severity":1,"message":"221","line":17,"column":8,"nodeType":"222","messageId":"223","endLine":17,"endColumn":15},{"ruleId":"220","severity":1,"message":"234","line":19,"column":10,"nodeType":"222","messageId":"223","endLine":19,"endColumn":15},{"ruleId":"216","replacedBy":"235"},{"ruleId":"218","replacedBy":"236"},{"ruleId":"220","severity":1,"message":"234","line":12,"column":10,"nodeType":"222","messageId":"223","endLine":12,"endColumn":15},{"ruleId":"220","severity":1,"message":"234","line":12,"column":10,"nodeType":"222","messageId":"223","endLine":12,"endColumn":15},{"ruleId":"220","severity":1,"message":"234","line":11,"column":10,"nodeType":"222","messageId":"223","endLine":11,"endColumn":15},{"ruleId":"220","severity":1,"message":"234","line":12,"column":10,"nodeType":"222","messageId":"223","endLine":12,"endColumn":15},{"ruleId":"220","severity":1,"message":"234","line":14,"column":10,"nodeType":"222","messageId":"223","endLine":14,"endColumn":15},{"ruleId":"220","severity":1,"message":"234","line":12,"column":10,"nodeType":"222","messageId":"223","endLine":12,"endColumn":15},{"ruleId":"220","severity":1,"message":"234","line":12,"column":10,"nodeType":"222","messageId":"223","endLine":12,"endColumn":15},{"ruleId":"220","severity":1,"message":"234","line":14,"column":10,"nodeType":"222","messageId":"223","endLine":14,"endColumn":15},{"ruleId":"220","severity":1,"message":"234","line":12,"column":10,"nodeType":"222","messageId":"223","endLine":12,"endColumn":15},{"ruleId":"220","severity":1,"message":"234","line":12,"column":10,"nodeType":"222","messageId":"223","endLine":12,"endColumn":15},{"ruleId":"220","severity":1,"message":"234","line":14,"column":10,"nodeType":"222","messageId":"223","endLine":14,"endColumn":15},{"ruleId":"220","severity":1,"message":"234","line":12,"column":10,"nodeType":"222","messageId":"223","endLine":12,"endColumn":15},{"ruleId":"220","severity":1,"message":"234","line":12,"column":10,"nodeType":"222","messageId":"223","endLine":12,"endColumn":15},{"ruleId":"220","severity":1,"message":"234","line":14,"column":10,"nodeType":"222","messageId":"223","endLine":14,"endColumn":15},{"ruleId":"220","severity":1,"message":"234","line":12,"column":10,"nodeType":"222","messageId":"223","endLine":12,"endColumn":15},"no-native-reassign",["237"],"no-negated-in-lhs",["238"],"no-unused-vars","'classes' is assigned a value but never used.","Identifier","unusedVar",["237"],["238"],"'radius' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'nextCorner' is assigned a value but never used.","'data' is assigned a value but never used.","'Bar' is defined but never used.","'state' is assigned a value but never used.",["237"],["238"],"no-global-assign","no-unsafe-negation"]